{
	"id": "924965b236b31ec7874cfb87fa4358d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"TOKEN ZARFIX (XZI).sol": {
				"content": "// SPDX-License-Identifier: MIT\n/// @version 1.0.1\npragma solidity 0.8.30;\n\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport {PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport {ReentrancyGuardUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @title ZarfiXToken\n * @notice A regulatory-compliant security token with whitelist enforcement, capped supply, and role-based access controls\n * @dev UUPS upgradeable ERC-20 token implementing batch processing, gas optimizations, and comprehensive security measures\n * @author ZarfiX Security Team\n * @custom:security-contact security@zarfix.com\n * @custom:version 1.0.1\n */\ncontract ZarfiXToken is \n    Initializable,\n    ERC20Upgradeable,\n    AccessControlUpgradeable,\n    PausableUpgradeable,\n    ReentrancyGuardUpgradeable,\n    UUPSUpgradeable\n{\n    /*//////////////////////////////////////////////////////////////\n                               CONSTANTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Role identifier for token issuers (mint/burn permissions)\n    bytes32 private constant _ISSUER_ROLE = keccak256(\"ISSUER_ROLE\");\n    \n    /// @notice Role identifier for compliance officers (whitelist management)\n    bytes32 private constant _COMPLIANCE_ROLE = keccak256(\"COMPLIANCE_ROLE\");\n    \n    /// @notice Role identifier for pausers (emergency freeze capability)\n    bytes32 private constant _PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    \n    /// @notice Role identifier for upgraders (contract upgrade authorization)\n    bytes32 private constant _UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    /// @notice Maximum number of addresses that can be processed in a single batch operation\n    uint256 private constant _MAX_BATCH = 100;\n\n    /*//////////////////////////////////////////////////////////////\n                            IMMUTABLE STATE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Maximum total supply that can ever be minted (immutable cap)\n    uint256 public immutable CAP;\n\n    /*//////////////////////////////////////////////////////////////\n                               STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Mapping of addresses approved for token transfers (KYC whitelist)\n    mapping(address account => bool whitelisted) private _whitelist;\n    \n    /// @notice Current total supply for gas-optimized reads\n    uint256 private _currentSupply;\n\n    /*//////////////////////////////////////////////////////////////\n                                EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Emitted when tokens are minted to an address\n    /// @param to The address receiving the minted tokens\n    /// @param amount The amount of tokens minted\n    event TokensMinted(address indexed to, uint256 indexed amount);\n\n    /// @notice Emitted when tokens are burned from an address\n    /// @param from The address from which tokens are burned\n    /// @param amount The amount of tokens burned\n    event TokensBurned(address indexed from, uint256 indexed amount);\n\n    /// @notice Emitted when whitelist status is updated for an address\n    /// @param account The address whose whitelist status changed\n    /// @param status The new whitelist status (true = whitelisted, false = removed)\n    event WhitelistUpdated(address indexed account, bool indexed status);\n\n    /// @notice Emitted when a batch operation is completed\n    /// @param offset The starting index of the batch\n    /// @param limit The number of items processed in the batch\n    event BatchProcessed(uint256 indexed offset, uint256 indexed limit);\n\n    /// @notice Emitted when admin role is transferred\n    /// @param previousAdmin The previous admin address\n    /// @param newAdmin The new admin address\n    event AdminChanged(address indexed previousAdmin, address indexed newAdmin);\n\n    /// @notice Emitted when contract is initialized\n    /// @param admin The initial admin address\n    /// @param name The token name\n    /// @param symbol The token symbol\n    event ContractInitialized(address indexed admin, string name, string symbol);\n\n    /// @notice Emitted when contract is paused\n    event ContractPaused(address indexed account);\n\n    /// @notice Emitted when contract is unpaused\n    event ContractUnpaused(address indexed account);\n\n    /// @notice Emitted when transfer occurs\n    /// @param from The sender address\n    /// @param to The recipient address\n    /// @param amount The amount transferred\n    event TokenTransfer(address indexed from, address indexed to, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                              ERRORS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Thrown when attempting to use zero address where invalid\n    error ZeroAddress();\n\n    /// @notice Thrown when attempting to mint tokens exceeding the cap\n    /// @param attempted The amount attempted to mint\n    /// @param cap The maximum allowed cap\n    error CapExceeded(uint256 attempted, uint256 cap);\n\n    /// @notice Thrown when attempting to mint or transfer zero tokens\n    error ZeroAmount();\n\n    /// @notice Thrown when non-whitelisted address attempts token operations\n    error NotWhitelisted();\n\n    /// @notice Thrown when attempting to burn more tokens than available\n    error InsufficientBalance();\n\n    /// @notice Thrown when batch size is invalid\n    /// @param requested The requested batch size\n    error InvalidBatchSize(uint256 requested);\n\n    /// @notice Thrown when array is empty\n    error EmptyArray();\n\n    /*//////////////////////////////////////////////////////////////\n                            CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Constructor sets the immutable cap and initializes storage to avoid zero-to-one writes\n    /// @param _cap The maximum total supply that can ever be minted\n    constructor(uint256 _cap) payable {\n        require(_cap != 0, \"Invalid cap amount\");\n        CAP = _cap;\n        // FIX #6: Initialize to 1 to avoid zero-to-one storage writes in future operations\n        _currentSupply = 1;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                           INITIALIZATION\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Initializes the upgradeable contract with token parameters and admin roles\n     * @param _name The name of the token\n     * @param _symbol The symbol of the token\n     * @param _admin The address to receive all administrative roles\n     * @dev This function can only be called once due to the initializer modifier\n     */\n    function initialize(\n        string calldata _name,\n        string calldata _symbol,\n        address _admin\n    ) external initializer {\n        // FIX #2: Zero address validation\n        require(_admin != address(0), \"Invalid admin address\");\n\n        __ERC20_init(_name, _symbol);\n        __AccessControl_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        __UUPSUpgradeable_init();\n\n        // Grant all roles to the admin\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n        _grantRole(_ISSUER_ROLE, _admin);\n        _grantRole(_COMPLIANCE_ROLE, _admin);\n        _grantRole(_PAUSER_ROLE, _admin);\n        _grantRole(_UPGRADER_ROLE, _admin);\n\n        // Admin is automatically whitelisted - initialize to true to avoid zero-to-one write\n        _whitelist[_admin] = true;\n        \n        emit WhitelistUpdated(_admin, true);\n        emit ContractInitialized(_admin, _name, _symbol);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                         MINTING & BURNING\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Mints new tokens to a specified address\n     * @param _to The address to receive the minted tokens\n     * @param _amount The amount of tokens to mint\n     * @dev Only callable by addresses with ISSUER_ROLE, respects total supply cap and whitelist\n     */\n    function mint(address _to, uint256 _amount) \n        external \n        nonReentrant\n        onlyRole(_ISSUER_ROLE) \n        whenNotPaused \n    {\n        // FIX #2: Zero address validation\n        require(_to != address(0), \"Invalid recipient address\");\n        require(_amount != 0, \"Invalid mint amount\");\n        \n        // FIX #7: Cache whitelist read for gas optimization\n        bool toWhitelisted = _whitelist[_to];\n        require(toWhitelisted, \"Recipient not whitelisted\");\n        \n        // FIX #7: Cache storage read for gas optimization\n        uint256 currentSupply_ = _currentSupply;\n        uint256 newSupply = currentSupply_ + _amount;\n        // FIX #8: Use strict inequality in require() for cheaper gas\n        require(newSupply < CAP + 1, \"Cap exceeded\");\n\n        // Effects\n        _currentSupply = newSupply;\n        _mint(_to, _amount);\n        \n        // Interactions\n        emit TokensMinted(_to, _amount);\n    }\n\n    /**\n     * @notice Burns tokens from a specified address\n     * @param _from The address from which to burn tokens\n     * @param _amount The amount of tokens to burn\n     * @dev Only callable by addresses with ISSUER_ROLE\n     */\n    function burn(address _from, uint256 _amount) \n        external \n        nonReentrant\n        onlyRole(_ISSUER_ROLE) \n        whenNotPaused \n    {\n        // FIX #2: Zero address validation\n        require(_from != address(0), \"Invalid burn address\");\n        require(_amount != 0, \"Invalid burn amount\");\n        \n        uint256 balance = balanceOf(_from);\n        // FIX #8: Use strict inequality in require() for cheaper gas\n        require(balance > _amount - 1, \"Insufficient balance\");\n\n        // FIX #7: Cache storage read for gas optimization\n        uint256 currentSupply_ = _currentSupply;\n        \n        // Effects\n        _currentSupply = currentSupply_ - _amount;\n        _burn(_from, _amount);\n        \n        // Interactions\n        emit TokensBurned(_from, _amount);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                         TRANSFER FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Transfers tokens from sender to recipient with whitelist enforcement\n     * @param _to The recipient address\n     * @param _amount The amount to transfer\n     * @return True if transfer succeeds\n     * @dev Overrides ERC20 transfer to add whitelist and pause checks\n     */\n    function transfer(address _to, uint256 _amount) \n        public \n        override \n        whenNotPaused \n        returns (bool) \n    {\n        // FIX #2: Zero address validation\n        require(_to != address(0), \"Invalid recipient address\");\n        require(_amount != 0, \"Invalid transfer amount\");\n        \n        address sender = _msgSender();\n        \n        // FIX #7: Cache whitelist reads for gas optimization\n        bool senderWhitelisted = _whitelist[sender];\n        bool toWhitelisted = _whitelist[_to];\n        \n        require(senderWhitelisted, \"Sender not whitelisted\");\n        require(toWhitelisted, \"Recipient not whitelisted\");\n        \n        // Effects & Interactions\n        _transfer(sender, _to, _amount);\n        emit TokenTransfer(sender, _to, _amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfers tokens from one address to another with whitelist enforcement\n     * @param _from The sender address\n     * @param _to The recipient address\n     * @param _amount The amount to transfer\n     * @return True if transfer succeeds\n     * @dev Overrides ERC20 transferFrom to add whitelist and pause checks\n     */\n    function transferFrom(address _from, address _to, uint256 _amount) \n        public \n        override \n        whenNotPaused \n        returns (bool) \n    {\n        // FIX #2: Zero address validation\n        require(_from != address(0), \"Invalid sender address\");\n        require(_to != address(0), \"Invalid recipient address\");\n        require(_amount != 0, \"Invalid transfer amount\");\n        \n        // FIX #7: Cache whitelist reads for gas optimization\n        bool fromWhitelisted = _whitelist[_from];\n        bool toWhitelisted = _whitelist[_to];\n        \n        require(fromWhitelisted, \"Sender not whitelisted\");\n        require(toWhitelisted, \"Recipient not whitelisted\");\n        \n        // Effects & Interactions\n        address spender = _msgSender();\n        _spendAllowance(_from, spender, _amount);\n        _transfer(_from, _to, _amount);\n        emit TokenTransfer(_from, _to, _amount);\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                       WHITELIST MANAGEMENT\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Adds an address to the whitelist\n     * @param _account The address to whitelist\n     * @dev Only callable by addresses with COMPLIANCE_ROLE\n     */\n    function addToWhitelist(address _account) \n        external \n        onlyRole(_COMPLIANCE_ROLE) \n    {\n        // FIX #2: Zero address validation\n        require(_account != address(0), \"Invalid account address\");\n        \n        // Effects\n        _whitelist[_account] = true;\n        \n        // Interactions\n        emit WhitelistUpdated(_account, true);\n    }\n\n    /**\n     * @notice Removes an address from the whitelist\n     * @param _account The address to remove from whitelist\n     * @dev Only callable by addresses with COMPLIANCE_ROLE\n     */\n    function removeFromWhitelist(address _account) \n        external \n        onlyRole(_COMPLIANCE_ROLE) \n    {\n        // FIX #2: Zero address validation\n        require(_account != address(0), \"Invalid account address\");\n        \n        // Effects\n        delete _whitelist[_account];\n        \n        // Interactions\n        emit WhitelistUpdated(_account, false);\n    }\n\n    /**\n     * @notice Batch processes whitelist additions with offset and limit to prevent DOS\n     * @param _accounts Array of addresses to whitelist\n     * @param _offset Starting index for processing\n     * @param _limit Maximum number of addresses to process\n     * @dev Implements bounded batch processing to avoid gas limit issues\n     */\n    function processBatch(\n        address[] calldata _accounts,\n        uint256 _offset,\n        uint256 _limit\n    ) external onlyRole(_COMPLIANCE_ROLE) {\n        // Cache array length for gas optimization\n        uint256 accountsLength = _accounts.length;\n        require(accountsLength != 0, \"Empty accounts array\");\n        require(_limit != 0, \"Invalid limit\");\n        // FIX #8: Use strict inequality in require() for cheaper gas\n        require(_limit < _MAX_BATCH + 1, \"Batch size too large\");\n        \n        uint256 end = _offset + _limit;\n        // FIX #4: Use non-strict inequality in if() for cheaper gas\n        if (end >= accountsLength + 1) {\n            end = accountsLength;\n        }\n\n        // Effects\n        for (uint256 i = _offset; i < end;) {\n            address account = _accounts[i];\n            // FIX #2: Zero address validation\n            require(account != address(0), \"Invalid account in batch\");\n            \n            _whitelist[account] = true;\n            \n            unchecked {\n                ++i;\n            }\n        }\n        \n        // Interactions\n        emit BatchProcessed(_offset, end - _offset);\n    }\n\n    /**\n     * @notice Batch processes whitelist removals with offset and limit to prevent DOS\n     * @param _accounts Array of addresses to remove from whitelist\n     * @param _offset Starting index for processing\n     * @param _limit Maximum number of addresses to process\n     * @dev Implements bounded batch processing to avoid gas limit issues\n     */\n    function batchRemoveFromWhitelist(\n        address[] calldata _accounts,\n        uint256 _offset,\n        uint256 _limit\n    ) external onlyRole(_COMPLIANCE_ROLE) {\n        // Cache array length for gas optimization\n        uint256 accountsLength = _accounts.length;\n        require(accountsLength != 0, \"Empty accounts array\");\n        require(_limit != 0, \"Invalid limit\");\n        // FIX #8: Use strict inequality in require() for cheaper gas\n        require(_limit < _MAX_BATCH + 1, \"Batch size too large\");\n        \n        uint256 end = _offset + _limit;\n        // FIX #4: Use non-strict inequality in if() for cheaper gas\n        if (end >= accountsLength + 1) {\n            end = accountsLength;\n        }\n\n        // Effects\n        for (uint256 i = _offset; i < end;) {\n            address account = _accounts[i];\n            // FIX #2: Zero address validation\n            require(account != address(0), \"Invalid account in batch\");\n            \n            delete _whitelist[account];\n            \n            unchecked {\n                ++i;\n            }\n        }\n        \n        // Interactions\n        emit BatchProcessed(_offset, end - _offset);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        PAUSE FUNCTIONALITY\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Pauses all token transfers and minting/burning operations\n     * @dev Only callable by addresses with PAUSER_ROLE, emits Paused event automatically\n     */\n    function pause() external onlyRole(_PAUSER_ROLE) {\n        _pause();\n        emit ContractPaused(_msgSender());\n    }\n\n    /**\n     * @notice Unpauses token transfers and minting/burning operations\n     * @dev Only callable by addresses with PAUSER_ROLE, emits Unpaused event automatically\n     */\n    function unpause() external onlyRole(_PAUSER_ROLE) {\n        _unpause();\n        emit ContractUnpaused(_msgSender());\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                           VIEW FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Checks if an address is whitelisted for token operations\n     * @param _account The address to check\n     * @return True if the address is whitelisted, false otherwise\n     */\n    function isWhitelisted(address _account) external view returns (bool) {\n        // FIX #2: Zero address validation\n        require(_account != address(0), \"Invalid account address\");\n        return _whitelist[_account];\n    }\n\n    /**\n     * @notice Returns the remaining tokens that can be minted before hitting the cap\n     * @return The number of tokens that can still be minted\n     */\n    function remainingMintable() external view returns (uint256) {\n        // FIX #7: Cache storage read for gas optimization\n        uint256 currentSupply_ = _currentSupply;\n        // Use ternary operator with optimal inequality\n        return CAP > currentSupply_ ? CAP - currentSupply_ : 0;\n    }\n\n    /**\n     * @notice Returns the current total supply of tokens\n     * @return The current total supply\n     * @dev Gas-optimized version using cached supply\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _currentSupply;\n    }\n\n    /**\n     * @notice Returns the maximum total supply cap\n     * @return The maximum total supply that can ever exist\n     */\n    function cap() external view returns (uint256) {\n        return CAP;\n    }\n\n    /**\n     * @notice Returns the maximum batch size for batch operations\n     * @return The maximum number of addresses that can be processed in one batch\n     */\n    function maxBatchSize() external pure returns (uint256) {\n        return _MAX_BATCH;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                         UPGRADE AUTHORIZATION\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Authorizes contract upgrades\n     * @param _newImplementation The address of the new implementation contract\n     * @dev Only addresses with UPGRADER_ROLE can authorize upgrades\n     */\n    function _authorizeUpgrade(address _newImplementation) \n        internal \n        view \n        override \n        onlyRole(_UPGRADER_ROLE) \n    {\n        // FIX #2: Zero address validation\n        require(_newImplementation != address(0), \"Invalid implementation address\");\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                           STORAGE GAP\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev Reserved storage space for future upgrades to maintain storage layout compatibility\n    uint256[47] private __gap;\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x731811109A6627C7235AB2C0B9DCED5AF6FE9A62D0E04BDDE36851144B2C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "496:5741:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x731811109A6627C7235AB2C0B9DCED5AF6FE9A62D0E04BDDE36851144B2C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "496:5741:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TOKEN ZARFIX (XZI).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TOKEN ZARFIX (XZI).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TOKEN ZARFIX (XZI).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB2 JUMPDEST 0xC7 0xE2 JUMPDEST GASPRICE PUSH19 0xF2D49562C0F1867ACB24CD8F54FCB3E7733989 JUMPF 0x4E66 NUMBER CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB2 JUMPDEST 0xC7 0xE2 JUMPDEST GASPRICE PUSH19 0xF2D49562C0F1867ACB24CD8F54FCB3E7733989 JUMPF 0x4E66 NUMBER CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TOKEN ZARFIX (XZI).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TOKEN ZARFIX (XZI).sol": {
				"ZarfiXToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_cap",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "attempted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "CapExceeded",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyArray",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								}
							],
							"name": "InvalidBatchSize",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotWhitelisted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "BatchProcessed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "ContractInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ContractPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ContractUnpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "WhitelistUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CAP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "batchRemoveFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBatchSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "processBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingMintable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ZarfiX Security Team",
						"custom:security-contact": "security@zarfix.com",
						"custom:version": "1.0.1",
						"details": "UUPS upgradeable ERC-20 token implementing batch processing, gas optimizations, and comprehensive security measures",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"CapExceeded(uint256,uint256)": [
								{
									"params": {
										"attempted": "The amount attempted to mint",
										"cap": "The maximum allowed cap"
									}
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidBatchSize(uint256)": [
								{
									"params": {
										"requested": "The requested batch size"
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"params": {
									"newAdmin": "The new admin address",
									"previousAdmin": "The previous admin address"
								}
							},
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"BatchProcessed(uint256,uint256)": {
								"params": {
									"limit": "The number of items processed in the batch",
									"offset": "The starting index of the batch"
								}
							},
							"ContractInitialized(address,string,string)": {
								"params": {
									"admin": "The initial admin address",
									"name": "The token name",
									"symbol": "The token symbol"
								}
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"TokenTransfer(address,address,uint256)": {
								"params": {
									"amount": "The amount transferred",
									"from": "The sender address",
									"to": "The recipient address"
								}
							},
							"TokensBurned(address,uint256)": {
								"params": {
									"amount": "The amount of tokens burned",
									"from": "The address from which tokens are burned"
								}
							},
							"TokensMinted(address,uint256)": {
								"params": {
									"amount": "The amount of tokens minted",
									"to": "The address receiving the minted tokens"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							},
							"WhitelistUpdated(address,bool)": {
								"params": {
									"account": "The address whose whitelist status changed",
									"status": "The new whitelist status (true = whitelisted, false = removed)"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addToWhitelist(address)": {
								"details": "Only callable by addresses with COMPLIANCE_ROLE",
								"params": {
									"_account": "The address to whitelist"
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"batchRemoveFromWhitelist(address[],uint256,uint256)": {
								"details": "Implements bounded batch processing to avoid gas limit issues",
								"params": {
									"_accounts": "Array of addresses to remove from whitelist",
									"_limit": "Maximum number of addresses to process",
									"_offset": "Starting index for processing"
								}
							},
							"burn(address,uint256)": {
								"details": "Only callable by addresses with ISSUER_ROLE",
								"params": {
									"_amount": "The amount of tokens to burn",
									"_from": "The address from which to burn tokens"
								}
							},
							"cap()": {
								"returns": {
									"_0": "The maximum total supply that can ever exist"
								}
							},
							"constructor": {
								"params": {
									"_cap": "The maximum total supply that can ever be minted"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(string,string,address)": {
								"details": "This function can only be called once due to the initializer modifier",
								"params": {
									"_admin": "The address to receive all administrative roles",
									"_name": "The name of the token",
									"_symbol": "The symbol of the token"
								}
							},
							"isWhitelisted(address)": {
								"params": {
									"_account": "The address to check"
								},
								"returns": {
									"_0": "True if the address is whitelisted, false otherwise"
								}
							},
							"maxBatchSize()": {
								"returns": {
									"_0": "The maximum number of addresses that can be processed in one batch"
								}
							},
							"mint(address,uint256)": {
								"details": "Only callable by addresses with ISSUER_ROLE, respects total supply cap and whitelist",
								"params": {
									"_amount": "The amount of tokens to mint",
									"_to": "The address to receive the minted tokens"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"pause()": {
								"details": "Only callable by addresses with PAUSER_ROLE, emits Paused event automatically"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"processBatch(address[],uint256,uint256)": {
								"details": "Implements bounded batch processing to avoid gas limit issues",
								"params": {
									"_accounts": "Array of addresses to whitelist",
									"_limit": "Maximum number of addresses to process",
									"_offset": "Starting index for processing"
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"remainingMintable()": {
								"returns": {
									"_0": "The number of tokens that can still be minted"
								}
							},
							"removeFromWhitelist(address)": {
								"details": "Only callable by addresses with COMPLIANCE_ROLE",
								"params": {
									"_account": "The address to remove from whitelist"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Gas-optimized version using cached supply",
								"returns": {
									"_0": "The current total supply"
								}
							},
							"transfer(address,uint256)": {
								"details": "Overrides ERC20 transfer to add whitelist and pause checks",
								"params": {
									"_amount": "The amount to transfer",
									"_to": "The recipient address"
								},
								"returns": {
									"_0": "True if transfer succeeds"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Overrides ERC20 transferFrom to add whitelist and pause checks",
								"params": {
									"_amount": "The amount to transfer",
									"_from": "The sender address",
									"_to": "The recipient address"
								},
								"returns": {
									"_0": "True if transfer succeeds"
								}
							},
							"unpause()": {
								"details": "Only callable by addresses with PAUSER_ROLE, emits Unpaused event automatically"
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "Reserved storage space for future upgrades to maintain storage layout compatibility"
							}
						},
						"title": "ZarfiXToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOKEN ZARFIX (XZI).sol\":1094:21114  contract ZarfiXToken is ... */\n  0xc0\n  0x40\n  dup2\n  swap1\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"TOKEN ZARFIX (XZI).sol\":6478:6709  constructor(uint256 _cap) payable {... */\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap1\n  dup2\n  swap1\n    /* \"TOKEN ZARFIX (XZI).sol\":1094:21114  contract ZarfiXToken is ... */\n  dup4\n    /* \"TOKEN ZARFIX (XZI).sol\":6478:6709  constructor(uint256 _cap) payable {... */\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"TOKEN ZARFIX (XZI).sol\":6530:6534  _cap */\n  dup1\n    /* \"TOKEN ZARFIX (XZI).sol\":6538:6539  0 */\n  0x00\n    /* \"TOKEN ZARFIX (XZI).sol\":6530:6539  _cap != 0 */\n  sub\n    /* \"TOKEN ZARFIX (XZI).sol\":6522:6562  require(_cap != 0, \"Invalid cap amount\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"TOKEN ZARFIX (XZI).sol\":6522:6562  require(_cap != 0, \"Invalid cap amount\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x12\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n  shl(0x72, 0x125b9d985b1a590818d85c08185b5bdd5b9d)\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:504   */\n  mstore\n    /* \"#utility.yul\":521:539   */\n  0x64\n  add\n    /* \"TOKEN ZARFIX (XZI).sol\":6522:6562  require(_cap != 0, \"Invalid cap amount\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"TOKEN ZARFIX (XZI).sol\":6572:6582  CAP = _cap */\n  0xa0\n  mstore\n    /* \"TOKEN ZARFIX (XZI).sol\":6701:6702  1 */\n  0x01\n    /* \"TOKEN ZARFIX (XZI).sol\":6684:6702  _currentSupply = 1 */\n  dup1\n  sstore\n    /* \"TOKEN ZARFIX (XZI).sol\":1094:21114  contract ZarfiXToken is ... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:198   */\ntag_2:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_11:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:545   */\ntag_9:\n    /* \"TOKEN ZARFIX (XZI).sol\":1094:21114  contract ZarfiXToken is ... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n  0x00\n  assignImmutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TOKEN ZARFIX (XZI).sol\":1094:21114  contract ZarfiXToken is ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52d1902d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xec81b483\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf76e95e5\n      eq\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xbfab3b9e\n      eq\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0x8ab1d681\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x52d1902d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0x2913daa0\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x2913daa0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x1663a066\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x1663a066\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x077f224a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":7241:8161  function initialize(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_44\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":16343:17513  function batchRemoveFromWhitelist(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_56\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":19556:19656  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":19635:19649  _currentSupply */\n      sload(0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":19556:19656  function totalSupply() public view override returns (uint256) {... */\n    tag_72:\n      mload(0x40)\n        /* \"#utility.yul\":3552:3577   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3525:3543   */\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":19556:19656  function totalSupply() public view override returns (uint256) {... */\n      tag_48\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":12250:13180  function transferFrom(address _from, address _to, uint256 _amount) ... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_72\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":20035:20125  function maxBatchSize() external pure returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":2199:2202  100 */\n      0x64\n        /* \"TOKEN ZARFIX (XZI).sol\":20035:20125  function maxBatchSize() external pure returns (uint256) {... */\n      jump(tag_72)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_56\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"#utility.yul\":4827:4863   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4815:4817   */\n      0x20\n        /* \"#utility.yul\":4800:4818   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      tag_48\n        /* \"#utility.yul\":4685:4869   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":19790:19864  function cap() external view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":19854:19857  CAP */\n      immutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n        /* \"TOKEN ZARFIX (XZI).sol\":19790:19864  function cap() external view returns (uint256) {... */\n      jump(tag_72)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_56\n      tag_109\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":18692:18917  function isWhitelisted(address _account) external view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      revert(0x00, 0x00)\n    tag_111:\n      pop\n      tag_44\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":18183:18306  function unpause() external onlyRole(_PAUSER_ROLE) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_56\n      tag_119\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":8627:9570  function mint(address _to, uint256 _amount) ... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_56\n      tag_122\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_18:\n      tag_56\n      tag_125\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      revert(0x00, 0x00)\n    tag_128:\n      pop\n      tag_72\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2496:2641  function paused() public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      revert(0x00, 0x00)\n    tag_132:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2625:2634  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2496:2641  function paused() public view virtual returns (bool) {... */\n      jump(tag_44)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      revert(0x00, 0x00)\n    tag_136:\n      pop\n      tag_72\n      tag_138\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":17881:17998  function pause() external onlyRole(_PAUSER_ROLE) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_56\n      tag_143\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":14100:14470  function removeFromWhitelist(address _account) ... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      revert(0x00, 0x00)\n    tag_144:\n      pop\n      tag_56\n      tag_146\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      revert(0x00, 0x00)\n    tag_148:\n      pop\n      tag_44\n      tag_150\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      revert(0x00, 0x00)\n    tag_153:\n      pop\n      tag_51\n      tag_155\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":9810:10603  function burn(address _from, uint256 _amount) ... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      revert(0x00, 0x00)\n    tag_157:\n      pop\n      tag_56\n      tag_159\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      revert(0x00, 0x00)\n    tag_161:\n      pop\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":11089:11901  function transfer(address _to, uint256 _amount) ... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_44\n      tag_167\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      revert(0x00, 0x00)\n    tag_170:\n      pop\n      tag_51\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":14822:15980  function processBatch(... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      revert(0x00, 0x00)\n    tag_174:\n      pop\n      tag_56\n      tag_176\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      revert(0x00, 0x00)\n    tag_178:\n      pop\n      tag_56\n      tag_180\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      revert(0x00, 0x00)\n    tag_182:\n      pop\n      tag_72\n      tag_184\n      calldatasize\n      0x04\n      tag_185\n      jump\t// in\n    tag_184:\n      tag_186\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":13541:13905  function addToWhitelist(address _account) ... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      revert(0x00, 0x00)\n    tag_188:\n      pop\n      tag_56\n      tag_190\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":2469:2497  uint256 public immutable CAP */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      revert(0x00, 0x00)\n    tag_192:\n      pop\n      tag_72\n      immutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n      dup2\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":19086:19382  function remainingMintable() external view returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      revert(0x00, 0x00)\n    tag_196:\n      pop\n      tag_72\n      tag_198\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_202\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n      swap2\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_208\n      jump\t// in\n    tag_209:\n      dup1\n      iszero\n      tag_210\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_211\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_210)\n    tag_211:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_212:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_212\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":7241:8161  function initialize(... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":7437:7457  _admin != address(0) */\n      dup7\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":7429:7483  require(_admin != address(0), \"Invalid admin address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":7429:7483  require(_admin != address(0), \"Invalid admin address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7054:7075   */\n      mstore\n        /* \"#utility.yul\":7111:7113   */\n      0x15\n        /* \"#utility.yul\":7091:7109   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7084:7114   */\n      mstore\n      shl(0x58, 0x496e76616c69642061646d696e2061646472657373)\n        /* \"#utility.yul\":7130:7148   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7123:7174   */\n      mstore\n        /* \"#utility.yul\":7191:7209   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":7429:7483  require(_admin != address(0), \"Invalid admin address\") */\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7522  __ERC20_init(_name, _symbol) */\n      tag_225\n        /* \"TOKEN ZARFIX (XZI).sol\":7507:7512  _name */\n      dup11\n      dup11\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7522  __ERC20_init(_name, _symbol) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      dup15\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup13\n      dup2\n      mstore\n      swap3\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7514:7521  _symbol */\n      dup13\n      swap2\n      pop\n      dup12\n      swap1\n      dup2\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7522  __ERC20_init(_name, _symbol) */\n      dup5\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":7514:7521  _symbol */\n      dup4\n      dup3\n      dup1\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7522  __ERC20_init(_name, _symbol) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7506  __ERC20_init */\n      tag_226\n      swap3\n      pop\n      pop\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7494:7522  __ERC20_init(_name, _symbol) */\n      jump\t// in\n    tag_225:\n        /* \"TOKEN ZARFIX (XZI).sol\":7532:7554  __AccessControl_init() */\n      tag_227\n        /* \"TOKEN ZARFIX (XZI).sol\":7532:7552  __AccessControl_init */\n      tag_228\n        /* \"TOKEN ZARFIX (XZI).sol\":7532:7554  __AccessControl_init() */\n      jump\t// in\n    tag_227:\n        /* \"TOKEN ZARFIX (XZI).sol\":7564:7581  __Pausable_init() */\n      tag_229\n        /* \"TOKEN ZARFIX (XZI).sol\":7564:7579  __Pausable_init */\n      tag_228\n        /* \"TOKEN ZARFIX (XZI).sol\":7564:7581  __Pausable_init() */\n      jump\t// in\n    tag_229:\n        /* \"TOKEN ZARFIX (XZI).sol\":7591:7615  __ReentrancyGuard_init() */\n      tag_231\n        /* \"TOKEN ZARFIX (XZI).sol\":7591:7613  __ReentrancyGuard_init */\n      tag_232\n        /* \"TOKEN ZARFIX (XZI).sol\":7591:7615  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_231:\n        /* \"TOKEN ZARFIX (XZI).sol\":7625:7649  __UUPSUpgradeable_init() */\n      tag_233\n        /* \"TOKEN ZARFIX (XZI).sol\":7625:7647  __UUPSUpgradeable_init */\n      tag_228\n        /* \"TOKEN ZARFIX (XZI).sol\":7625:7649  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_233:\n        /* \"TOKEN ZARFIX (XZI).sol\":7700:7738  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":7731:7737  _admin */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":7700:7710  _grantRole */\n      tag_236\n        /* \"TOKEN ZARFIX (XZI).sol\":7700:7738  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n      jump\t// in\n    tag_235:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7748:7780  _grantRole(_ISSUER_ROLE, _admin) */\n      tag_237\n        /* \"TOKEN ZARFIX (XZI).sol\":1567:1591  keccak256(\"ISSUER_ROLE\") */\n      0x114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122\n        /* \"TOKEN ZARFIX (XZI).sol\":7773:7779  _admin */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":7748:7758  _grantRole */\n      tag_236\n        /* \"TOKEN ZARFIX (XZI).sol\":7748:7780  _grantRole(_ISSUER_ROLE, _admin) */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7790:7826  _grantRole(_COMPLIANCE_ROLE, _admin) */\n      tag_238\n      mload(0x00)\n      codecopy(0x00, data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"TOKEN ZARFIX (XZI).sol\":7819:7825  _admin */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":7790:7800  _grantRole */\n      tag_236\n        /* \"TOKEN ZARFIX (XZI).sol\":7790:7826  _grantRole(_COMPLIANCE_ROLE, _admin) */\n      jump\t// in\n    tag_238:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7836:7868  _grantRole(_PAUSER_ROLE, _admin) */\n      tag_239\n        /* \"TOKEN ZARFIX (XZI).sol\":1878:1902  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"TOKEN ZARFIX (XZI).sol\":7861:7867  _admin */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":7836:7846  _grantRole */\n      tag_236\n        /* \"TOKEN ZARFIX (XZI).sol\":7836:7868  _grantRole(_PAUSER_ROLE, _admin) */\n      jump\t// in\n    tag_239:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7878:7912  _grantRole(_UPGRADER_ROLE, _admin) */\n      tag_240\n        /* \"TOKEN ZARFIX (XZI).sol\":2034:2060  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"TOKEN ZARFIX (XZI).sol\":7905:7911  _admin */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":7878:7888  _grantRole */\n      tag_236\n        /* \"TOKEN ZARFIX (XZI).sol\":7878:7912  _grantRole(_UPGRADER_ROLE, _admin) */\n      jump\t// in\n    tag_240:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8035  _whitelist[_admin] */\n      dup7\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8027  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8035  _whitelist[_admin] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8042  _whitelist[_admin] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":8038:8042  true */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8042  _whitelist[_admin] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":8066:8096  WhitelistUpdated(_admin, true) */\n      swap1\n      mload\n        /* \"TOKEN ZARFIX (XZI).sol\":8038:8042  true */\n      swap1\n      swap3\n        /* \"TOKEN ZARFIX (XZI).sol\":8017:8035  _whitelist[_admin] */\n      swap2\n        /* \"TOKEN ZARFIX (XZI).sol\":8066:8096  WhitelistUpdated(_admin, true) */\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n      swap2\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":8131:8137  _admin */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":8111:8154  ContractInitialized(_admin, _name, _symbol) */\n      and\n      0x2583210d6110b6d11e7775956ed0bea544d92d3760073450942661b426486365\n        /* \"TOKEN ZARFIX (XZI).sol\":8139:8144  _name */\n      dup12\n      dup12\n        /* \"TOKEN ZARFIX (XZI).sol\":8146:8153  _symbol */\n      dup12\n      dup12\n        /* \"TOKEN ZARFIX (XZI).sol\":8111:8154  ContractInitialized(_admin, _name, _symbol) */\n      mload(0x40)\n      tag_241\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8087:8137   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8075:8077   */\n      0x20\n        /* \"#utility.yul\":8060:8078   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":7241:8161  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5264:5268  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5334:5341  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5343:5348  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5326  _approve */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5366:5370  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":16343:17513  function batchRemoveFromWhitelist(... */\n    tag_70:\n      mload(0x00)\n      codecopy(0x00, data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_252:\n        /* \"TOKEN ZARFIX (XZI).sol\":16592:16601  _accounts */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":16567:16589  uint256 accountsLength */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":16626:16645  accountsLength != 0 */\n      dup2\n      swap1\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":16618:16670  require(accountsLength != 0, \"Empty accounts array\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":16618:16670  require(accountsLength != 0, \"Empty accounts array\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8332:8353   */\n      mstore\n        /* \"#utility.yul\":8389:8391   */\n      0x14\n        /* \"#utility.yul\":8369:8387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8362:8392   */\n      mstore\n      shl(0x60, 0x456d707479206163636f756e7473206172726179)\n        /* \"#utility.yul\":8408:8426   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8401:8451   */\n      mstore\n        /* \"#utility.yul\":8468:8486   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":16618:16670  require(accountsLength != 0, \"Empty accounts array\") */\n      tag_223\n        /* \"#utility.yul\":8148:8492   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":16618:16670  require(accountsLength != 0, \"Empty accounts array\") */\n    tag_255:\n        /* \"TOKEN ZARFIX (XZI).sol\":16688:16694  _limit */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":16698:16699  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":16688:16699  _limit != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":16680:16717  require(_limit != 0, \"Invalid limit\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8699:8701   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":16680:16717  require(_limit != 0, \"Invalid limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8681:8702   */\n      mstore\n        /* \"#utility.yul\":8738:8740   */\n      0x0d\n        /* \"#utility.yul\":8718:8736   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8711:8741   */\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081b1a5b5a5d)\n        /* \"#utility.yul\":8757:8775   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8750:8793   */\n      mstore\n        /* \"#utility.yul\":8810:8828   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":16680:16717  require(_limit != 0, \"Invalid limit\") */\n      tag_223\n        /* \"#utility.yul\":8497:8834   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":16680:16717  require(_limit != 0, \"Invalid limit\") */\n    tag_258:\n        /* \"TOKEN ZARFIX (XZI).sol\":16814:16828  _MAX_BATCH + 1 */\n      tag_261\n        /* \"TOKEN ZARFIX (XZI).sol\":2199:2202  100 */\n      0x64\n        /* \"TOKEN ZARFIX (XZI).sol\":16827:16828  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":16814:16828  _MAX_BATCH + 1 */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"TOKEN ZARFIX (XZI).sol\":16805:16811  _limit */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":16805:16828  _limit < _MAX_BATCH + 1 */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":16797:16853  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9303:9305   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":16797:16853  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9285:9306   */\n      mstore\n        /* \"#utility.yul\":9342:9344   */\n      0x14\n        /* \"#utility.yul\":9322:9340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9315:9345   */\n      mstore\n      shl(0x60, 0x42617463682073697a6520746f6f206c61726765)\n        /* \"#utility.yul\":9361:9379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9354:9404   */\n      mstore\n        /* \"#utility.yul\":9421:9439   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":16797:16853  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      tag_223\n        /* \"#utility.yul\":9101:9445   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":16797:16853  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n    tag_263:\n        /* \"TOKEN ZARFIX (XZI).sol\":16872:16883  uint256 end */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":16886:16902  _offset + _limit */\n      tag_266\n        /* \"TOKEN ZARFIX (XZI).sol\":16896:16902  _limit */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":16886:16893  _offset */\n      dup7\n        /* \"TOKEN ZARFIX (XZI).sol\":16886:16902  _offset + _limit */\n      tag_262\n      jump\t// in\n    tag_266:\n        /* \"TOKEN ZARFIX (XZI).sol\":16872:16902  uint256 end = _offset + _limit */\n      swap1\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":16992:17010  accountsLength + 1 */\n      tag_267\n        /* \"TOKEN ZARFIX (XZI).sol\":16992:17006  accountsLength */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":17009:17010  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":16992:17010  accountsLength + 1 */\n      tag_262\n      jump\t// in\n    tag_267:\n        /* \"TOKEN ZARFIX (XZI).sol\":16985:16988  end */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":16985:17010  end >= accountsLength + 1 */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":16981:17057  if (end >= accountsLength + 1) {... */\n      tag_268\n      jumpi\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":17032:17046  accountsLength */\n      dup1\n        /* \"TOKEN ZARFIX (XZI).sol\":16981:17057  if (end >= accountsLength + 1) {... */\n    tag_268:\n        /* \"TOKEN ZARFIX (XZI).sol\":17103:17110  _offset */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":17086:17421  for (uint256 i = _offset; i < end;) {... */\n    tag_269:\n        /* \"TOKEN ZARFIX (XZI).sol\":17116:17119  end */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":17112:17113  i */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":17112:17119  i < end */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":17086:17421  for (uint256 i = _offset; i < end;) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"TOKEN ZARFIX (XZI).sol\":17136:17151  address account */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":17154:17163  _accounts */\n      dup9\n      dup9\n        /* \"TOKEN ZARFIX (XZI).sol\":17164:17165  i */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":17154:17166  _accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_273\n      tag_274\n      jump\t// in\n    tag_273:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_275:\n        /* \"TOKEN ZARFIX (XZI).sol\":17136:17166  address account = _accounts[i] */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":17235:17256  account != address(0) */\n      dup2\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":17227:17285  require(account != address(0), \"Invalid account in batch\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9784:9786   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":17227:17285  require(account != address(0), \"Invalid account in batch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9766:9787   */\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x18\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9796:9826   */\n      mstore\n      shl(0x43, 0x092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d)\n        /* \"#utility.yul\":9842:9860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9835:9889   */\n      mstore\n        /* \"#utility.yul\":9906:9924   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":17227:17285  require(account != address(0), \"Invalid account in batch\") */\n      tag_223\n        /* \"#utility.yul\":9582:9930   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":17227:17285  require(account != address(0), \"Invalid account in batch\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":17319:17338  _whitelist[account] */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":17319:17329  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":17319:17338  _whitelist[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TOKEN ZARFIX (XZI).sol\":17312:17338  delete _whitelist[account] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":17393:17396  ++i */\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":17086:17421  for (uint256 i = _offset; i < end;) {... */\n      jump(tag_269)\n    tag_270:\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":17492:17505  end - _offset */\n      tag_279\n        /* \"TOKEN ZARFIX (XZI).sol\":17498:17505  _offset */\n      dup6\n        /* \"TOKEN ZARFIX (XZI).sol\":17492:17495  end */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":17492:17505  end - _offset */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"TOKEN ZARFIX (XZI).sol\":17468:17506  BatchProcessed(_offset, end - _offset) */\n      mload(0x40)\n        /* \"TOKEN ZARFIX (XZI).sol\":17483:17490  _offset */\n      dup7\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":17468:17506  BatchProcessed(_offset, end - _offset) */\n      0x3838459cd794256a3c29bb3186da72029a8036c0f596fee1bd526f8eb9493d41\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":16506:17513  {... */\n      pop\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":16343:17513  function batchRemoveFromWhitelist(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":12250:13180  function transferFrom(address _from, address _to, uint256 _amount) ... */\n    tag_80:\n        /* \"TOKEN ZARFIX (XZI).sol\":12392:12396  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1996  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      jump\t// in\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":12464:12483  _from != address(0) */\n      dup5\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":12456:12510  require(_from != address(0), \"Invalid sender address\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10270:10272   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":12456:12510  require(_from != address(0), \"Invalid sender address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10252:10273   */\n      mstore\n        /* \"#utility.yul\":10309:10311   */\n      0x16\n        /* \"#utility.yul\":10289:10307   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10282:10312   */\n      mstore\n      shl(0x50, 0x496e76616c69642073656e6465722061646472657373)\n        /* \"#utility.yul\":10328:10346   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10321:10373   */\n      mstore\n        /* \"#utility.yul\":10390:10408   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":12456:12510  require(_from != address(0), \"Invalid sender address\") */\n      tag_223\n        /* \"#utility.yul\":10068:10414   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":12456:12510  require(_from != address(0), \"Invalid sender address\") */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":12528:12545  _to != address(0) */\n      dup4\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":12520:12575  require(_to != address(0), \"Invalid recipient address\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_291\n      jump\t// in\n    tag_289:\n        /* \"TOKEN ZARFIX (XZI).sol\":12593:12600  _amount */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":12604:12605  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":12593:12605  _amount != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":12585:12633  require(_amount != 0, \"Invalid transfer amount\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10975:10977   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":12585:12633  require(_amount != 0, \"Invalid transfer amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10957:10978   */\n      mstore\n        /* \"#utility.yul\":11014:11016   */\n      0x17\n        /* \"#utility.yul\":10994:11012   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10987:11017   */\n      mstore\n      shl(0x4a, 0x125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d)\n        /* \"#utility.yul\":11033:11051   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11026:11079   */\n      mstore\n        /* \"#utility.yul\":11096:11114   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":12585:12633  require(_amount != 0, \"Invalid transfer amount\") */\n      tag_223\n        /* \"#utility.yul\":10773:11120   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":12585:12633  require(_amount != 0, \"Invalid transfer amount\") */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":12737:12754  _whitelist[_from] */\n      dup1\n      dup6\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":12714:12734  bool fromWhitelisted */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":12737:12754  _whitelist[_from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"TOKEN ZARFIX (XZI).sol\":12785:12800  _whitelist[_to] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TOKEN ZARFIX (XZI).sol\":12737:12754  _whitelist[_from] */\n      0xff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"TOKEN ZARFIX (XZI).sol\":12785:12800  _whitelist[_to] */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":12737:12754  _whitelist[_from] */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":12819:12869  require(fromWhitelisted, \"Sender not whitelisted\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11327:11329   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":12819:12869  require(fromWhitelisted, \"Sender not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11309:11330   */\n      mstore\n        /* \"#utility.yul\":11366:11368   */\n      0x16\n        /* \"#utility.yul\":11346:11364   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11339:11369   */\n      mstore\n      shl(0x52, 0x14d95b99195c881b9bdd081dda1a5d195b1a5cdd1959)\n        /* \"#utility.yul\":11385:11403   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11378:11430   */\n      mstore\n        /* \"#utility.yul\":11447:11465   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":12819:12869  require(fromWhitelisted, \"Sender not whitelisted\") */\n      tag_223\n        /* \"#utility.yul\":11125:11471   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":12819:12869  require(fromWhitelisted, \"Sender not whitelisted\") */\n    tag_295:\n        /* \"TOKEN ZARFIX (XZI).sol\":12887:12900  toWhitelisted */\n      dup1\n        /* \"TOKEN ZARFIX (XZI).sol\":12879:12930  require(toWhitelisted, \"Recipient not whitelisted\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_300\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"TOKEN ZARFIX (XZI).sol\":13023:13063  _spendAllowance(_from, spender, _amount) */\n      tag_302\n        /* \"TOKEN ZARFIX (XZI).sol\":13039:13044  _from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":13055:13062  _amount */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":13023:13038  _spendAllowance */\n      tag_303\n        /* \"TOKEN ZARFIX (XZI).sol\":13023:13063  _spendAllowance(_from, spender, _amount) */\n      jump\t// in\n    tag_302:\n        /* \"TOKEN ZARFIX (XZI).sol\":13073:13103  _transfer(_from, _to, _amount) */\n      tag_304\n        /* \"TOKEN ZARFIX (XZI).sol\":13083:13088  _from */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":13090:13093  _to */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":13095:13102  _amount */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":13073:13082  _transfer */\n      tag_305\n        /* \"TOKEN ZARFIX (XZI).sol\":13073:13103  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_304:\n        /* \"TOKEN ZARFIX (XZI).sol\":13139:13142  _to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":13118:13152  TokenTransfer(_from, _to, _amount) */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":13132:13137  _from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":13118:13152  TokenTransfer(_from, _to, _amount) */\n      and\n      0xd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de6\n        /* \"TOKEN ZARFIX (XZI).sol\":13144:13151  _amount */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":13118:13152  TokenTransfer(_from, _to, _amount) */\n      mload(0x40)\n      tag_306\n      swap2\n        /* \"#utility.yul\":3552:3577   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3525:3543   */\n      add\n      swap1\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":13118:13152  TokenTransfer(_from, _to, _amount) */\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":13169:13173  true */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":13162:13173  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2008:2009  _ */\n    tag_285:\n        /* \"TOKEN ZARFIX (XZI).sol\":12250:13180  function transferFrom(address _from, address _to, uint256 _amount) ... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_315:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_321:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":18692:18917  function isWhitelisted(address _account) external view returns (bool) {... */\n    tag_115:\n        /* \"TOKEN ZARFIX (XZI).sol\":18756:18760  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":18823:18845  _account != address(0) */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":18815:18873  require(_account != address(0), \"Invalid account address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_326\n      jump\t// in\n    tag_324:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":18890:18910  _whitelist[_account] */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":18890:18900  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":18890:18910  _whitelist[_account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":18692:18917  function isWhitelisted(address _account) external view returns (bool) {... */\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":18183:18306  function unpause() external onlyRole(_PAUSER_ROLE) {... */\n    tag_119:\n        /* \"TOKEN ZARFIX (XZI).sol\":1878:1902  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_328:\n        /* \"TOKEN ZARFIX (XZI).sol\":18244:18254  _unpause() */\n      tag_330\n        /* \"TOKEN ZARFIX (XZI).sol\":18244:18252  _unpause */\n      tag_331\n        /* \"TOKEN ZARFIX (XZI).sol\":18244:18254  _unpause() */\n      jump\t// in\n    tag_330:\n        /* \"TOKEN ZARFIX (XZI).sol\":18269:18299  ContractUnpaused(_msgSender()) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":18269:18299  ContractUnpaused(_msgSender()) */\n      0x5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d11766\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"TOKEN ZARFIX (XZI).sol\":18183:18306  function unpause() external onlyRole(_PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":8627:9570  function mint(address _to, uint256 _amount) ... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_334\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_334:\n        /* \"TOKEN ZARFIX (XZI).sol\":1567:1591  keccak256(\"ISSUER_ROLE\") */\n      0x114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_337\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1996  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      jump\t// in\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":8831:8848  _to != address(0) */\n      dup4\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":8823:8878  require(_to != address(0), \"Invalid recipient address\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_291\n      jump\t// in\n    tag_341:\n        /* \"TOKEN ZARFIX (XZI).sol\":8896:8903  _amount */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":8907:8908  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":8896:8908  _amount != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":8888:8932  require(_amount != 0, \"Invalid mint amount\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12384:12386   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":8888:8932  require(_amount != 0, \"Invalid mint amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12366:12387   */\n      mstore\n        /* \"#utility.yul\":12423:12425   */\n      0x13\n        /* \"#utility.yul\":12403:12421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12396:12426   */\n      mstore\n      shl(0x6a, 0x125b9d985b1a59081b5a5b9d08185b5bdd5b9d)\n        /* \"#utility.yul\":12442:12460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12435:12484   */\n      mstore\n        /* \"#utility.yul\":12501:12519   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":8888:8932  require(_amount != 0, \"Invalid mint amount\") */\n      tag_223\n        /* \"#utility.yul\":12182:12525   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":8888:8932  require(_amount != 0, \"Invalid mint amount\") */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":9033:9048  _whitelist[_to] */\n      dup4\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":9012:9030  bool toWhitelisted */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":9033:9048  _whitelist[_to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"TOKEN ZARFIX (XZI).sol\":9058:9109  require(toWhitelisted, \"Recipient not whitelisted\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_300\n      jump\t// in\n    tag_346:\n        /* \"TOKEN ZARFIX (XZI).sol\":9212:9226  _currentSupply */\n      sload(0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":9187:9209  uint256 currentSupply_ */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":9256:9280  currentSupply_ + _amount */\n      tag_348\n        /* \"TOKEN ZARFIX (XZI).sol\":9273:9280  _amount */\n      dup6\n        /* \"TOKEN ZARFIX (XZI).sol\":9212:9226  _currentSupply */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":9256:9280  currentSupply_ + _amount */\n      tag_262\n      jump\t// in\n    tag_348:\n        /* \"TOKEN ZARFIX (XZI).sol\":9236:9280  uint256 newSupply = currentSupply_ + _amount */\n      swap1\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":9380:9387  CAP + 1 */\n      tag_349\n        /* \"TOKEN ZARFIX (XZI).sol\":9380:9383  CAP */\n      immutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n        /* \"TOKEN ZARFIX (XZI).sol\":9386:9387  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":9380:9387  CAP + 1 */\n      tag_262\n      jump\t// in\n    tag_349:\n        /* \"TOKEN ZARFIX (XZI).sol\":9368:9377  newSupply */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":9368:9387  newSupply < CAP + 1 */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":9360:9404  require(newSupply < CAP + 1, \"Cap exceeded\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12732:12734   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":9360:9404  require(newSupply < CAP + 1, \"Cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12714:12735   */\n      mstore\n        /* \"#utility.yul\":12771:12773   */\n      0x0c\n        /* \"#utility.yul\":12751:12769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12744:12774   */\n      mstore\n      shl(0xa2, 0x10d85c08195e18d959591959)\n        /* \"#utility.yul\":12790:12808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12783:12825   */\n      mstore\n        /* \"#utility.yul\":12842:12860   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":9360:9404  require(newSupply < CAP + 1, \"Cap exceeded\") */\n      tag_223\n        /* \"#utility.yul\":12530:12866   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":9360:9404  require(newSupply < CAP + 1, \"Cap exceeded\") */\n    tag_350:\n        /* \"TOKEN ZARFIX (XZI).sol\":9434:9448  _currentSupply */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":9434:9460  _currentSupply = newSupply */\n      dup2\n      swap1\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":9470:9489  _mint(_to, _amount) */\n      tag_353\n        /* \"TOKEN ZARFIX (XZI).sol\":9476:9479  _to */\n      dup7\n        /* \"TOKEN ZARFIX (XZI).sol\":9481:9488  _amount */\n      dup7\n        /* \"TOKEN ZARFIX (XZI).sol\":9470:9475  _mint */\n      tag_354\n        /* \"TOKEN ZARFIX (XZI).sol\":9470:9489  _mint(_to, _amount) */\n      jump\t// in\n    tag_353:\n        /* \"TOKEN ZARFIX (XZI).sol\":9537:9563  TokensMinted(_to, _amount) */\n      mload(0x40)\n        /* \"TOKEN ZARFIX (XZI).sol\":9555:9562  _amount */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":9537:9563  TokensMinted(_to, _amount) */\n      dup9\n      and\n      swap1\n      0x3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":8770:9570  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3426:3427  _ */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      mload(0x00)\n      codecopy(0x00, data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n    tag_355:\n        /* \"TOKEN ZARFIX (XZI).sol\":8627:9570  function mint(address _to, uint256 _amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_362\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_366:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4152:4159  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      swap1\n      dup2\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":17881:17998  function pause() external onlyRole(_PAUSER_ROLE) {... */\n    tag_143:\n        /* \"TOKEN ZARFIX (XZI).sol\":1878:1902  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_375:\n        /* \"TOKEN ZARFIX (XZI).sol\":17940:17948  _pause() */\n      tag_377\n        /* \"TOKEN ZARFIX (XZI).sol\":17940:17946  _pause */\n      tag_378\n        /* \"TOKEN ZARFIX (XZI).sol\":17940:17948  _pause() */\n      jump\t// in\n    tag_377:\n        /* \"TOKEN ZARFIX (XZI).sol\":17963:17991  ContractPaused(_msgSender()) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":17963:17991  ContractPaused(_msgSender()) */\n      0x81990fd9a5c552b8e3677917d8a03c07678f0d2cb68f88b634aca2022e9bd19f\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"TOKEN ZARFIX (XZI).sol\":17881:17998  function pause() external onlyRole(_PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":14100:14470  function removeFromWhitelist(address _account) ... */\n    tag_147:\n      mload(0x00)\n      codecopy(0x00, data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":14267:14289  _account != address(0) */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":14259:14317  require(_account != address(0), \"Invalid account address\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_326\n      jump\t// in\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14382  _whitelist[_account] */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14372  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14382  _whitelist[_account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TOKEN ZARFIX (XZI).sol\":14355:14382  delete _whitelist[_account] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":14430:14463  WhitelistUpdated(_account, false) */\n      mload\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14372  _whitelist */\n      swap1\n      swap2\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14382  _whitelist[_account] */\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":14430:14463  WhitelistUpdated(_account, false) */\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":14362:14372  _whitelist */\n      dup4\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":14430:14463  WhitelistUpdated(_account, false) */\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":14100:14470  function removeFromWhitelist(address _account) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n      swap2\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n        /* \"TOKEN ZARFIX (XZI).sol\":9810:10603  function burn(address _from, uint256 _amount) ... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_395\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_395:\n        /* \"TOKEN ZARFIX (XZI).sol\":1567:1591  keccak256(\"ISSUER_ROLE\") */\n      0x114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1996  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      jump\t// in\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":10016:10035  _from != address(0) */\n      dup4\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":10008:10060  require(_from != address(0), \"Invalid burn address\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13073:13075   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":10008:10060  require(_from != address(0), \"Invalid burn address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13055:13076   */\n      mstore\n        /* \"#utility.yul\":13112:13114   */\n      0x14\n        /* \"#utility.yul\":13092:13110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13085:13115   */\n      mstore\n      shl(0x60, 0x496e76616c6964206275726e2061646472657373)\n        /* \"#utility.yul\":13131:13149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13124:13174   */\n      mstore\n        /* \"#utility.yul\":13191:13209   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":10008:10060  require(_from != address(0), \"Invalid burn address\") */\n      tag_223\n        /* \"#utility.yul\":12871:13215   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":10008:10060  require(_from != address(0), \"Invalid burn address\") */\n    tag_401:\n        /* \"TOKEN ZARFIX (XZI).sol\":10078:10085  _amount */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":10089:10090  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":10078:10090  _amount != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":10070:10114  require(_amount != 0, \"Invalid burn amount\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13422:13424   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":10070:10114  require(_amount != 0, \"Invalid burn amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13404:13425   */\n      mstore\n        /* \"#utility.yul\":13461:13463   */\n      0x13\n        /* \"#utility.yul\":13441:13459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13434:13464   */\n      mstore\n      shl(0x6a, 0x125b9d985b1a5908189d5c9b88185b5bdd5b9d)\n        /* \"#utility.yul\":13480:13498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13473:13522   */\n      mstore\n        /* \"#utility.yul\":13539:13557   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":10070:10114  require(_amount != 0, \"Invalid burn amount\") */\n      tag_223\n        /* \"#utility.yul\":13220:13563   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":10070:10114  require(_amount != 0, \"Invalid burn amount\") */\n    tag_404:\n        /* \"TOKEN ZARFIX (XZI).sol\":10133:10148  uint256 balance */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":10151:10167  balanceOf(_from) */\n      tag_407\n        /* \"TOKEN ZARFIX (XZI).sol\":10161:10166  _from */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":10151:10160  balanceOf */\n      tag_139\n        /* \"TOKEN ZARFIX (XZI).sol\":10151:10167  balanceOf(_from) */\n      jump\t// in\n    tag_407:\n        /* \"TOKEN ZARFIX (XZI).sol\":10133:10167  uint256 balance = balanceOf(_from) */\n      swap1\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":10265:10276  _amount - 1 */\n      tag_408\n        /* \"TOKEN ZARFIX (XZI).sol\":10275:10276  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":10265:10272  _amount */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":10265:10276  _amount - 1 */\n      tag_280\n      jump\t// in\n    tag_408:\n        /* \"TOKEN ZARFIX (XZI).sol\":10255:10262  balance */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":10255:10276  balance > _amount - 1 */\n      gt\n        /* \"TOKEN ZARFIX (XZI).sol\":10247:10301  require(balance > _amount - 1, \"Insufficient balance\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13770:13772   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":10247:10301  require(balance > _amount - 1, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13752:13773   */\n      mstore\n        /* \"#utility.yul\":13809:13811   */\n      0x14\n        /* \"#utility.yul\":13789:13807   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13782:13812   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":13828:13846   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13821:13871   */\n      mstore\n        /* \"#utility.yul\":13888:13906   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":10247:10301  require(balance > _amount - 1, \"Insufficient balance\") */\n      tag_223\n        /* \"#utility.yul\":13568:13912   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":10247:10301  require(balance > _amount - 1, \"Insufficient balance\") */\n    tag_409:\n        /* \"TOKEN ZARFIX (XZI).sol\":10396:10410  _currentSupply */\n      sload(0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":10465:10489  currentSupply_ - _amount */\n      tag_412\n        /* \"TOKEN ZARFIX (XZI).sol\":10482:10489  _amount */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":10396:10410  _currentSupply */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":10465:10489  currentSupply_ - _amount */\n      tag_280\n      jump\t// in\n    tag_412:\n        /* \"TOKEN ZARFIX (XZI).sol\":10448:10462  _currentSupply */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":10448:10489  _currentSupply = currentSupply_ - _amount */\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":10499:10520  _burn(_from, _amount) */\n      tag_413\n        /* \"TOKEN ZARFIX (XZI).sol\":10505:10510  _from */\n      dup6\n        /* \"TOKEN ZARFIX (XZI).sol\":10512:10519  _amount */\n      dup6\n        /* \"TOKEN ZARFIX (XZI).sol\":10499:10504  _burn */\n      tag_414\n        /* \"TOKEN ZARFIX (XZI).sol\":10499:10520  _burn(_from, _amount) */\n      jump\t// in\n    tag_413:\n        /* \"TOKEN ZARFIX (XZI).sol\":10568:10596  TokensBurned(_from, _amount) */\n      mload(0x40)\n        /* \"TOKEN ZARFIX (XZI).sol\":10588:10595  _amount */\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":10568:10596  TokensBurned(_from, _amount) */\n      dup8\n      and\n      swap1\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":9955:10603  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3426:3427  _ */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      mload(0x00)\n      codecopy(0x00, data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":11089:11901  function transfer(address _to, uint256 _amount) ... */\n    tag_168:\n        /* \"TOKEN ZARFIX (XZI).sol\":11212:11216  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1996  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      jump\t// in\n    tag_417:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":11284:11301  _to != address(0) */\n      dup4\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":11276:11331  require(_to != address(0), \"Invalid recipient address\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_291\n      jump\t// in\n    tag_419:\n        /* \"TOKEN ZARFIX (XZI).sol\":11349:11356  _amount */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":11360:11361  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":11349:11361  _amount != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":11341:11389  require(_amount != 0, \"Invalid transfer amount\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10975:10977   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":11341:11389  require(_amount != 0, \"Invalid transfer amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10957:10978   */\n      mstore\n        /* \"#utility.yul\":11014:11016   */\n      0x17\n        /* \"#utility.yul\":10994:11012   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10987:11017   */\n      mstore\n      shl(0x4a, 0x125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d)\n        /* \"#utility.yul\":11033:11051   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11026:11079   */\n      mstore\n        /* \"#utility.yul\":11096:11114   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":11341:11389  require(_amount != 0, \"Invalid transfer amount\") */\n      tag_223\n        /* \"#utility.yul\":10773:11120   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":11341:11389  require(_amount != 0, \"Invalid transfer amount\") */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"TOKEN ZARFIX (XZI).sol\":11408:11422  address sender */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":11543:11561  _whitelist[sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":11592:11607  _whitelist[_to] */\n      dup8\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"TOKEN ZARFIX (XZI).sol\":11543:11561  _whitelist[sender] */\n      0xff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"TOKEN ZARFIX (XZI).sol\":11592:11607  _whitelist[_to] */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":11543:11561  _whitelist[sender] */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":11626:11678  require(senderWhitelisted, \"Sender not whitelisted\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11327:11329   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":11626:11678  require(senderWhitelisted, \"Sender not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11309:11330   */\n      mstore\n        /* \"#utility.yul\":11366:11368   */\n      0x16\n        /* \"#utility.yul\":11346:11364   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11339:11369   */\n      mstore\n      shl(0x52, 0x14d95b99195c881b9bdd081dda1a5d195b1a5cdd1959)\n        /* \"#utility.yul\":11385:11403   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11378:11430   */\n      mstore\n        /* \"#utility.yul\":11447:11465   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":11626:11678  require(senderWhitelisted, \"Sender not whitelisted\") */\n      tag_223\n        /* \"#utility.yul\":11125:11471   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":11626:11678  require(senderWhitelisted, \"Sender not whitelisted\") */\n    tag_424:\n        /* \"TOKEN ZARFIX (XZI).sol\":11696:11709  toWhitelisted */\n      dup1\n        /* \"TOKEN ZARFIX (XZI).sol\":11688:11739  require(toWhitelisted, \"Recipient not whitelisted\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_300\n      jump\t// in\n    tag_426:\n        /* \"TOKEN ZARFIX (XZI).sol\":11792:11823  _transfer(sender, _to, _amount) */\n      tag_428\n        /* \"TOKEN ZARFIX (XZI).sol\":11802:11808  sender */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":11810:11813  _to */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":11815:11822  _amount */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":11792:11801  _transfer */\n      tag_305\n        /* \"TOKEN ZARFIX (XZI).sol\":11792:11823  _transfer(sender, _to, _amount) */\n      jump\t// in\n    tag_428:\n        /* \"TOKEN ZARFIX (XZI).sol\":11860:11863  _to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":11838:11873  TokenTransfer(sender, _to, _amount) */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":11852:11858  sender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":11838:11873  TokenTransfer(sender, _to, _amount) */\n      and\n      0xd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de6\n        /* \"TOKEN ZARFIX (XZI).sol\":11865:11872  _amount */\n      dup8\n        /* \"TOKEN ZARFIX (XZI).sol\":11838:11873  TokenTransfer(sender, _to, _amount) */\n      mload(0x40)\n      tag_429\n      swap2\n        /* \"#utility.yul\":3552:3577   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3525:3543   */\n      add\n      swap1\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":11838:11873  TokenTransfer(sender, _to, _amount) */\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":11890:11894  true */\n      0x01\n      swap6\n        /* \"TOKEN ZARFIX (XZI).sol\":11089:11901  function transfer(address _to, uint256 _amount) ... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":14822:15980  function processBatch(... */\n    tag_177:\n      mload(0x00)\n      codecopy(0x00, data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_431\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_431:\n        /* \"TOKEN ZARFIX (XZI).sol\":15059:15068  _accounts */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":15034:15056  uint256 accountsLength */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":15093:15112  accountsLength != 0 */\n      dup2\n      swap1\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":15085:15137  require(accountsLength != 0, \"Empty accounts array\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":15085:15137  require(accountsLength != 0, \"Empty accounts array\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8332:8353   */\n      mstore\n        /* \"#utility.yul\":8389:8391   */\n      0x14\n        /* \"#utility.yul\":8369:8387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8362:8392   */\n      mstore\n      shl(0x60, 0x456d707479206163636f756e7473206172726179)\n        /* \"#utility.yul\":8408:8426   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8401:8451   */\n      mstore\n        /* \"#utility.yul\":8468:8486   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":15085:15137  require(accountsLength != 0, \"Empty accounts array\") */\n      tag_223\n        /* \"#utility.yul\":8148:8492   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":15085:15137  require(accountsLength != 0, \"Empty accounts array\") */\n    tag_433:\n        /* \"TOKEN ZARFIX (XZI).sol\":15155:15161  _limit */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":15165:15166  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":15155:15166  _limit != 0 */\n      sub\n        /* \"TOKEN ZARFIX (XZI).sol\":15147:15184  require(_limit != 0, \"Invalid limit\") */\n      tag_435\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8699:8701   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":15147:15184  require(_limit != 0, \"Invalid limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8681:8702   */\n      mstore\n        /* \"#utility.yul\":8738:8740   */\n      0x0d\n        /* \"#utility.yul\":8718:8736   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8711:8741   */\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081b1a5b5a5d)\n        /* \"#utility.yul\":8757:8775   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8750:8793   */\n      mstore\n        /* \"#utility.yul\":8810:8828   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":15147:15184  require(_limit != 0, \"Invalid limit\") */\n      tag_223\n        /* \"#utility.yul\":8497:8834   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":15147:15184  require(_limit != 0, \"Invalid limit\") */\n    tag_435:\n        /* \"TOKEN ZARFIX (XZI).sol\":15281:15295  _MAX_BATCH + 1 */\n      tag_437\n        /* \"TOKEN ZARFIX (XZI).sol\":2199:2202  100 */\n      0x64\n        /* \"TOKEN ZARFIX (XZI).sol\":15294:15295  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":15281:15295  _MAX_BATCH + 1 */\n      tag_262\n      jump\t// in\n    tag_437:\n        /* \"TOKEN ZARFIX (XZI).sol\":15272:15278  _limit */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":15272:15295  _limit < _MAX_BATCH + 1 */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":15264:15320  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9303:9305   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":15264:15320  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9285:9306   */\n      mstore\n        /* \"#utility.yul\":9342:9344   */\n      0x14\n        /* \"#utility.yul\":9322:9340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9315:9345   */\n      mstore\n      shl(0x60, 0x42617463682073697a6520746f6f206c61726765)\n        /* \"#utility.yul\":9361:9379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9354:9404   */\n      mstore\n        /* \"#utility.yul\":9421:9439   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":15264:15320  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n      tag_223\n        /* \"#utility.yul\":9101:9445   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":15264:15320  require(_limit < _MAX_BATCH + 1, \"Batch size too large\") */\n    tag_438:\n        /* \"TOKEN ZARFIX (XZI).sol\":15339:15350  uint256 end */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":15353:15369  _offset + _limit */\n      tag_440\n        /* \"TOKEN ZARFIX (XZI).sol\":15363:15369  _limit */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":15353:15360  _offset */\n      dup7\n        /* \"TOKEN ZARFIX (XZI).sol\":15353:15369  _offset + _limit */\n      tag_262\n      jump\t// in\n    tag_440:\n        /* \"TOKEN ZARFIX (XZI).sol\":15339:15369  uint256 end = _offset + _limit */\n      swap1\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":15459:15477  accountsLength + 1 */\n      tag_441\n        /* \"TOKEN ZARFIX (XZI).sol\":15459:15473  accountsLength */\n      dup3\n        /* \"TOKEN ZARFIX (XZI).sol\":15476:15477  1 */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":15459:15477  accountsLength + 1 */\n      tag_262\n      jump\t// in\n    tag_441:\n        /* \"TOKEN ZARFIX (XZI).sol\":15452:15455  end */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":15452:15477  end >= accountsLength + 1 */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":15448:15524  if (end >= accountsLength + 1) {... */\n      tag_442\n      jumpi\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":15499:15513  accountsLength */\n      dup1\n        /* \"TOKEN ZARFIX (XZI).sol\":15448:15524  if (end >= accountsLength + 1) {... */\n    tag_442:\n        /* \"TOKEN ZARFIX (XZI).sol\":15570:15577  _offset */\n      dup5\n        /* \"TOKEN ZARFIX (XZI).sol\":15553:15888  for (uint256 i = _offset; i < end;) {... */\n    tag_443:\n        /* \"TOKEN ZARFIX (XZI).sol\":15583:15586  end */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":15579:15580  i */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":15579:15586  i < end */\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":15553:15888  for (uint256 i = _offset; i < end;) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"TOKEN ZARFIX (XZI).sol\":15603:15618  address account */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":15621:15630  _accounts */\n      dup9\n      dup9\n        /* \"TOKEN ZARFIX (XZI).sol\":15631:15632  i */\n      dup4\n        /* \"TOKEN ZARFIX (XZI).sol\":15621:15633  _accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_447\n      jumpi\n      tag_447\n      tag_274\n      jump\t// in\n    tag_447:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_448\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_448:\n        /* \"TOKEN ZARFIX (XZI).sol\":15603:15633  address account = _accounts[i] */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":15702:15723  account != address(0) */\n      dup2\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":15694:15752  require(account != address(0), \"Invalid account in batch\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9784:9786   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":15694:15752  require(account != address(0), \"Invalid account in batch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9766:9787   */\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x18\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9796:9826   */\n      mstore\n      shl(0x43, 0x092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d)\n        /* \"#utility.yul\":9842:9860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9835:9889   */\n      mstore\n        /* \"#utility.yul\":9906:9924   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":15694:15752  require(account != address(0), \"Invalid account in batch\") */\n      tag_223\n        /* \"#utility.yul\":9582:9930   */\n      jump\n        /* \"TOKEN ZARFIX (XZI).sol\":15694:15752  require(account != address(0), \"Invalid account in batch\") */\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":15779:15798  _whitelist[account] */\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":15779:15789  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":15779:15798  _whitelist[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TOKEN ZARFIX (XZI).sol\":15779:15805  _whitelist[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":15801:15805  true */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":15779:15805  _whitelist[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":15860:15863  ++i */\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":15553:15888  for (uint256 i = _offset; i < end;) {... */\n      jump(tag_443)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4769:4776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4861  $._allowances */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":13541:13905  function addToWhitelist(address _account) ... */\n    tag_191:\n      mload(0x00)\n      codecopy(0x00, data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_460\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_460:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":13703:13725  _account != address(0) */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":13695:13753  require(_account != address(0), \"Invalid account address\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_326\n      jump\t// in\n    tag_462:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13811  _whitelist[_account] */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13801  _whitelist */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13811  _whitelist[_account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13818  _whitelist[_account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":13814:13818  true */\n      0x01\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13818  _whitelist[_account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TOKEN ZARFIX (XZI).sol\":13866:13898  WhitelistUpdated(_account, true) */\n      swap1\n      mload\n        /* \"TOKEN ZARFIX (XZI).sol\":13814:13818  true */\n      swap1\n      swap3\n        /* \"TOKEN ZARFIX (XZI).sol\":13791:13811  _whitelist[_account] */\n      swap2\n        /* \"TOKEN ZARFIX (XZI).sol\":13866:13898  WhitelistUpdated(_account, true) */\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n      swap2\n      log3\n        /* \"TOKEN ZARFIX (XZI).sol\":13541:13905  function addToWhitelist(address _account) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"TOKEN ZARFIX (XZI).sol\":19086:19382  function remainingMintable() external view returns (uint256) {... */\n    tag_198:\n        /* \"TOKEN ZARFIX (XZI).sol\":19241:19255  _currentSupply */\n      sload(0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":19138:19145  uint256 */\n      0x00\n      swap1\n        /* \"TOKEN ZARFIX (XZI).sol\":19328:19331  CAP */\n      immutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n        /* \"TOKEN ZARFIX (XZI).sol\":19328:19348  CAP > currentSupply_ */\n      dup2\n      lt\n        /* \"TOKEN ZARFIX (XZI).sol\":19328:19375  CAP > currentSupply_ ? CAP - currentSupply_ : 0 */\n      tag_465\n      jumpi\n        /* \"TOKEN ZARFIX (XZI).sol\":19374:19375  0 */\n      0x00\n        /* \"TOKEN ZARFIX (XZI).sol\":19328:19375  CAP > currentSupply_ ? CAP - currentSupply_ : 0 */\n      jump(tag_467)\n    tag_465:\n        /* \"TOKEN ZARFIX (XZI).sol\":19351:19371  CAP - currentSupply_ */\n      tag_467\n        /* \"TOKEN ZARFIX (XZI).sol\":19357:19371  currentSupply_ */\n      dup2\n        /* \"TOKEN ZARFIX (XZI).sol\":19351:19354  CAP */\n      immutable(\"0x3d20d9702e2f5746efe4f161f9f2eec6795a257d6728ef74ed6f6785803bd046\")\n        /* \"TOKEN ZARFIX (XZI).sol\":19351:19371  CAP - currentSupply_ */\n      tag_280\n      jump\t// in\n    tag_467:\n        /* \"TOKEN ZARFIX (XZI).sol\":19321:19375  return CAP > currentSupply_ ? CAP - currentSupply_ : 0 */\n      swap2\n      pop\n      pop\n        /* \"TOKEN ZARFIX (XZI).sol\":19086:19382  function remainingMintable() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_480\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2684:2795  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_486\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      tag_480\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2786  __ReentrancyGuard_init_unchained */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      mload(0x00)\n      codecopy(0x00, data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_495\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_496\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_497\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_497:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_202)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_202)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10075:10080  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10082:10089  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10091:10096  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10098:10102  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10074  _approve */\n      tag_502\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_506\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2709:2837  function _requireNotPaused() internal view virtual {... */\n    tag_284:\n      mload(0x00)\n      codecopy(0x00, data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2625:2634  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2770:2831  if (paused()) {... */\n      iszero\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2805:2820  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11849  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      tag_511\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11862:11867  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11869:11876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11861  allowance */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      jump\t// in\n    tag_511:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11877  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11907  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11927  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11971  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11963  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11971  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n      iszero\n      tag_513\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14137:14169   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14119:14170   */\n      mstore\n        /* \"#utility.yul\":14186:14204   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14179:14213   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14229:14247   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14222:14256   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14092:14110   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_223\n        /* \"#utility.yul\":13917:14262   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n    tag_513:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12128  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12130:12137  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12163  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12155  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12163  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12165:12170  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12122  _approve */\n      tag_502\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6737:6738  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n    tag_518:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n      tag_521\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6832:6833  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n    tag_521:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6867  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6869:6871  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6873:6878  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6862  _update */\n      tag_524\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7894:8282  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7972:7976  bool */\n      0x00\n      mload(0x00)\n      codecopy(0x00, data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8069:8073  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8075:8082  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8068  hasRole */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      jump\t// in\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8057:8276  if (hasRole(role, account)) {... */\n      iszero\n      tag_496\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8133:8138  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8130  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8138  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8133:8138  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8218:8222  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8211:8222  return true */\n      swap2\n      pop\n      pop\n      jump(tag_202)\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3478:3656  function _unpause() internal virtual whenPaused {... */\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2226:2242  _requirePaused() */\n      tag_533\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2226:2240  _requirePaused */\n      tag_534\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2226:2242  _requirePaused() */\n      jump\t// in\n    tag_533:\n      mload(0x00)\n      codecopy(0x00, data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3595:3612  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3627:3649  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3636:3648  _msgSender() */\n    tag_537:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3627:3649  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14431:14463   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":14413:14464   */\n      dup2\n      mstore\n        /* \"#utility.yul\":14401:14403   */\n      0x20\n        /* \"#utility.yul\":14386:14404   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3627:3649  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3526:3656  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3478:3656  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n    tag_335:\n      mload(0x00)\n      codecopy(0x00, data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3679  $._status */\n      dup1\n      sload\n      not(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3690  $._status == ENTERED */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n      tag_542\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3713:3743  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n    tag_542:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3847  $._status = ENTERED */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n      tag_544\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8857:8858  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n    tag_544:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8896:8897  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8900:8907  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8909:8914  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8887  _update */\n      tag_524\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      mload(0x00)\n      codecopy(0x00, data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      tag_550\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_551\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n    tag_551:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_550:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TOKEN ZARFIX (XZI).sol\":20526:20805  function _authorizeUpgrade(address _newImplementation) ... */\n    tag_362:\n        /* \"TOKEN ZARFIX (XZI).sol\":2034:2060  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_555\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_555:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOKEN ZARFIX (XZI).sol\":20731:20763  _newImplementation != address(0) */\n      dup3\n      and\n        /* \"TOKEN ZARFIX (XZI).sol\":20723:20798  require(_newImplementation != address(0), \"Invalid implementation address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14677:14679   */\n      0x20\n        /* \"TOKEN ZARFIX (XZI).sol\":20723:20798  require(_newImplementation != address(0), \"Invalid implementation address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14659:14680   */\n      mstore\n        /* \"#utility.yul\":14716:14718   */\n      0x1e\n        /* \"#utility.yul\":14696:14714   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14689:14719   */\n      mstore\n        /* \"#utility.yul\":14755:14787   */\n      0x496e76616c696420696d706c656d656e746174696f6e20616464726573730000\n        /* \"#utility.yul\":14735:14753   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14728:14788   */\n      mstore\n        /* \"#utility.yul\":14805:14823   */\n      0x64\n      add\n        /* \"TOKEN ZARFIX (XZI).sol\":20723:20798  require(_newImplementation != address(0), \"Invalid implementation address\") */\n      tag_223\n        /* \"#utility.yul\":14475:14829   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_561\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_562\n      swap2\n      dup2\n      add\n      swap1\n      tag_563\n      jump\t// in\n    tag_562:\n      0x01\n    tag_561:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_564\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14431:14463   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_564:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_570\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3552:3577   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3525:3543   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      tag_223\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_570:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_573\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3170:3346  function _pause() internal virtual whenNotPaused {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      tag_578\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1996  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1979:1998  _requireNotPaused() */\n      jump\t// in\n    tag_578:\n      mload(0x00)\n      codecopy(0x00, data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3288:3304  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3300:3304  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3288:3304  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3319:3339  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3326:3338  _msgSender() */\n      tag_537\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9240:9446  function _burn(address account, uint256 value) internal {... */\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9331  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n      tag_584\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9381:9382  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n    tag_584:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9412:9419  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9429:9430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9433:9438  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9411  _update */\n      tag_524\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_589\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_590\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_589:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_593\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_593:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      tag_596\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      tag_597\n      jump\t// in\n    tag_596:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      tag_597\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2801:2984  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_502:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n      tag_605\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11193:11194  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n    tag_605:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n      tag_607\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11292:11293  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n    tag_607:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11328  $._allowances */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11352  $._allowances[owner][spender] = value */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n      dup2\n      iszero\n      tag_609\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11412:11419  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11410  owner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11421:11426  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_610\n      swap2\n        /* \"#utility.yul\":3552:3577   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3525:3543   */\n      add\n      swap1\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n    tag_610:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n    tag_609:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11055:11444  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_506:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_612\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_612:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17339:17371   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17321:17372   */\n      mstore\n        /* \"#utility.yul\":17388:17406   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":17381:17415   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":17294:17312   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_223\n        /* \"#utility.yul\":17147:17421   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_524:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_618\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7497:7502  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7480  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7493  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7502  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_619\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_619:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_620\n      swap1\n      pop\n      jump\n    tag_618:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7552  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7609  fromBalance < value */\n      dup3\n      dup2\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n      iszero\n      tag_621\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14137:14169   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14119:14170   */\n      mstore\n        /* \"#utility.yul\":14186:14204   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14179:14213   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14229:14247   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14222:14256   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14092:14110   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_223\n        /* \"#utility.yul\":13917:14262   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n    tag_621:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7832  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup4\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7860  fromBalance - value */\n      swap1\n      dup4\n      swap1\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7860  $._balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n    tag_620:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      tag_623\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8076  $._totalSupply */\n      0x02\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8085  $._totalSupply -= value */\n      dup1\n      sload\n      dup4\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      jump(tag_624)\n    tag_623:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8286  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8299  $._balances[to] += value */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n    tag_624:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8354:8356  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8348:8352  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8363  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      mload(0x40)\n      tag_625\n      swap2\n        /* \"#utility.yul\":3552:3577   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3525:3543   */\n      add\n      swap1\n        /* \"#utility.yul\":3406:3583   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n    tag_625:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7276:8371  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2909:3035  function _requirePaused() internal view virtual {... */\n    tag_534:\n      mload(0x00)\n      codecopy(0x00, data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2625:2634  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2967:3029  if (!paused()) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3003:3018  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_573:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_634\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_635\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_634:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_636\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_321\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_638\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_636:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_355\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_641\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_590:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_643\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_643:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_635:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_646\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14431:14463   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_646:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_638:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_650\n      swap2\n      swap1\n      tag_651\n      jump\t// in\n    tag_650:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_654\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_653)\n    tag_654:\n      0x60\n      swap2\n      pop\n    tag_653:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_655\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_656\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_655:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_641:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_656:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_660\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_661\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_662\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_661:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_285)\n    tag_660:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_664\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_664:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_665\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14431:14463   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14413:14464   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      tag_223\n        /* \"#utility.yul\":14267:14470   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_665:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      jump(tag_285)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_662:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      tag_668\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_668:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:300   */\n    tag_46:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_680:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:915   */\n    tag_54:\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup3\n        /* \"#utility.yul\":672:685   */\n      mload\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":705:714   */\n      dup5\n        /* \"#utility.yul\":701:719   */\n      add\n        /* \"#utility.yul\":694:728   */\n      mstore\n        /* \"#utility.yul\":780:786   */\n      dup1\n        /* \"#utility.yul\":775:777   */\n      0x20\n        /* \"#utility.yul\":767:773   */\n      dup6\n        /* \"#utility.yul\":763:778   */\n      add\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":737:787   */\n      mcopy\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":822:828   */\n      dup3\n        /* \"#utility.yul\":811:820   */\n      dup6\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":803:834   */\n      add\n        /* \"#utility.yul\":796:838   */\n      mstore\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":899:901   */\n      0x1f\n        /* \"#utility.yul\":895:902   */\n      not\n        /* \"#utility.yul\":890:892   */\n      0x1f\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:903   */\n      and\n        /* \"#utility.yul\":863:872   */\n      dup5\n        /* \"#utility.yul\":859:904   */\n      add\n        /* \"#utility.yul\":855:909   */\n      add\n        /* \"#utility.yul\":847:909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":497:915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1268   */\n    tag_670:\n        /* \"#utility.yul\":972:980   */\n      0x00\n        /* \"#utility.yul\":982:988   */\n      0x00\n        /* \"#utility.yul\":1036:1039   */\n      dup4\n        /* \"#utility.yul\":1029:1033   */\n      0x1f\n        /* \"#utility.yul\":1021:1027   */\n      dup5\n        /* \"#utility.yul\":1017:1034   */\n      add\n        /* \"#utility.yul\":1013:1040   */\n      slt\n        /* \"#utility.yul\":1003:1058   */\n      tag_685\n      jumpi\n        /* \"#utility.yul\":1054:1055   */\n      0x00\n        /* \"#utility.yul\":1051:1052   */\n      0x00\n        /* \"#utility.yul\":1044:1056   */\n      revert\n        /* \"#utility.yul\":1003:1058   */\n    tag_685:\n      pop\n        /* \"#utility.yul\":1077:1097   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1120:1138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1109:1139   */\n      dup2\n      gt\n        /* \"#utility.yul\":1106:1156   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":1152:1153   */\n      0x00\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1142:1154   */\n      revert\n        /* \"#utility.yul\":1106:1156   */\n    tag_686:\n        /* \"#utility.yul\":1189:1193   */\n      0x20\n        /* \"#utility.yul\":1181:1187   */\n      dup4\n        /* \"#utility.yul\":1177:1194   */\n      add\n        /* \"#utility.yul\":1165:1194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1241:1244   */\n      dup4\n        /* \"#utility.yul\":1234:1238   */\n      0x20\n        /* \"#utility.yul\":1225:1231   */\n      dup3\n        /* \"#utility.yul\":1217:1223   */\n      dup6\n        /* \"#utility.yul\":1213:1232   */\n      add\n        /* \"#utility.yul\":1209:1239   */\n      add\n        /* \"#utility.yul\":1206:1245   */\n      gt\n        /* \"#utility.yul\":1203:1262   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":1258:1259   */\n      0x00\n        /* \"#utility.yul\":1255:1256   */\n      0x00\n        /* \"#utility.yul\":1248:1260   */\n      revert\n        /* \"#utility.yul\":1203:1262   */\n    tag_687:\n        /* \"#utility.yul\":920:1268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1273:1446   */\n    tag_671:\n        /* \"#utility.yul\":1341:1361   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1390:1421   */\n      dup2\n      and\n        /* \"#utility.yul\":1380:1422   */\n      dup2\n      eq\n        /* \"#utility.yul\":1370:1440   */\n      tag_689\n      jumpi\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1433:1434   */\n      0x00\n        /* \"#utility.yul\":1426:1438   */\n      revert\n        /* \"#utility.yul\":1370:1440   */\n    tag_689:\n        /* \"#utility.yul\":1273:1446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1451:2241   */\n    tag_58:\n        /* \"#utility.yul\":1552:1558   */\n      0x00\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      0x00\n        /* \"#utility.yul\":1576:1582   */\n      0x00\n        /* \"#utility.yul\":1584:1590   */\n      0x00\n        /* \"#utility.yul\":1637:1639   */\n      0x60\n        /* \"#utility.yul\":1625:1634   */\n      dup7\n        /* \"#utility.yul\":1616:1623   */\n      dup9\n        /* \"#utility.yul\":1612:1635   */\n      sub\n        /* \"#utility.yul\":1608:1640   */\n      slt\n        /* \"#utility.yul\":1605:1657   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":1653:1654   */\n      0x00\n        /* \"#utility.yul\":1650:1651   */\n      0x00\n        /* \"#utility.yul\":1643:1655   */\n      revert\n        /* \"#utility.yul\":1605:1657   */\n    tag_691:\n        /* \"#utility.yul\":1693:1702   */\n      dup6\n        /* \"#utility.yul\":1680:1703   */\n      calldataload\n        /* \"#utility.yul\":1726:1744   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1745   */\n      gt\n        /* \"#utility.yul\":1712:1762   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":1758:1759   */\n      0x00\n        /* \"#utility.yul\":1755:1756   */\n      0x00\n        /* \"#utility.yul\":1748:1760   */\n      revert\n        /* \"#utility.yul\":1712:1762   */\n    tag_692:\n        /* \"#utility.yul\":1797:1856   */\n      tag_693\n        /* \"#utility.yul\":1848:1855   */\n      dup9\n        /* \"#utility.yul\":1839:1845   */\n      dup3\n        /* \"#utility.yul\":1828:1837   */\n      dup10\n        /* \"#utility.yul\":1824:1846   */\n      add\n        /* \"#utility.yul\":1797:1856   */\n      tag_670\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":1875:1883   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":1771:1856   */\n      swap5\n      pop\n      pop\n        /* \"#utility.yul\":1963:1965   */\n      0x20\n        /* \"#utility.yul\":1948:1966   */\n      dup7\n      add\n        /* \"#utility.yul\":1935:1967   */\n      calldataload\n        /* \"#utility.yul\":1992:2010   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1979:2011   */\n      dup2\n      gt\n        /* \"#utility.yul\":1976:2028   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      0x00\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1976:2028   */\n    tag_694:\n        /* \"#utility.yul\":2063:2124   */\n      tag_695\n        /* \"#utility.yul\":2116:2123   */\n      dup9\n        /* \"#utility.yul\":2105:2113   */\n      dup3\n        /* \"#utility.yul\":2094:2103   */\n      dup10\n        /* \"#utility.yul\":2090:2114   */\n      add\n        /* \"#utility.yul\":2063:2124   */\n      tag_670\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":2143:2151   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":2037:2124   */\n      swap3\n      pop\n        /* \"#utility.yul\":2197:2235   */\n      tag_696\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2233   */\n      0x40\n        /* \"#utility.yul\":2216:2234   */\n      dup8\n      add\n        /* \"#utility.yul\":2197:2235   */\n      tag_671\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":2187:2235   */\n      swap1\n      pop\n        /* \"#utility.yul\":1451:2241   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2546   */\n    tag_63:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2322:2328   */\n      0x00\n        /* \"#utility.yul\":2375:2377   */\n      0x40\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2354:2361   */\n      dup6\n        /* \"#utility.yul\":2350:2373   */\n      sub\n        /* \"#utility.yul\":2346:2378   */\n      slt\n        /* \"#utility.yul\":2343:2395   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":2391:2392   */\n      0x00\n        /* \"#utility.yul\":2388:2389   */\n      0x00\n        /* \"#utility.yul\":2381:2393   */\n      revert\n        /* \"#utility.yul\":2343:2395   */\n    tag_698:\n        /* \"#utility.yul\":2414:2443   */\n      tag_699\n        /* \"#utility.yul\":2433:2442   */\n      dup4\n        /* \"#utility.yul\":2414:2443   */\n      tag_671\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":2404:2443   */\n      swap5\n        /* \"#utility.yul\":2512:2514   */\n      0x20\n        /* \"#utility.yul\":2497:2515   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2484:2516   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2246:2546   */\n      jump\t// out\n        /* \"#utility.yul\":2551:3401   */\n    tag_69:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      0x00\n        /* \"#utility.yul\":2671:2677   */\n      0x00\n        /* \"#utility.yul\":2679:2685   */\n      0x00\n        /* \"#utility.yul\":2732:2734   */\n      0x60\n        /* \"#utility.yul\":2720:2729   */\n      dup6\n        /* \"#utility.yul\":2711:2718   */\n      dup8\n        /* \"#utility.yul\":2707:2730   */\n      sub\n        /* \"#utility.yul\":2703:2735   */\n      slt\n        /* \"#utility.yul\":2700:2752   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      0x00\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2700:2752   */\n    tag_701:\n        /* \"#utility.yul\":2788:2797   */\n      dup5\n        /* \"#utility.yul\":2775:2798   */\n      calldataload\n        /* \"#utility.yul\":2821:2839   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2813:2819   */\n      dup2\n        /* \"#utility.yul\":2810:2840   */\n      gt\n        /* \"#utility.yul\":2807:2857   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      0x00\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2807:2857   */\n    tag_702:\n        /* \"#utility.yul\":2876:2898   */\n      dup6\n      add\n        /* \"#utility.yul\":2929:2933   */\n      0x1f\n        /* \"#utility.yul\":2921:2934   */\n      dup2\n      add\n        /* \"#utility.yul\":2917:2944   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2907:2962   */\n      tag_703\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      0x00\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2907:2962   */\n    tag_703:\n        /* \"#utility.yul\":2998:3000   */\n      dup1\n        /* \"#utility.yul\":2985:3001   */\n      calldataload\n        /* \"#utility.yul\":3024:3042   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3016:3022   */\n      dup2\n        /* \"#utility.yul\":3013:3043   */\n      gt\n        /* \"#utility.yul\":3010:3060   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":3056:3057   */\n      0x00\n        /* \"#utility.yul\":3053:3054   */\n      0x00\n        /* \"#utility.yul\":3046:3058   */\n      revert\n        /* \"#utility.yul\":3010:3060   */\n    tag_704:\n        /* \"#utility.yul\":3111:3118   */\n      dup8\n        /* \"#utility.yul\":3104:3108   */\n      0x20\n        /* \"#utility.yul\":3094:3100   */\n      dup3\n        /* \"#utility.yul\":3091:3092   */\n      0x05\n        /* \"#utility.yul\":3087:3101   */\n      shl\n        /* \"#utility.yul\":3083:3085   */\n      dup5\n        /* \"#utility.yul\":3079:3102   */\n      add\n        /* \"#utility.yul\":3075:3109   */\n      add\n        /* \"#utility.yul\":3072:3119   */\n      gt\n        /* \"#utility.yul\":3069:3136   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":3132:3133   */\n      0x00\n        /* \"#utility.yul\":3129:3130   */\n      0x00\n        /* \"#utility.yul\":3122:3134   */\n      revert\n        /* \"#utility.yul\":3069:3136   */\n    tag_705:\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3155:3168   */\n      swap2\n      dup3\n      add\n      swap9\n        /* \"#utility.yul\":3187:3193   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":3247:3267   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":3234:3268   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":3365:3367   */\n      0x40\n        /* \"#utility.yul\":3350:3368   */\n      add\n        /* \"#utility.yul\":3337:3369   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2551:3401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3962   */\n    tag_79:\n        /* \"#utility.yul\":3665:3671   */\n      0x00\n        /* \"#utility.yul\":3673:3679   */\n      0x00\n        /* \"#utility.yul\":3681:3687   */\n      0x00\n        /* \"#utility.yul\":3734:3736   */\n      0x60\n        /* \"#utility.yul\":3722:3731   */\n      dup5\n        /* \"#utility.yul\":3713:3720   */\n      dup7\n        /* \"#utility.yul\":3709:3732   */\n      sub\n        /* \"#utility.yul\":3705:3737   */\n      slt\n        /* \"#utility.yul\":3702:3754   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":3750:3751   */\n      0x00\n        /* \"#utility.yul\":3747:3748   */\n      0x00\n        /* \"#utility.yul\":3740:3752   */\n      revert\n        /* \"#utility.yul\":3702:3754   */\n    tag_708:\n        /* \"#utility.yul\":3773:3802   */\n      tag_709\n        /* \"#utility.yul\":3792:3801   */\n      dup5\n        /* \"#utility.yul\":3773:3802   */\n      tag_671\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":3763:3802   */\n      swap3\n      pop\n        /* \"#utility.yul\":3821:3859   */\n      tag_710\n        /* \"#utility.yul\":3855:3857   */\n      0x20\n        /* \"#utility.yul\":3844:3853   */\n      dup6\n        /* \"#utility.yul\":3840:3858   */\n      add\n        /* \"#utility.yul\":3821:3859   */\n      tag_671\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":3588:3962   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3811:3859   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3928:3930   */\n      0x40\n        /* \"#utility.yul\":3913:3931   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3900:3932   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3588:3962   */\n      jump\t// out\n        /* \"#utility.yul\":3967:4193   */\n    tag_85:\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4079:4081   */\n      0x20\n        /* \"#utility.yul\":4067:4076   */\n      dup3\n        /* \"#utility.yul\":4058:4065   */\n      dup5\n        /* \"#utility.yul\":4054:4077   */\n      sub\n        /* \"#utility.yul\":4050:4082   */\n      slt\n        /* \"#utility.yul\":4047:4099   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4092:4093   */\n      0x00\n        /* \"#utility.yul\":4085:4097   */\n      revert\n        /* \"#utility.yul\":4047:4099   */\n    tag_712:\n      pop\n        /* \"#utility.yul\":4140:4163   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3967:4193   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4380:4680   */\n    tag_96:\n        /* \"#utility.yul\":4448:4454   */\n      0x00\n        /* \"#utility.yul\":4456:4462   */\n      0x00\n        /* \"#utility.yul\":4509:4511   */\n      0x40\n        /* \"#utility.yul\":4497:4506   */\n      dup4\n        /* \"#utility.yul\":4488:4495   */\n      dup6\n        /* \"#utility.yul\":4484:4507   */\n      sub\n        /* \"#utility.yul\":4480:4512   */\n      slt\n        /* \"#utility.yul\":4477:4529   */\n      iszero\n      tag_715\n      jumpi\n        /* \"#utility.yul\":4525:4526   */\n      0x00\n        /* \"#utility.yul\":4522:4523   */\n      0x00\n        /* \"#utility.yul\":4515:4527   */\n      revert\n        /* \"#utility.yul\":4477:4529   */\n    tag_715:\n        /* \"#utility.yul\":4570:4593   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4636:4674   */\n      tag_716\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"#utility.yul\":4655:4673   */\n      dup5\n      add\n        /* \"#utility.yul\":4636:4674   */\n      tag_671\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":4626:4674   */\n      swap1\n      pop\n        /* \"#utility.yul\":4380:4680   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:5060   */\n    tag_114:\n        /* \"#utility.yul\":4933:4939   */\n      0x00\n        /* \"#utility.yul\":4986:4988   */\n      0x20\n        /* \"#utility.yul\":4974:4983   */\n      dup3\n        /* \"#utility.yul\":4965:4972   */\n      dup5\n        /* \"#utility.yul\":4961:4984   */\n      sub\n        /* \"#utility.yul\":4957:4989   */\n      slt\n        /* \"#utility.yul\":4954:5006   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":5002:5003   */\n      0x00\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4992:5004   */\n      revert\n        /* \"#utility.yul\":4954:5006   */\n    tag_719:\n        /* \"#utility.yul\":5025:5054   */\n      tag_285\n        /* \"#utility.yul\":5044:5053   */\n      dup3\n        /* \"#utility.yul\":5025:5054   */\n      tag_671\n      jump\t// in\n        /* \"#utility.yul\":5065:5192   */\n    tag_672:\n        /* \"#utility.yul\":5126:5136   */\n      0x4e487b71\n        /* \"#utility.yul\":5121:5124   */\n      0xe0\n        /* \"#utility.yul\":5117:5137   */\n      shl\n        /* \"#utility.yul\":5114:5115   */\n      0x00\n        /* \"#utility.yul\":5107:5138   */\n      mstore\n        /* \"#utility.yul\":5157:5161   */\n      0x41\n        /* \"#utility.yul\":5154:5155   */\n      0x04\n        /* \"#utility.yul\":5147:5162   */\n      mstore\n        /* \"#utility.yul\":5181:5185   */\n      0x24\n        /* \"#utility.yul\":5178:5179   */\n      0x00\n        /* \"#utility.yul\":5171:5186   */\n      revert\n        /* \"#utility.yul\":5197:6215   */\n    tag_126:\n        /* \"#utility.yul\":5274:5280   */\n      0x00\n        /* \"#utility.yul\":5282:5288   */\n      0x00\n        /* \"#utility.yul\":5335:5337   */\n      0x40\n        /* \"#utility.yul\":5323:5332   */\n      dup4\n        /* \"#utility.yul\":5314:5321   */\n      dup6\n        /* \"#utility.yul\":5310:5333   */\n      sub\n        /* \"#utility.yul\":5306:5338   */\n      slt\n        /* \"#utility.yul\":5303:5355   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":5351:5352   */\n      0x00\n        /* \"#utility.yul\":5348:5349   */\n      0x00\n        /* \"#utility.yul\":5341:5353   */\n      revert\n        /* \"#utility.yul\":5303:5355   */\n    tag_723:\n        /* \"#utility.yul\":5374:5403   */\n      tag_724\n        /* \"#utility.yul\":5393:5402   */\n      dup4\n        /* \"#utility.yul\":5374:5403   */\n      tag_671\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":5364:5403   */\n      swap2\n      pop\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5443:5452   */\n      dup4\n        /* \"#utility.yul\":5439:5457   */\n      add\n        /* \"#utility.yul\":5426:5458   */\n      calldataload\n        /* \"#utility.yul\":5481:5499   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5473:5479   */\n      dup2\n        /* \"#utility.yul\":5470:5500   */\n      gt\n        /* \"#utility.yul\":5467:5517   */\n      iszero\n      tag_725\n      jumpi\n        /* \"#utility.yul\":5513:5514   */\n      0x00\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5503:5515   */\n      revert\n        /* \"#utility.yul\":5467:5517   */\n    tag_725:\n        /* \"#utility.yul\":5536:5558   */\n      dup4\n      add\n        /* \"#utility.yul\":5589:5593   */\n      0x1f\n        /* \"#utility.yul\":5581:5594   */\n      dup2\n      add\n        /* \"#utility.yul\":5577:5604   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5567:5622   */\n      tag_726\n      jumpi\n        /* \"#utility.yul\":5618:5619   */\n      0x00\n        /* \"#utility.yul\":5615:5616   */\n      0x00\n        /* \"#utility.yul\":5608:5620   */\n      revert\n        /* \"#utility.yul\":5567:5622   */\n    tag_726:\n        /* \"#utility.yul\":5658:5660   */\n      dup1\n        /* \"#utility.yul\":5645:5661   */\n      calldataload\n        /* \"#utility.yul\":5684:5702   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5676:5682   */\n      dup2\n        /* \"#utility.yul\":5673:5703   */\n      gt\n        /* \"#utility.yul\":5670:5726   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":5706:5724   */\n      tag_728\n      tag_672\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":5755:5757   */\n      0x40\n        /* \"#utility.yul\":5749:5758   */\n      mload\n        /* \"#utility.yul\":5847:5849   */\n      0x1f\n        /* \"#utility.yul\":5809:5826   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5805:5836   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5838:5840   */\n      0x3f\n        /* \"#utility.yul\":5801:5841   */\n      add\n        /* \"#utility.yul\":5797:5851   */\n      and\n        /* \"#utility.yul\":5785:5852   */\n      dup2\n      add\n        /* \"#utility.yul\":5882:5900   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5867:5901   */\n      dup2\n      gt\n        /* \"#utility.yul\":5903:5925   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5864:5926   */\n      or\n        /* \"#utility.yul\":5861:5949   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":5929:5947   */\n      tag_730\n      tag_672\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":5965:5967   */\n      0x40\n        /* \"#utility.yul\":5958:5980   */\n      mstore\n        /* \"#utility.yul\":5989:6011   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":6030:6045   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6047:6049   */\n      0x20\n        /* \"#utility.yul\":6026:6050   */\n      add\n        /* \"#utility.yul\":6023:6060   */\n      dup8\n      lt\n        /* \"#utility.yul\":6020:6077   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":6073:6074   */\n      0x00\n        /* \"#utility.yul\":6070:6071   */\n      0x00\n        /* \"#utility.yul\":6063:6075   */\n      revert\n        /* \"#utility.yul\":6020:6077   */\n    tag_731:\n        /* \"#utility.yul\":6129:6135   */\n      dup2\n        /* \"#utility.yul\":6124:6126   */\n      0x20\n        /* \"#utility.yul\":6120:6122   */\n      dup5\n        /* \"#utility.yul\":6116:6127   */\n      add\n        /* \"#utility.yul\":6111:6113   */\n      0x20\n        /* \"#utility.yul\":6103:6109   */\n      dup4\n        /* \"#utility.yul\":6099:6114   */\n      add\n        /* \"#utility.yul\":6086:6136   */\n      calldatacopy\n        /* \"#utility.yul\":6182:6183   */\n      0x00\n        /* \"#utility.yul\":6177:6179   */\n      0x20\n        /* \"#utility.yul\":6168:6174   */\n      dup4\n        /* \"#utility.yul\":6160:6166   */\n      dup4\n        /* \"#utility.yul\":6156:6175   */\n      add\n        /* \"#utility.yul\":6152:6180   */\n      add\n        /* \"#utility.yul\":6145:6184   */\n      mstore\n        /* \"#utility.yul\":6203:6209   */\n      dup1\n        /* \"#utility.yul\":6193:6209   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5197:6215   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6220:6480   */\n    tag_185:\n        /* \"#utility.yul\":6288:6294   */\n      0x00\n        /* \"#utility.yul\":6296:6302   */\n      0x00\n        /* \"#utility.yul\":6349:6351   */\n      0x40\n        /* \"#utility.yul\":6337:6346   */\n      dup4\n        /* \"#utility.yul\":6328:6335   */\n      dup6\n        /* \"#utility.yul\":6324:6347   */\n      sub\n        /* \"#utility.yul\":6320:6352   */\n      slt\n        /* \"#utility.yul\":6317:6369   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":6365:6366   */\n      0x00\n        /* \"#utility.yul\":6362:6363   */\n      0x00\n        /* \"#utility.yul\":6355:6367   */\n      revert\n        /* \"#utility.yul\":6317:6369   */\n    tag_733:\n        /* \"#utility.yul\":6388:6417   */\n      tag_734\n        /* \"#utility.yul\":6407:6416   */\n      dup4\n        /* \"#utility.yul\":6388:6417   */\n      tag_671\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":6378:6417   */\n      swap2\n      pop\n        /* \"#utility.yul\":6436:6474   */\n      tag_716\n        /* \"#utility.yul\":6470:6472   */\n      0x20\n        /* \"#utility.yul\":6459:6468   */\n      dup5\n        /* \"#utility.yul\":6455:6473   */\n      add\n        /* \"#utility.yul\":6436:6474   */\n      tag_671\n      jump\t// in\n        /* \"#utility.yul\":6485:6865   */\n    tag_208:\n        /* \"#utility.yul\":6564:6565   */\n      0x01\n        /* \"#utility.yul\":6560:6572   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6607:6619   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6628:6689   */\n      tag_737\n      jumpi\n        /* \"#utility.yul\":6682:6686   */\n      0x7f\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6670:6687   */\n      and\n        /* \"#utility.yul\":6660:6687   */\n      swap2\n      pop\n        /* \"#utility.yul\":6628:6689   */\n    tag_737:\n        /* \"#utility.yul\":6735:6737   */\n      0x20\n        /* \"#utility.yul\":6727:6733   */\n      dup3\n        /* \"#utility.yul\":6724:6738   */\n      lt\n        /* \"#utility.yul\":6704:6722   */\n      dup2\n        /* \"#utility.yul\":6701:6739   */\n      sub\n        /* \"#utility.yul\":6698:6859   */\n      tag_738\n      jumpi\n        /* \"#utility.yul\":6781:6791   */\n      0x4e487b71\n        /* \"#utility.yul\":6776:6779   */\n      0xe0\n        /* \"#utility.yul\":6772:6792   */\n      shl\n        /* \"#utility.yul\":6769:6770   */\n      0x00\n        /* \"#utility.yul\":6762:6793   */\n      mstore\n        /* \"#utility.yul\":6816:6820   */\n      0x22\n        /* \"#utility.yul\":6813:6814   */\n      0x04\n        /* \"#utility.yul\":6806:6821   */\n      mstore\n        /* \"#utility.yul\":6844:6848   */\n      0x24\n        /* \"#utility.yul\":6841:6842   */\n      0x00\n        /* \"#utility.yul\":6834:6849   */\n      revert\n        /* \"#utility.yul\":6698:6859   */\n    tag_738:\n      pop\n        /* \"#utility.yul\":6485:6865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7220:7487   */\n    tag_673:\n        /* \"#utility.yul\":7309:7315   */\n      dup2\n        /* \"#utility.yul\":7304:7307   */\n      dup4\n        /* \"#utility.yul\":7297:7316   */\n      mstore\n        /* \"#utility.yul\":7361:7367   */\n      dup2\n        /* \"#utility.yul\":7354:7359   */\n      dup2\n        /* \"#utility.yul\":7347:7351   */\n      0x20\n        /* \"#utility.yul\":7342:7345   */\n      dup6\n        /* \"#utility.yul\":7338:7352   */\n      add\n        /* \"#utility.yul\":7325:7368   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":7413:7414   */\n      0x00\n        /* \"#utility.yul\":7388:7404   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7406:7410   */\n      0x20\n        /* \"#utility.yul\":7384:7411   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7377:7415   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7469:7471   */\n      0x1f\n        /* \"#utility.yul\":7448:7463   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7444:7473   */\n      and\n        /* \"#utility.yul\":7435:7474   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7431:7481   */\n      add\n      swap1\n        /* \"#utility.yul\":7220:7487   */\n      jump\t// out\n        /* \"#utility.yul\":7492:7929   */\n    tag_242:\n        /* \"#utility.yul\":7709:7711   */\n      0x40\n        /* \"#utility.yul\":7698:7707   */\n      dup2\n        /* \"#utility.yul\":7691:7712   */\n      mstore\n        /* \"#utility.yul\":7672:7676   */\n      0x00\n        /* \"#utility.yul\":7735:7797   */\n      tag_742\n        /* \"#utility.yul\":7793:7795   */\n      0x40\n        /* \"#utility.yul\":7782:7791   */\n      dup4\n        /* \"#utility.yul\":7778:7796   */\n      add\n        /* \"#utility.yul\":7770:7776   */\n      dup7\n        /* \"#utility.yul\":7762:7768   */\n      dup9\n        /* \"#utility.yul\":7735:7797   */\n      tag_673\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":7845:7854   */\n      dup3\n        /* \"#utility.yul\":7837:7843   */\n      dup2\n        /* \"#utility.yul\":7833:7855   */\n      sub\n        /* \"#utility.yul\":7828:7830   */\n      0x20\n        /* \"#utility.yul\":7817:7826   */\n      dup5\n        /* \"#utility.yul\":7813:7831   */\n      add\n        /* \"#utility.yul\":7806:7856   */\n      mstore\n        /* \"#utility.yul\":7873:7923   */\n      tag_743\n        /* \"#utility.yul\":7916:7922   */\n      dup2\n        /* \"#utility.yul\":7908:7914   */\n      dup6\n        /* \"#utility.yul\":7900:7906   */\n      dup8\n        /* \"#utility.yul\":7873:7923   */\n      tag_673\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":7865:7923   */\n      swap8\n        /* \"#utility.yul\":7492:7929   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8839:8966   */\n    tag_674:\n        /* \"#utility.yul\":8900:8910   */\n      0x4e487b71\n        /* \"#utility.yul\":8895:8898   */\n      0xe0\n        /* \"#utility.yul\":8891:8911   */\n      shl\n        /* \"#utility.yul\":8888:8889   */\n      0x00\n        /* \"#utility.yul\":8881:8912   */\n      mstore\n        /* \"#utility.yul\":8931:8935   */\n      0x11\n        /* \"#utility.yul\":8928:8929   */\n      0x04\n        /* \"#utility.yul\":8921:8936   */\n      mstore\n        /* \"#utility.yul\":8955:8959   */\n      0x24\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8945:8960   */\n      revert\n        /* \"#utility.yul\":8971:9096   */\n    tag_262:\n        /* \"#utility.yul\":9036:9045   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9057:9067   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9054:9090   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":9070:9088   */\n      tag_202\n      tag_674\n      jump\t// in\n        /* \"#utility.yul\":9450:9577   */\n    tag_274:\n        /* \"#utility.yul\":9511:9521   */\n      0x4e487b71\n        /* \"#utility.yul\":9506:9509   */\n      0xe0\n        /* \"#utility.yul\":9502:9522   */\n      shl\n        /* \"#utility.yul\":9499:9500   */\n      0x00\n        /* \"#utility.yul\":9492:9523   */\n      mstore\n        /* \"#utility.yul\":9542:9546   */\n      0x32\n        /* \"#utility.yul\":9539:9540   */\n      0x04\n        /* \"#utility.yul\":9532:9547   */\n      mstore\n        /* \"#utility.yul\":9566:9570   */\n      0x24\n        /* \"#utility.yul\":9563:9564   */\n      0x00\n        /* \"#utility.yul\":9556:9571   */\n      revert\n        /* \"#utility.yul\":9935:10063   */\n    tag_280:\n        /* \"#utility.yul\":10002:10011   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10023:10034   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10020:10057   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":10037:10055   */\n      tag_202\n      tag_674\n      jump\t// in\n        /* \"#utility.yul\":10419:10768   */\n    tag_291:\n        /* \"#utility.yul\":10621:10623   */\n      0x20\n        /* \"#utility.yul\":10603:10624   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10660:10662   */\n      0x19\n        /* \"#utility.yul\":10640:10658   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10633:10663   */\n      mstore\n        /* \"#utility.yul\":10699:10726   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":10694:10696   */\n      0x40\n        /* \"#utility.yul\":10679:10697   */\n      dup3\n      add\n        /* \"#utility.yul\":10672:10727   */\n      mstore\n        /* \"#utility.yul\":10759:10761   */\n      0x60\n        /* \"#utility.yul\":10744:10762   */\n      add\n      swap1\n        /* \"#utility.yul\":10419:10768   */\n      jump\t// out\n        /* \"#utility.yul\":11476:11825   */\n    tag_300:\n        /* \"#utility.yul\":11678:11680   */\n      0x20\n        /* \"#utility.yul\":11660:11681   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11717:11719   */\n      0x19\n        /* \"#utility.yul\":11697:11715   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11690:11720   */\n      mstore\n        /* \"#utility.yul\":11756:11783   */\n      0x526563697069656e74206e6f742077686974656c697374656400000000000000\n        /* \"#utility.yul\":11751:11753   */\n      0x40\n        /* \"#utility.yul\":11736:11754   */\n      dup3\n      add\n        /* \"#utility.yul\":11729:11784   */\n      mstore\n        /* \"#utility.yul\":11816:11818   */\n      0x60\n        /* \"#utility.yul\":11801:11819   */\n      add\n      swap1\n        /* \"#utility.yul\":11476:11825   */\n      jump\t// out\n        /* \"#utility.yul\":11830:12177   */\n    tag_326:\n        /* \"#utility.yul\":12032:12034   */\n      0x20\n        /* \"#utility.yul\":12014:12035   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12071:12073   */\n      0x17\n        /* \"#utility.yul\":12051:12069   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12044:12074   */\n      mstore\n        /* \"#utility.yul\":12110:12135   */\n      0x496e76616c6964206163636f756e742061646472657373000000000000000000\n        /* \"#utility.yul\":12105:12107   */\n      0x40\n        /* \"#utility.yul\":12090:12108   */\n      dup3\n      add\n        /* \"#utility.yul\":12083:12136   */\n      mstore\n        /* \"#utility.yul\":12168:12170   */\n      0x60\n        /* \"#utility.yul\":12153:12171   */\n      add\n      swap1\n        /* \"#utility.yul\":11830:12177   */\n      jump\t// out\n        /* \"#utility.yul\":14834:15018   */\n    tag_563:\n        /* \"#utility.yul\":14904:14910   */\n      0x00\n        /* \"#utility.yul\":14957:14959   */\n      0x20\n        /* \"#utility.yul\":14945:14954   */\n      dup3\n        /* \"#utility.yul\":14936:14943   */\n      dup5\n        /* \"#utility.yul\":14932:14955   */\n      sub\n        /* \"#utility.yul\":14928:14960   */\n      slt\n        /* \"#utility.yul\":14925:14977   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":14973:14974   */\n      0x00\n        /* \"#utility.yul\":14970:14971   */\n      0x00\n        /* \"#utility.yul\":14963:14975   */\n      revert\n        /* \"#utility.yul\":14925:14977   */\n    tag_772:\n      pop\n        /* \"#utility.yul\":14996:15012   */\n      mload\n      swap2\n        /* \"#utility.yul\":14834:15018   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15149:15667   */\n    tag_676:\n        /* \"#utility.yul\":15251:15253   */\n      0x1f\n        /* \"#utility.yul\":15246:15249   */\n      dup3\n        /* \"#utility.yul\":15243:15254   */\n      gt\n        /* \"#utility.yul\":15240:15661   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":15287:15292   */\n      dup1\n        /* \"#utility.yul\":15284:15285   */\n      0x00\n        /* \"#utility.yul\":15277:15293   */\n      mstore\n        /* \"#utility.yul\":15331:15335   */\n      0x20\n        /* \"#utility.yul\":15328:15329   */\n      0x00\n        /* \"#utility.yul\":15318:15336   */\n      keccak256\n        /* \"#utility.yul\":15401:15403   */\n      0x1f\n        /* \"#utility.yul\":15389:15399   */\n      dup5\n        /* \"#utility.yul\":15385:15404   */\n      add\n        /* \"#utility.yul\":15382:15383   */\n      0x05\n        /* \"#utility.yul\":15378:15405   */\n      shr\n        /* \"#utility.yul\":15372:15376   */\n      dup2\n        /* \"#utility.yul\":15368:15406   */\n      add\n        /* \"#utility.yul\":15437:15441   */\n      0x20\n        /* \"#utility.yul\":15425:15435   */\n      dup6\n        /* \"#utility.yul\":15422:15442   */\n      lt\n        /* \"#utility.yul\":15419:15466   */\n      iszero\n      tag_776\n      jumpi\n      pop\n        /* \"#utility.yul\":15460:15464   */\n      dup1\n        /* \"#utility.yul\":15419:15466   */\n    tag_776:\n        /* \"#utility.yul\":15515:15517   */\n      0x1f\n        /* \"#utility.yul\":15510:15513   */\n      dup5\n        /* \"#utility.yul\":15506:15518   */\n      add\n        /* \"#utility.yul\":15503:15504   */\n      0x05\n        /* \"#utility.yul\":15499:15519   */\n      shr\n        /* \"#utility.yul\":15493:15497   */\n      dup3\n        /* \"#utility.yul\":15489:15520   */\n      add\n        /* \"#utility.yul\":15479:15520   */\n      swap2\n      pop\n        /* \"#utility.yul\":15570:15651   */\n    tag_777:\n        /* \"#utility.yul\":15588:15590   */\n      dup2\n        /* \"#utility.yul\":15581:15586   */\n      dup2\n        /* \"#utility.yul\":15578:15591   */\n      lt\n        /* \"#utility.yul\":15570:15651   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":15647:15648   */\n      0x00\n        /* \"#utility.yul\":15633:15649   */\n      dup2\n      sstore\n        /* \"#utility.yul\":15614:15615   */\n      0x01\n        /* \"#utility.yul\":15603:15616   */\n      add\n        /* \"#utility.yul\":15570:15651   */\n      jump(tag_777)\n        /* \"#utility.yul\":15843:17142   */\n    tag_597:\n        /* \"#utility.yul\":15969:15972   */\n      dup2\n        /* \"#utility.yul\":15963:15973   */\n      mload\n        /* \"#utility.yul\":15996:16014   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15988:15994   */\n      dup2\n        /* \"#utility.yul\":15985:16015   */\n      gt\n        /* \"#utility.yul\":15982:16038   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":16018:16036   */\n      tag_783\n      tag_672\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":16047:16144   */\n      tag_784\n        /* \"#utility.yul\":16137:16143   */\n      dup2\n        /* \"#utility.yul\":16097:16135   */\n      tag_785\n        /* \"#utility.yul\":16129:16133   */\n      dup5\n        /* \"#utility.yul\":16123:16134   */\n      sload\n        /* \"#utility.yul\":16097:16135   */\n      tag_208\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":16091:16095   */\n      dup5\n        /* \"#utility.yul\":16047:16144   */\n      tag_676\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":16193:16197   */\n      0x20\n        /* \"#utility.yul\":16224:16226   */\n      0x1f\n        /* \"#utility.yul\":16213:16227   */\n      dup3\n      gt\n        /* \"#utility.yul\":16241:16242   */\n      0x01\n        /* \"#utility.yul\":16236:16885   */\n      dup2\n      eq\n      tag_787\n      jumpi\n        /* \"#utility.yul\":16929:16930   */\n      0x00\n        /* \"#utility.yul\":16946:16952   */\n      dup4\n        /* \"#utility.yul\":16943:17032   */\n      iszero\n      tag_788\n      jumpi\n      pop\n        /* \"#utility.yul\":16998:17017   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":16992:17018   */\n      mload\n        /* \"#utility.yul\":16943:17032   */\n    tag_788:\n      not(0x00)\n        /* \"#utility.yul\":15800:15801   */\n      0x03\n        /* \"#utility.yul\":15796:15807   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":15792:15816   */\n      shr\n        /* \"#utility.yul\":15788:15817   */\n      not\n        /* \"#utility.yul\":15778:15818   */\n      and\n        /* \"#utility.yul\":15824:15825   */\n      0x01\n        /* \"#utility.yul\":15820:15831   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":15775:15832   */\n      or\n        /* \"#utility.yul\":17045:17126   */\n      dup5\n      sstore\n        /* \"#utility.yul\":16206:17136   */\n      jump(tag_609)\n        /* \"#utility.yul\":16236:16885   */\n    tag_787:\n        /* \"#utility.yul\":15096:15097   */\n      0x00\n        /* \"#utility.yul\":15089:15103   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":15133:15137   */\n      0x20\n        /* \"#utility.yul\":15120:15138   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":16272:16292   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":16390:16612   */\n    tag_791:\n        /* \"#utility.yul\":16404:16411   */\n      dup3\n        /* \"#utility.yul\":16401:16402   */\n      dup2\n        /* \"#utility.yul\":16398:16412   */\n      lt\n        /* \"#utility.yul\":16390:16612   */\n      iszero\n      tag_793\n      jumpi\n        /* \"#utility.yul\":16486:16505   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":16480:16506   */\n      mload\n        /* \"#utility.yul\":16465:16507   */\n      dup3\n      sstore\n        /* \"#utility.yul\":16593:16597   */\n      0x20\n        /* \"#utility.yul\":16578:16598   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":16546:16547   */\n      0x01\n        /* \"#utility.yul\":16534:16548   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":16420:16432   */\n      add\n        /* \"#utility.yul\":16390:16612   */\n      jump(tag_791)\n    tag_793:\n        /* \"#utility.yul\":16394:16397   */\n      pop\n        /* \"#utility.yul\":16640:16646   */\n      dup5\n        /* \"#utility.yul\":16631:16638   */\n      dup3\n        /* \"#utility.yul\":16628:16647   */\n      lt\n        /* \"#utility.yul\":16625:16826   */\n      iszero\n      tag_794\n      jumpi\n        /* \"#utility.yul\":16701:16720   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":16695:16721   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":16784:16785   */\n      0x03\n        /* \"#utility.yul\":16780:16794   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":16796:16799   */\n      0xf8\n        /* \"#utility.yul\":16776:16800   */\n      and\n        /* \"#utility.yul\":16772:16809   */\n      shr\n        /* \"#utility.yul\":16768:16810   */\n      not\n        /* \"#utility.yul\":16753:16811   */\n      and\n        /* \"#utility.yul\":16738:16812   */\n      dup2\n      sstore\n        /* \"#utility.yul\":16625:16826   */\n    tag_794:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16872:16873   */\n      0x01\n        /* \"#utility.yul\":16856:16870   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":16852:16874   */\n      add\n        /* \"#utility.yul\":16839:16875   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":15843:17142   */\n      jump\t// out\n        /* \"#utility.yul\":17426:17727   */\n    tag_651:\n        /* \"#utility.yul\":17555:17558   */\n      0x00\n        /* \"#utility.yul\":17593:17599   */\n      dup3\n        /* \"#utility.yul\":17587:17600   */\n      mload\n        /* \"#utility.yul\":17639:17645   */\n      dup1\n        /* \"#utility.yul\":17632:17636   */\n      0x20\n        /* \"#utility.yul\":17624:17630   */\n      dup6\n        /* \"#utility.yul\":17620:17637   */\n      add\n        /* \"#utility.yul\":17615:17618   */\n      dup5\n        /* \"#utility.yul\":17609:17646   */\n      mcopy\n        /* \"#utility.yul\":17701:17702   */\n      0x00\n        /* \"#utility.yul\":17665:17681   */\n      swap3\n      add\n        /* \"#utility.yul\":17690:17703   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":17665:17681   */\n      swap2\n        /* \"#utility.yul\":17426:17727   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_7e678c77cfa084e62aed03ceadb9b37aa6c80340da2f54168df7a1e5e1fdb0a3 442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n    data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43 9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n\n    auxdata: 0xa2646970667358221220f7c2954de56edf05d76f88f580037602b591bc93ef1a94ba39479acd75e7e8a564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3059": {
									"entryPoint": null,
									"id": 3059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37078ebb70756eaa8283dbd135311303449c4249fed1b31d27b8c4929aaae1e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:547:21",
										"nodeType": "YulBlock",
										"src": "0:547:21",
										"statements": [
											{
												"nativeSrc": "6:3:21",
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:103:21",
													"nodeType": "YulBlock",
													"src": "95:103:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:21",
																"nodeType": "YulBlock",
																"src": "141:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:21",
																					"nodeType": "YulLiteral",
																					"src": "150:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:21",
																					"nodeType": "YulLiteral",
																					"src": "153:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:21"
																			},
																			"nativeSrc": "143:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:21"
																		},
																		"nativeSrc": "143:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:21"
																		},
																		"nativeSrc": "112:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:21",
																		"nodeType": "YulLiteral",
																		"src": "137:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:21"
																},
																"nativeSrc": "108:32:21",
																"nodeType": "YulFunctionCall",
																"src": "108:32:21"
															},
															"nativeSrc": "105:52:21",
															"nodeType": "YulIf",
															"src": "105:52:21"
														},
														{
															"nativeSrc": "166:26:21",
															"nodeType": "YulAssignment",
															"src": "166:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "182:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "176:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:21"
																},
																"nativeSrc": "176:16:21",
																"nodeType": "YulFunctionCall",
																"src": "176:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "166:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14:184:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:21",
														"nodeType": "YulTypedName",
														"src": "61:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:21",
														"nodeType": "YulTypedName",
														"src": "72:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:21",
														"nodeType": "YulTypedName",
														"src": "84:6:21",
														"type": ""
													}
												],
												"src": "14:184:21"
											},
											{
												"body": {
													"nativeSrc": "377:168:21",
													"nodeType": "YulBlock",
													"src": "377:168:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "394:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:21",
																		"nodeType": "YulLiteral",
																		"src": "405:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "387:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:21"
																},
																"nativeSrc": "387:21:21",
																"nodeType": "YulFunctionCall",
																"src": "387:21:21"
															},
															"nativeSrc": "387:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "387:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "428:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "439:2:21",
																				"nodeType": "YulLiteral",
																				"src": "439:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "424:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:21"
																		},
																		"nativeSrc": "424:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:21",
																		"nodeType": "YulLiteral",
																		"src": "444:2:21",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "417:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:21"
																},
																"nativeSrc": "417:30:21",
																"nodeType": "YulFunctionCall",
																"src": "417:30:21"
															},
															"nativeSrc": "417:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "417:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "467:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:21",
																				"nodeType": "YulLiteral",
																				"src": "478:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "463:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:21"
																		},
																		"nativeSrc": "463:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:21"
																	},
																	{
																		"hexValue": "496e76616c69642063617020616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "483:20:21",
																		"nodeType": "YulLiteral",
																		"src": "483:20:21",
																		"type": "",
																		"value": "Invalid cap amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "456:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:21"
																},
																"nativeSrc": "456:48:21",
																"nodeType": "YulFunctionCall",
																"src": "456:48:21"
															},
															"nativeSrc": "456:48:21",
															"nodeType": "YulExpressionStatement",
															"src": "456:48:21"
														},
														{
															"nativeSrc": "513:26:21",
															"nodeType": "YulAssignment",
															"src": "513:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "525:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "536:2:21",
																		"nodeType": "YulLiteral",
																		"src": "536:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "521:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:21"
																},
																"nativeSrc": "521:18:21",
																"nodeType": "YulFunctionCall",
																"src": "521:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "513:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "513:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37078ebb70756eaa8283dbd135311303449c4249fed1b31d27b8c4929aaae1e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "203:342:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "354:9:21",
														"nodeType": "YulTypedName",
														"src": "354:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "368:4:21",
														"nodeType": "YulTypedName",
														"src": "368:4:21",
														"type": ""
													}
												],
												"src": "203:342:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_37078ebb70756eaa8283dbd135311303449c4249fed1b31d27b8c4929aaae1e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid cap amount\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604081905230608052612b52388190039081908339810160408190526100269161007a565b805f0361006e5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818d85c08185b5bdd5b9d60721b604482015260640160405180910390fd5b60a05260018055610091565b5f6020828403121561008a575f5ffd5b5051919050565b60805160a051612a766100dc5f395f8181610360015281816105d201528181610ff501528181611822015261185301525f8181611bd801528181611c010152611db80152612a765ff3fe6080604052600436106101f1575f3560e01c806352d1902d11610108578063a217fddf1161009d578063d547741f1161006d578063d547741f14610564578063dd62ed3e14610583578063e43252d7146105a2578063ec81b483146105c1578063f76e95e5146105f4575f5ffd5b8063a217fddf146104e3578063a9059cbb146104f6578063ad3cb1cc14610515578063bfab3b9e14610545575f5ffd5b80638ab1d681116100d85780638ab1d6811461047257806391d148541461049157806395d89b41146104b05780639dc29fac146104c4575f5ffd5b806352d1902d146104085780635c975abb1461041c57806370a082311461043f5780638456cb591461045e575f5ffd5b80632913daa01161018957806336568abe1161015957806336568abe146103845780633af32abf146103a35780633f4ba83a146103c257806340c10f19146103d65780634f1ef286146103f5575f5ffd5b80632913daa0146103055780632f2ff15d14610318578063313ce56714610337578063355274ea14610352575f5ffd5b80631663a066116101c45780631663a0661461028a57806318160ddd146102a957806323b872dd146102c7578063248a9ca3146102e6575f5ffd5b806301ffc9a7146101f557806306fdde0314610229578063077f224a1461024a578063095ea7b31461026b575b5f5ffd5b348015610200575f5ffd5b5061021461020f36600461235b565b610608565b60405190151581526020015b60405180910390f35b348015610234575f5ffd5b5061023d61063e565b6040516102209190612382565b348015610255575f5ffd5b50610269610264366004612417565b6106fe565b005b348015610276575f5ffd5b50610214610285366004612497565b610a0f565b348015610295575f5ffd5b506102696102a43660046124bf565b610a26565b3480156102b4575f5ffd5b506001545b604051908152602001610220565b3480156102d2575f5ffd5b506102146102e136600461253c565b610c1f565b3480156102f1575f5ffd5b506102b9610300366004612576565b610de5565b348015610310575f5ffd5b5060646102b9565b348015610323575f5ffd5b5061026961033236600461258d565b610e05565b348015610342575f5ffd5b5060405160128152602001610220565b34801561035d575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006102b9565b34801561038f575f5ffd5b5061026961039e36600461258d565b610e27565b3480156103ae575f5ffd5b506102146103bd3660046125b7565b610e5f565b3480156103cd575f5ffd5b50610269610ea4565b3480156103e1575f5ffd5b506102696103f0366004612497565b610f03565b6102696104033660046125e4565b6110ba565b348015610413575f5ffd5b506102b96110d5565b348015610427575f5ffd5b505f516020612a015f395f51905f525460ff16610214565b34801561044a575f5ffd5b506102b96104593660046125b7565b6110f0565b348015610469575f5ffd5b50610269611116565b34801561047d575f5ffd5b5061026961048c3660046125b7565b611175565b34801561049c575f5ffd5b506102146104ab36600461258d565b6111ff565b3480156104bb575f5ffd5b5061023d611235565b3480156104cf575f5ffd5b506102696104de366004612497565b611273565b3480156104ee575f5ffd5b506102b95f81565b348015610501575f5ffd5b50610214610510366004612497565b611403565b348015610520575f5ffd5b5061023d604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610550575f5ffd5b5061026961055f3660046124bf565b611568565b34801561056f575f5ffd5b5061026961057e36600461258d565b611727565b34801561058e575f5ffd5b506102b961059d3660046126a8565b611743565b3480156105ad575f5ffd5b506102696105bc3660046125b7565b61178c565b3480156105cc575f5ffd5b506102b97f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ff575f5ffd5b506102b961181b565b5f6001600160e01b03198216637965db0b60e01b148061063857506301ffc9a760e01b6001600160e01b03198316145b92915050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f5160206129815f395f51905f529161067c906126d0565b80601f01602080910402602001604051908101604052809291908181526020018280546106a8906126d0565b80156106f35780601f106106ca576101008083540402835291602001916106f3565b820191905f5260205f20905b8154815290600101906020018083116106d657829003601f168201915b505050505091505090565b5f61070761187d565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561072e5750825b90505f8267ffffffffffffffff16600114801561074a5750303b155b905081158015610758575080155b156107765760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107a057845460ff60401b1916600160401b1785555b6001600160a01b0386166107f35760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b60448201526064015b60405180910390fd5b6108648a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f920191909152506118a592505050565b61086c6118b7565b6108746118b7565b61087c6118c1565b6108846118b7565b61088e5f876118d1565b506108b97f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122876118d1565b506108d15f5160206129c15f395f51905f52876118d1565b506108fc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a876118d1565b506109277f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3876118d1565b506001600160a01b0386165f81815260208190526040808220805460ff1916600190811790915590519092917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91a3856001600160a01b03167f2583210d6110b6d11e7775956ed0bea544d92d3760073450942661b4264863658b8b8b8b6040516109b59493929190612730565b60405180910390a28315610a0357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b5f33610a1c818585611972565b5060019392505050565b5f5160206129c15f395f51905f52610a3d8161197f565b835f819003610a855760405162461bcd60e51b8152602060048201526014602482015273456d707479206163636f756e747320617272617960601b60448201526064016107ea565b825f03610ac45760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b1a5b5a5d609a1b60448201526064016107ea565b610ad060646001612775565b8310610b155760405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b60448201526064016107ea565b5f610b208486612775565b9050610b2d826001612775565b8110610b365750805b845b81811015610be1575f888883818110610b5357610b53612788565b9050602002016020810190610b6891906125b7565b90506001600160a01b038116610bbb5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d60431b60448201526064016107ea565b6001600160a01b03165f908152602081905260409020805460ff19169055600101610b38565b50610bec858261279c565b60405186907f3838459cd794256a3c29bb3186da72029a8036c0f596fee1bd526f8eb9493d41905f90a350505050505050565b5f610c2861198c565b6001600160a01b038416610c775760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656e646572206164647265737360501b60448201526064016107ea565b6001600160a01b038316610c9d5760405162461bcd60e51b81526004016107ea906127af565b815f03610ce65760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d604a1b60448201526064016107ea565b6001600160a01b038085165f9081526020819052604080822054928616825290205460ff918216911681610d555760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016107ea565b80610d725760405162461bcd60e51b81526004016107ea906127e6565b33610d7e8782876119bc565b610d89878787611a1a565b856001600160a01b0316876001600160a01b03167fd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de687604051610dce91815260200190565b60405180910390a3600193505050505b9392505050565b5f9081525f5160206129e15f395f51905f52602052604090206001015490565b610e0e82610de5565b610e178161197f565b610e2183836118d1565b50505050565b6001600160a01b0381163314610e505760405163334bd91960e11b815260040160405180910390fd5b610e5a8282611a77565b505050565b5f6001600160a01b038216610e865760405162461bcd60e51b81526004016107ea9061281d565b506001600160a01b03165f9081526020819052604090205460ff1690565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610ece8161197f565b610ed6611af0565b60405133907f5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d11766905f90a250565b610f0b611b4f565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122610f358161197f565b610f3d61198c565b6001600160a01b038316610f635760405162461bcd60e51b81526004016107ea906127af565b815f03610fa85760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b5a5b9d08185b5bdd5b9d606a1b60448201526064016107ea565b6001600160a01b0383165f9081526020819052604090205460ff1680610fe05760405162461bcd60e51b81526004016107ea906127e6565b6001545f610fee8583612775565b905061101b7f00000000000000000000000000000000000000000000000000000000000000006001612775565b81106110585760405162461bcd60e51b815260206004820152600c60248201526b10d85c08195e18d95959195960a21b60448201526064016107ea565b60018190556110678686611b86565b60405185906001600160a01b038816907f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273905f90a3505050506110b660015f516020612a215f395f51905f5255565b5050565b6110c2611bcd565b6110cb82611c71565b6110b68282611cf1565b5f6110de611dad565b505f5160206129a15f395f51905f5290565b6001600160a01b03165f9081525f5160206129815f395f51905f52602052604090205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6111408161197f565b611148611df6565b60405133907f81990fd9a5c552b8e3677917d8a03c07678f0d2cb68f88b634aca2022e9bd19f905f90a250565b5f5160206129c15f395f51905f5261118c8161197f565b6001600160a01b0382166111b25760405162461bcd60e51b81526004016107ea9061281d565b6001600160a01b0382165f81815260208190526040808220805460ff19169055519091907ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d908390a35050565b5f9182525f5160206129e15f395f51905f52602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f5160206129815f395f51905f529161067c906126d0565b61127b611b4f565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa1226112a58161197f565b6112ad61198c565b6001600160a01b0383166112fa5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206275726e206164647265737360601b60448201526064016107ea565b815f0361133f5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908189d5c9b88185b5bdd5b9d606a1b60448201526064016107ea565b5f611349846110f0565b905061135660018461279c565b811161139b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ea565b6001546113a8848261279c565b6001556113b58585611e3e565b60405184906001600160a01b038716907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6905f90a35050506110b660015f516020612a215f395f51905f5255565b5f61140c61198c565b6001600160a01b0383166114325760405162461bcd60e51b81526004016107ea906127af565b815f0361147b5760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d604a1b60448201526064016107ea565b335f81815260208190526040808220546001600160a01b038716835291205460ff9182169116816114e75760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016107ea565b806115045760405162461bcd60e51b81526004016107ea906127e6565b61150f838787611a1a565b856001600160a01b0316836001600160a01b03167fd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de68760405161155491815260200190565b60405180910390a350600195945050505050565b5f5160206129c15f395f51905f5261157f8161197f565b835f8190036115c75760405162461bcd60e51b8152602060048201526014602482015273456d707479206163636f756e747320617272617960601b60448201526064016107ea565b825f036116065760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b1a5b5a5d609a1b60448201526064016107ea565b61161260646001612775565b83106116575760405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b60448201526064016107ea565b5f6116628486612775565b905061166f826001612775565b81106116785750805b845b81811015610be1575f88888381811061169557611695612788565b90506020020160208101906116aa91906125b7565b90506001600160a01b0381166116fd5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d60431b60448201526064016107ea565b6001600160a01b03165f908152602081905260409020805460ff191660019081179091550161167a565b61173082610de5565b6117398161197f565b610e218383611a77565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b5f5160206129c15f395f51905f526117a38161197f565b6001600160a01b0382166117c95760405162461bcd60e51b81526004016107ea9061281d565b6001600160a01b0382165f81815260208190526040808220805460ff1916600190811790915590519092917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91a35050565b6001545f907f0000000000000000000000000000000000000000000000000000000000000000811061184d575f611877565b611877817f000000000000000000000000000000000000000000000000000000000000000061279c565b91505090565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610638565b6118ad611e72565b6110b68282611e97565b6118bf611e72565b565b6118c9611e72565b6118bf611ee7565b5f5f5160206129e15f395f51905f526118ea84846111ff565b611969575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561191f3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610638565b5f915050610638565b610e5a8383836001611eef565b6119898133611fd3565b50565b5f516020612a015f395f51905f525460ff16156118bf5760405163d93c066560e01b815260040160405180910390fd5b5f6119c78484611743565b90505f19811015610e215781811015611a0c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107ea565b610e2184848484035f611eef565b6001600160a01b038316611a4357604051634b637e8f60e11b81525f60048201526024016107ea565b6001600160a01b038216611a6c5760405163ec442f0560e01b81525f60048201526024016107ea565b610e5a83838361200c565b5f5f5160206129e15f395f51905f52611a9084846111ff565b15611969575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610638565b611af8612145565b5f516020612a015f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f516020612a215f395f51905f52805460011901611b8057604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600160a01b038216611baf5760405163ec442f0560e01b81525f60048201526024016107ea565b6110b65f838361200c565b60015f516020612a215f395f51905f5255565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611c5357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611c475f5160206129a15f395f51905f52546001600160a01b031690565b6001600160a01b031614155b156118bf5760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611c9b8161197f565b6001600160a01b0382166110b65760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064016107ea565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611d4b575060408051601f3d908101601f19168201909252611d4891810190612854565b60015b611d7357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107ea565b5f5160206129a15f395f51905f528114611da357604051632a87526960e21b8152600481018290526024016107ea565b610e5a8383612174565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118bf5760405163703e46dd60e11b815260040160405180910390fd5b611dfe61198c565b5f516020612a015f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611b31565b6001600160a01b038216611e6757604051634b637e8f60e11b81525f60048201526024016107ea565b6110b6825f8361200c565b611e7a6121c9565b6118bf57604051631afcd79f60e31b815260040160405180910390fd5b611e9f611e72565b5f5160206129815f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611ed884826128af565b5060048101610e2183826128af565b611bba611e72565b5f5160206129815f395f51905f526001600160a01b038516611f265760405163e602df0560e01b81525f60048201526024016107ea565b6001600160a01b038416611f4f57604051634a1406b160e11b81525f60048201526024016107ea565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611fcc57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611fc391815260200190565b60405180910390a35b5050505050565b611fdd82826111ff565b6110b65760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107ea565b5f5160206129815f395f51905f526001600160a01b0384166120465781816002015f82825461203b9190612775565b909155506120b69050565b6001600160a01b0384165f90815260208290526040902054828110156120985760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016107ea565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b0383166120d45760028101805483900390556120f2565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161213791815260200190565b60405180910390a350505050565b5f516020612a015f395f51905f525460ff166118bf57604051638dfc202b60e01b815260040160405180910390fd5b61217d826121e2565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156121c157610e5a8282612245565b6110b66122b7565b5f6121d261187d565b54600160401b900460ff16919050565b806001600160a01b03163b5f0361221757604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107ea565b5f5160206129a15f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051612261919061296a565b5f60405180830381855af49150503d805f8114612299576040519150601f19603f3d011682016040523d82523d5f602084013e61229e565b606091505b50915091506122ae8583836122d6565b95945050505050565b34156118bf5760405163b398979f60e01b815260040160405180910390fd5b6060826122eb576122e682612332565b610dde565b815115801561230257506001600160a01b0384163b155b1561232b57604051639996b31560e01b81526001600160a01b03851660048201526024016107ea565b5080610dde565b8051156123425780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f6020828403121561236b575f5ffd5b81356001600160e01b031981168114610dde575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f83601f8401126123c7575f5ffd5b50813567ffffffffffffffff8111156123de575f5ffd5b6020830191508360208285010111156123f5575f5ffd5b9250929050565b80356001600160a01b0381168114612412575f5ffd5b919050565b5f5f5f5f5f6060868803121561242b575f5ffd5b853567ffffffffffffffff811115612441575f5ffd5b61244d888289016123b7565b909650945050602086013567ffffffffffffffff81111561246c575f5ffd5b612478888289016123b7565b909450925061248b9050604087016123fc565b90509295509295909350565b5f5f604083850312156124a8575f5ffd5b6124b1836123fc565b946020939093013593505050565b5f5f5f5f606085870312156124d2575f5ffd5b843567ffffffffffffffff8111156124e8575f5ffd5b8501601f810187136124f8575f5ffd5b803567ffffffffffffffff81111561250e575f5ffd5b8760208260051b8401011115612522575f5ffd5b602091820198909750908601359560400135945092505050565b5f5f5f6060848603121561254e575f5ffd5b612557846123fc565b9250612565602085016123fc565b929592945050506040919091013590565b5f60208284031215612586575f5ffd5b5035919050565b5f5f6040838503121561259e575f5ffd5b823591506125ae602084016123fc565b90509250929050565b5f602082840312156125c7575f5ffd5b610dde826123fc565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156125f5575f5ffd5b6125fe836123fc565b9150602083013567ffffffffffffffff811115612619575f5ffd5b8301601f81018513612629575f5ffd5b803567ffffffffffffffff811115612643576126436125d0565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612672576126726125d0565b604052818152828201602001871015612689575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f604083850312156126b9575f5ffd5b6126c2836123fc565b91506125ae602084016123fc565b600181811c908216806126e457607f821691505b60208210810361270257634e487b7160e01b5f52602260045260245ffd5b50919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f612743604083018688612708565b8281036020840152612756818587612708565b979650505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561063857610638612761565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561063857610638612761565b60208082526019908201527f496e76616c696420726563697069656e74206164647265737300000000000000604082015260600190565b60208082526019908201527f526563697069656e74206e6f742077686974656c697374656400000000000000604082015260600190565b60208082526017908201527f496e76616c6964206163636f756e742061646472657373000000000000000000604082015260600190565b5f60208284031215612864575f5ffd5b5051919050565b601f821115610e5a57805f5260205f20601f840160051c810160208510156128905750805b601f840160051c820191505b81811015611fcc575f815560010161289c565b815167ffffffffffffffff8111156128c9576128c96125d0565b6128dd816128d784546126d0565b8461286b565b6020601f82116001811461290f575f83156128f85750848201515b5f19600385901b1c1916600184901b178455611fcc565b5f84815260208120601f198516915b8281101561293e578785015182556020948501946001909201910161291e565b508482101561295b57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee698502dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220f7c2954de56edf05d76f88f580037602b591bc93ef1a94ba39479acd75e7e8a564736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x80 MSTORE PUSH2 0x2B52 CODESIZE DUP2 SWAP1 SUB SWAP1 DUP2 SWAP1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x26 SWAP2 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A590818D85C08185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH2 0x91 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2A76 PUSH2 0xDC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x360 ADD MSTORE DUP2 DUP2 PUSH2 0x5D2 ADD MSTORE DUP2 DUP2 PUSH2 0xFF5 ADD MSTORE DUP2 DUP2 PUSH2 0x1822 ADD MSTORE PUSH2 0x1853 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1BD8 ADD MSTORE DUP2 DUP2 PUSH2 0x1C01 ADD MSTORE PUSH2 0x1DB8 ADD MSTORE PUSH2 0x2A76 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xEC81B483 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xF76E95E5 EQ PUSH2 0x5F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xBFAB3B9E EQ PUSH2 0x545 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8AB1D681 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x45E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2913DAA0 GT PUSH2 0x189 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2913DAA0 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1663A066 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x1663A066 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x235B JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x2382 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x253C JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x2576 JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x2B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0xEA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x10D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x1116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x1175 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x1235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1403 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x181B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x638 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x67C SWAP1 PUSH2 0x26D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x707 PUSH2 0x187D JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x72E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x74A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x7A0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x864 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x18A5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x874 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x884 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x88E PUSH0 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8B9 PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8D1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x927 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 LOG3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2583210D6110B6D11E7775956ED0BEA544D92D3760073450942661B426486365 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x9B5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 ISZERO PUSH2 0xA03 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA1C DUP2 DUP6 DUP6 PUSH2 0x1972 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0xA3D DUP2 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH0 DUP2 SWAP1 SUB PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D707479206163636F756E7473206172726179 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xAD0 PUSH1 0x64 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP4 LT PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42617463682073697A6520746F6F206C61726765 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0xB20 DUP5 DUP7 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2D DUP3 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0xB36 JUMPI POP DUP1 JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI PUSH0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0x2788 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xB38 JUMP JUMPDEST POP PUSH2 0xBEC DUP6 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH32 0x3838459CD794256A3C29BB3186DA72029A8036C0F596FEE1BD526F8EB9493D41 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642073656E6465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND DUP2 PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST CALLER PUSH2 0xD7E DUP8 DUP3 DUP8 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xD89 DUP8 DUP8 DUP8 PUSH2 0x1A1A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDCE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE0E DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE21 DUP4 DUP4 PUSH2 0x18D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5A DUP3 DUP3 PUSH2 0x1A77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xECE DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x5B65B0C1363B3003DB9BCC5E1FD8805A6D6BF5BF6DC9D3431EE4494CD7D11766 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xF0B PUSH2 0x1B4F JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0xF35 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081B5A5B9D08185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 PUSH2 0xFEE DUP6 DUP4 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0x101B PUSH32 0x0 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10D85C08195E18D959591959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x1067 DUP7 DUP7 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP POP PUSH2 0x10B6 PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10C2 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x10CB DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH2 0x1CF1 JUMP JUMPDEST PUSH0 PUSH2 0x10DE PUSH2 0x1DAD JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1140 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1148 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x81990FD9A5C552B8E3677917D8A03C07678F0D2CB68F88B634ACA2022E9BD19F SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x118C DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP1 DUP4 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x67C SWAP1 PUSH2 0x26D0 JUMP JUMPDEST PUSH2 0x127B PUSH2 0x1B4F JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0x12A5 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206275726E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908189D5C9B88185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0x1349 DUP5 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1356 PUSH1 0x1 DUP5 PUSH2 0x279C JUMP JUMPDEST DUP2 GT PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13A8 DUP5 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x13B5 DUP6 DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP PUSH2 0x10B6 PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x140C PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND DUP2 PUSH2 0x14E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH2 0x150F DUP4 DUP8 DUP8 PUSH2 0x1A1A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1554 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x157F DUP2 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH0 DUP2 SWAP1 SUB PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D707479206163636F756E7473206172726179 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x1612 PUSH1 0x64 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP4 LT PUSH2 0x1657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42617463682073697A6520746F6F206C61726765 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0x1662 DUP5 DUP7 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0x166F DUP3 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0x1678 JUMPI POP DUP1 JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI PUSH0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1695 JUMPI PUSH2 0x1695 PUSH2 0x2788 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADD PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1730 DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x1739 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE21 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH32 0x0 DUP2 LT PUSH2 0x184D JUMPI PUSH0 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x1877 DUP2 PUSH32 0x0 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x18AD PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x18BF PUSH2 0x1E72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x18BF PUSH2 0x1EE7 JUMP JUMPDEST PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x18EA DUP5 DUP5 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1969 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x191F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1989 DUP2 CALLER PUSH2 0x1FD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19C7 DUP5 DUP5 PUSH2 0x1743 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE21 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE21 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x1A90 DUP5 DUP5 PUSH2 0x11FF JUMP JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH2 0x1AF8 PUSH2 0x2145 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x10B6 PUSH0 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1C53 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C47 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1C9B DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696D706C656D656E746174696F6E20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2854 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DFE PUSH2 0x198C JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x10B6 DUP3 PUSH0 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH2 0x1E7A PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E9F PUSH2 0x1E72 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1ED8 DUP5 DUP3 PUSH2 0x28AF JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0xE21 DUP4 DUP3 PUSH2 0x28AF JUMP JUMPDEST PUSH2 0x1BBA PUSH2 0x1E72 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1F26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1FCC JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FC3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FDD DUP3 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2046 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x203B SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x20B6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2098 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20D4 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2137 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217D DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21C1 JUMPI PUSH2 0xE5A DUP3 DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x10B6 PUSH2 0x22B7 JUMP JUMPDEST PUSH0 PUSH2 0x21D2 PUSH2 0x187D JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x2217 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2299 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x229E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x22AE DUP6 DUP4 DUP4 PUSH2 0x22D6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x22EB JUMPI PUSH2 0x22E6 DUP3 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2302 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST POP DUP1 PUSH2 0xDDE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2342 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x23F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2412 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x242B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x244D DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x246C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2478 DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x248B SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x24B1 DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x24F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x250E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x2522 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP9 SWAP1 SWAP8 POP SWAP1 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x254E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2557 DUP5 PUSH2 0x23FC JUMP JUMPDEST SWAP3 POP PUSH2 0x2565 PUSH1 0x20 DUP6 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2586 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x259E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x25AE PUSH1 0x20 DUP5 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDDE DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x25FE DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2643 JUMPI PUSH2 0x2643 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2672 JUMPI PUSH2 0x2672 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2689 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x26C2 DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE PUSH1 0x20 DUP5 ADD PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x2743 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x2708 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2756 DUP2 DUP6 DUP8 PUSH2 0x2708 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x2761 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x526563697069656E74206E6F742077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206163636F756E742061646472657373000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE5A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2890 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FCC JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x289C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C9 JUMPI PUSH2 0x28C9 PUSH2 0x25D0 JUMP JUMPDEST PUSH2 0x28DD DUP2 PUSH2 0x28D7 DUP5 SLOAD PUSH2 0x26D0 JUMP JUMPDEST DUP5 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x290F JUMPI PUSH0 DUP4 ISZERO PUSH2 0x28F8 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1FCC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x293E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x291E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x295B JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE STOP CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC442A94F1A1FAC79AF32856 0xAF 0x2A PUSH5 0xF63648CFA2 0xEF EXTCODESIZE SWAP9 PUSH2 0xA5B 0xB7 0xCB EOFCREATE 0x4C RETURNCONTRACT 0x69 DUP6 MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xCD MCOPY DATALOADN 0x5C6E XOR PUSH31 0x77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F033009B779B17422D 0xD EXTDELEGATECALL 0x22 0x23 ADD DUP12 ORIGIN 0xB4 DATALOADN 0xFA46 RJUMP 0x7172 RETURNDATASIZE PUSH9 0x17E2486D003BECC55F STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC2 SWAP6 0x4D JUMPF 0x6EDF SDIV 0xD7 PUSH16 0x88F580037602B591BC93EF1A94BA3947 SWAP11 0xCD PUSH22 0xE7E8A564736F6C634300081E00330000000000000000 ",
							"sourceMap": "1094:20020:20:-:0;;;;;1171:4:2;1128:48;;6478:231:20;;;;;;;;1094:20020;6478:231;;;;;;;;;;:::i;:::-;6530:4;6538:1;6530:9;6522:40;;;;-1:-1:-1;;;6522:40:20;;405:2:21;6522:40:20;;;387:21:21;444:2;424:18;;;417:30;-1:-1:-1;;;463:18:21;;;456:48;521:18;;6522:40:20;;;;;;;;6572:10;;6701:1;6684:18;;1094:20020;;14:184:21;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:21;;14:184;-1:-1:-1;14:184:21:o;203:342::-;1094:20020:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CAP_2939": {
									"entryPoint": null,
									"id": 2939,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 6327,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_880": {
									"entryPoint": 6309,
									"id": 880,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_908": {
									"entryPoint": 7831,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Pausable_init_1539": {
									"entryPoint": null,
									"id": 1539,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_1675": {
									"entryPoint": 6337,
									"id": 1675,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_1693": {
									"entryPoint": 7911,
									"id": 1693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1312": {
									"entryPoint": 6514,
									"id": 1312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1380": {
									"entryPoint": 7919,
									"id": 1380,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3836": {
									"entryPoint": 7281,
									"id": 3836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1294": {
									"entryPoint": 7742,
									"id": 1294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 7794,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2348": {
									"entryPoint": 8887,
									"id": 2348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_760": {
									"entryPoint": 7597,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_744": {
									"entryPoint": 7117,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 6527,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 8147,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getERC20Storage_864": {
									"entryPoint": null,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_629": {
									"entryPoint": 6269,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_1501": {
									"entryPoint": null,
									"id": 1501,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_1663": {
									"entryPoint": null,
									"id": 1663,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 6353,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": 8649,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1261": {
									"entryPoint": 7046,
									"id": 1261,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1745": {
									"entryPoint": 7098,
									"id": 1745,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1729": {
									"entryPoint": 6991,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_1610": {
									"entryPoint": 7670,
									"id": 1610,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1573": {
									"entryPoint": 6540,
									"id": 1573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1586": {
									"entryPoint": 8517,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2722": {
									"entryPoint": 9010,
									"id": 2722,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 6775,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_2128": {
									"entryPoint": 8674,
									"id": 2128,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1428": {
									"entryPoint": 6588,
									"id": 1428,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1136": {
									"entryPoint": 6682,
									"id": 1136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1634": {
									"entryPoint": 6896,
									"id": 1634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1228": {
									"entryPoint": 8204,
									"id": 1228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_811": {
									"entryPoint": 7409,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addToWhitelist_3479": {
									"entryPoint": 6028,
									"id": 3479,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_1033": {
									"entryPoint": 5955,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1057": {
									"entryPoint": 2575,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_985": {
									"entryPoint": 4336,
									"id": 985,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchRemoveFromWhitelist_3712": {
									"entryPoint": 2598,
									"id": 3712,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@burn_3286": {
									"entryPoint": 4723,
									"id": 3286,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cap_3806": {
									"entryPoint": null,
									"id": 3806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2640": {
									"entryPoint": 8773,
									"id": 2640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2780": {
									"entryPoint": null,
									"id": 2780,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_2101": {
									"entryPoint": null,
									"id": 2101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 3557,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 3589,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 4607,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_3141": {
									"entryPoint": 1790,
									"id": 3141,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@isWhitelisted_3767": {
									"entryPoint": 3679,
									"id": 3767,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxBatchSize_3815": {
									"entryPoint": null,
									"id": 3815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_3218": {
									"entryPoint": 3843,
									"id": 3218,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_924": {
									"entryPoint": 1598,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3728": {
									"entryPoint": 4374,
									"id": 3728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1561": {
									"entryPoint": null,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processBatch_3611": {
									"entryPoint": 5480,
									"id": 3611,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@proxiableUUID_702": {
									"entryPoint": 4309,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingMintable_3787": {
									"entryPoint": 6171,
									"id": 3787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_3509": {
									"entryPoint": 4469,
									"id": 3509,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_232": {
									"entryPoint": 3623,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 5927,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1803": {
									"entryPoint": null,
									"id": 1803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1544,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_940": {
									"entryPoint": 4661,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_3797": {
									"entryPoint": null,
									"id": 3797,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3448": {
									"entryPoint": 3103,
									"id": 3448,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_3358": {
									"entryPoint": 5123,
									"id": 3358,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_3744": {
									"entryPoint": 3748,
									"id": 3744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2164": {
									"entryPoint": 8564,
									"id": 2164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_722": {
									"entryPoint": 4282,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2680": {
									"entryPoint": 8918,
									"id": 2680,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 9212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_calldata": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 9700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_uint256": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 10324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_string_calldata": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10032,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26c54b3e13aa2dfe42517d4e33d479520cac47dc66cf13820ed08a9ade960c6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e039e896b666aadb82976a4fad223163b0be195242fbcf4255e53d4f2a4e4aa0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 10347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17729:21",
										"nodeType": "YulBlock",
										"src": "0:17729:21",
										"statements": [
											{
												"nativeSrc": "6:3:21",
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:21",
													"nodeType": "YulBlock",
													"src": "83:217:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:21",
																"nodeType": "YulBlock",
																"src": "129:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:21",
																					"nodeType": "YulLiteral",
																					"src": "138:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:21",
																					"nodeType": "YulLiteral",
																					"src": "141:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:21"
																			},
																			"nativeSrc": "131:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:21"
																		},
																		"nativeSrc": "131:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:21"
																		},
																		"nativeSrc": "100:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:21",
																		"nodeType": "YulLiteral",
																		"src": "125:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:21"
																},
																"nativeSrc": "96:32:21",
																"nodeType": "YulFunctionCall",
																"src": "96:32:21"
															},
															"nativeSrc": "93:52:21",
															"nodeType": "YulIf",
															"src": "93:52:21"
														},
														{
															"nativeSrc": "154:36:21",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:21"
																},
																"nativeSrc": "167:23:21",
																"nodeType": "YulFunctionCall",
																"src": "167:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:21",
																	"nodeType": "YulTypedName",
																	"src": "158:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:21",
																"nodeType": "YulBlock",
																"src": "254:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:21",
																					"nodeType": "YulLiteral",
																					"src": "263:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:21",
																					"nodeType": "YulLiteral",
																					"src": "266:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:21"
																			},
																			"nativeSrc": "256:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:21"
																		},
																		"nativeSrc": "256:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:21",
																								"nodeType": "YulLiteral",
																								"src": "234:3:21",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:21",
																								"nodeType": "YulLiteral",
																								"src": "239:10:21",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:21"
																						},
																						"nativeSrc": "230:20:21",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:21"
																				},
																				"nativeSrc": "219:32:21",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:21"
																		},
																		"nativeSrc": "209:43:21",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:21"
																},
																"nativeSrc": "202:51:21",
																"nodeType": "YulFunctionCall",
																"src": "202:51:21"
															},
															"nativeSrc": "199:71:21",
															"nodeType": "YulIf",
															"src": "199:71:21"
														},
														{
															"nativeSrc": "279:15:21",
															"nodeType": "YulAssignment",
															"src": "279:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:21",
																"nodeType": "YulIdentifier",
																"src": "289:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:21",
														"nodeType": "YulTypedName",
														"src": "49:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:21",
														"nodeType": "YulTypedName",
														"src": "60:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:21",
														"nodeType": "YulTypedName",
														"src": "72:6:21",
														"type": ""
													}
												],
												"src": "14:286:21"
											},
											{
												"body": {
													"nativeSrc": "400:92:21",
													"nodeType": "YulBlock",
													"src": "400:92:21",
													"statements": [
														{
															"nativeSrc": "410:26:21",
															"nodeType": "YulAssignment",
															"src": "410:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:21",
																		"nodeType": "YulLiteral",
																		"src": "433:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:21"
																},
																"nativeSrc": "418:18:21",
																"nodeType": "YulFunctionCall",
																"src": "418:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:21"
																				},
																				"nativeSrc": "470:14:21",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:21"
																		},
																		"nativeSrc": "463:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:21"
																},
																"nativeSrc": "445:41:21",
																"nodeType": "YulFunctionCall",
																"src": "445:41:21"
															},
															"nativeSrc": "445:41:21",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:21",
														"nodeType": "YulTypedName",
														"src": "369:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:21",
														"nodeType": "YulTypedName",
														"src": "380:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:21",
														"nodeType": "YulTypedName",
														"src": "391:4:21",
														"type": ""
													}
												],
												"src": "305:187:21"
											},
											{
												"body": {
													"nativeSrc": "618:297:21",
													"nodeType": "YulBlock",
													"src": "618:297:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "635:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "646:2:21",
																		"nodeType": "YulLiteral",
																		"src": "646:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:21"
																},
																"nativeSrc": "628:21:21",
																"nodeType": "YulFunctionCall",
																"src": "628:21:21"
															},
															"nativeSrc": "628:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "628:21:21"
														},
														{
															"nativeSrc": "658:27:21",
															"nodeType": "YulVariableDeclaration",
															"src": "658:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "678:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "672:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "672:5:21"
																},
																"nativeSrc": "672:13:21",
																"nodeType": "YulFunctionCall",
																"src": "672:13:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:21",
																	"nodeType": "YulTypedName",
																	"src": "662:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:21",
																				"nodeType": "YulLiteral",
																				"src": "716:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:21"
																		},
																		"nativeSrc": "701:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "721:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:21"
																},
																"nativeSrc": "694:34:21",
																"nodeType": "YulFunctionCall",
																"src": "694:34:21"
															},
															"nativeSrc": "694:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "694:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:21",
																				"nodeType": "YulLiteral",
																				"src": "758:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:21"
																		},
																		"nativeSrc": "743:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "767:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:2:21",
																				"nodeType": "YulLiteral",
																				"src": "775:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:21"
																		},
																		"nativeSrc": "763:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "763:15:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "780:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:21"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "737:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:21"
																},
																"nativeSrc": "737:50:21",
																"nodeType": "YulFunctionCall",
																"src": "737:50:21"
															},
															"nativeSrc": "737:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "737:50:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "811:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "811:9:21"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "822:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "822:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "807:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:21"
																				},
																				"nativeSrc": "807:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:21",
																				"nodeType": "YulLiteral",
																				"src": "831:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "803:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:21"
																		},
																		"nativeSrc": "803:31:21",
																		"nodeType": "YulFunctionCall",
																		"src": "803:31:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:1:21",
																		"nodeType": "YulLiteral",
																		"src": "836:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:21"
																},
																"nativeSrc": "796:42:21",
																"nodeType": "YulFunctionCall",
																"src": "796:42:21"
															},
															"nativeSrc": "796:42:21",
															"nodeType": "YulExpressionStatement",
															"src": "796:42:21"
														},
														{
															"nativeSrc": "847:62:21",
															"nodeType": "YulAssignment",
															"src": "847:62:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "863:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "863:9:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "882:6:21",
																								"nodeType": "YulIdentifier",
																								"src": "882:6:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "890:2:21",
																								"nodeType": "YulLiteral",
																								"src": "890:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "878:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:21"
																						},
																						"nativeSrc": "878:15:21",
																						"nodeType": "YulFunctionCall",
																						"src": "878:15:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:2:21",
																								"nodeType": "YulLiteral",
																								"src": "899:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "895:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:21"
																						},
																						"nativeSrc": "895:7:21",
																						"nodeType": "YulFunctionCall",
																						"src": "895:7:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "874:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:21"
																				},
																				"nativeSrc": "874:29:21",
																				"nodeType": "YulFunctionCall",
																				"src": "874:29:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:21"
																		},
																		"nativeSrc": "859:45:21",
																		"nodeType": "YulFunctionCall",
																		"src": "859:45:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:21",
																		"nodeType": "YulLiteral",
																		"src": "906:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "855:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:21"
																},
																"nativeSrc": "855:54:21",
																"nodeType": "YulFunctionCall",
																"src": "855:54:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "847:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "847:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "497:418:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "587:9:21",
														"nodeType": "YulTypedName",
														"src": "587:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "598:6:21",
														"nodeType": "YulTypedName",
														"src": "598:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "609:4:21",
														"nodeType": "YulTypedName",
														"src": "609:4:21",
														"type": ""
													}
												],
												"src": "497:418:21"
											},
											{
												"body": {
													"nativeSrc": "993:275:21",
													"nodeType": "YulBlock",
													"src": "993:275:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "1042:16:21",
																"nodeType": "YulBlock",
																"src": "1042:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1051:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1051:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1054:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1054:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1044:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:21"
																			},
																			"nativeSrc": "1044:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1044:12:21"
																		},
																		"nativeSrc": "1044:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1021:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1021:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1029:4:21",
																						"nodeType": "YulLiteral",
																						"src": "1029:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1017:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1017:3:21"
																				},
																				"nativeSrc": "1017:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:17:21"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1036:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "1036:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1013:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1013:3:21"
																		},
																		"nativeSrc": "1013:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1013:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1006:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:21"
																},
																"nativeSrc": "1006:35:21",
																"nodeType": "YulFunctionCall",
																"src": "1006:35:21"
															},
															"nativeSrc": "1003:55:21",
															"nodeType": "YulIf",
															"src": "1003:55:21"
														},
														{
															"nativeSrc": "1067:30:21",
															"nodeType": "YulAssignment",
															"src": "1067:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1090:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1090:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1077:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1077:12:21"
																},
																"nativeSrc": "1077:20:21",
																"nodeType": "YulFunctionCall",
																"src": "1077:20:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1067:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1140:16:21",
																"nodeType": "YulBlock",
																"src": "1140:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1149:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1152:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1152:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1142:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1142:6:21"
																			},
																			"nativeSrc": "1142:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1142:12:21"
																		},
																		"nativeSrc": "1142:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1142:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1112:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1112:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1120:18:21",
																		"nodeType": "YulLiteral",
																		"src": "1120:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1109:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1109:2:21"
																},
																"nativeSrc": "1109:30:21",
																"nodeType": "YulFunctionCall",
																"src": "1109:30:21"
															},
															"nativeSrc": "1106:50:21",
															"nodeType": "YulIf",
															"src": "1106:50:21"
														},
														{
															"nativeSrc": "1165:29:21",
															"nodeType": "YulAssignment",
															"src": "1165:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1181:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1189:4:21",
																		"nodeType": "YulLiteral",
																		"src": "1189:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1177:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:21"
																},
																"nativeSrc": "1177:17:21",
																"nodeType": "YulFunctionCall",
																"src": "1177:17:21"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1165:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "1165:8:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1246:16:21",
																"nodeType": "YulBlock",
																"src": "1246:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1255:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1255:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1248:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1248:6:21"
																			},
																			"nativeSrc": "1248:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1248:12:21"
																		},
																		"nativeSrc": "1248:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1248:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1217:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1217:6:21"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1225:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1213:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1213:3:21"
																				},
																				"nativeSrc": "1213:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1213:19:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1234:4:21",
																				"nodeType": "YulLiteral",
																				"src": "1234:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1209:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:21"
																		},
																		"nativeSrc": "1209:30:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1209:30:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1241:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1241:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1206:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:21"
																},
																"nativeSrc": "1206:39:21",
																"nodeType": "YulFunctionCall",
																"src": "1206:39:21"
															},
															"nativeSrc": "1203:59:21",
															"nodeType": "YulIf",
															"src": "1203:59:21"
														}
													]
												},
												"name": "abi_decode_string_calldata",
												"nativeSrc": "920:348:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "956:6:21",
														"nodeType": "YulTypedName",
														"src": "956:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "964:3:21",
														"nodeType": "YulTypedName",
														"src": "964:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "972:8:21",
														"nodeType": "YulTypedName",
														"src": "972:8:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "982:6:21",
														"nodeType": "YulTypedName",
														"src": "982:6:21",
														"type": ""
													}
												],
												"src": "920:348:21"
											},
											{
												"body": {
													"nativeSrc": "1322:124:21",
													"nodeType": "YulBlock",
													"src": "1322:124:21",
													"statements": [
														{
															"nativeSrc": "1332:29:21",
															"nodeType": "YulAssignment",
															"src": "1332:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1354:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1354:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1341:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1341:12:21"
																},
																"nativeSrc": "1341:20:21",
																"nodeType": "YulFunctionCall",
																"src": "1341:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1332:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1332:5:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1424:16:21",
																"nodeType": "YulBlock",
																"src": "1424:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1433:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1436:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1426:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:21"
																			},
																			"nativeSrc": "1426:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1426:12:21"
																		},
																		"nativeSrc": "1426:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1426:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1383:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1383:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1394:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "1394:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1409:3:21",
																										"nodeType": "YulLiteral",
																										"src": "1409:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1414:1:21",
																										"nodeType": "YulLiteral",
																										"src": "1414:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1405:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "1405:3:21"
																								},
																								"nativeSrc": "1405:11:21",
																								"nodeType": "YulFunctionCall",
																								"src": "1405:11:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1418:1:21",
																								"nodeType": "YulLiteral",
																								"src": "1418:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1401:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "1401:3:21"
																						},
																						"nativeSrc": "1401:19:21",
																						"nodeType": "YulFunctionCall",
																						"src": "1401:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1390:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1390:3:21"
																				},
																				"nativeSrc": "1390:31:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1390:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1380:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "1380:2:21"
																		},
																		"nativeSrc": "1380:42:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1380:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1373:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1373:6:21"
																},
																"nativeSrc": "1373:50:21",
																"nodeType": "YulFunctionCall",
																"src": "1373:50:21"
															},
															"nativeSrc": "1370:70:21",
															"nodeType": "YulIf",
															"src": "1370:70:21"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1273:173:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1301:6:21",
														"nodeType": "YulTypedName",
														"src": "1301:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1312:5:21",
														"nodeType": "YulTypedName",
														"src": "1312:5:21",
														"type": ""
													}
												],
												"src": "1273:173:21"
											},
											{
												"body": {
													"nativeSrc": "1595:646:21",
													"nodeType": "YulBlock",
													"src": "1595:646:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "1641:16:21",
																"nodeType": "YulBlock",
																"src": "1641:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1650:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1650:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1653:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1653:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1643:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1643:6:21"
																			},
																			"nativeSrc": "1643:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1643:12:21"
																		},
																		"nativeSrc": "1643:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1643:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1616:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "1616:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1625:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1625:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1612:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1612:3:21"
																		},
																		"nativeSrc": "1612:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1612:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1637:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1637:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1608:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:21"
																},
																"nativeSrc": "1608:32:21",
																"nodeType": "YulFunctionCall",
																"src": "1608:32:21"
															},
															"nativeSrc": "1605:52:21",
															"nodeType": "YulIf",
															"src": "1605:52:21"
														},
														{
															"nativeSrc": "1666:37:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1666:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1693:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1680:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1680:12:21"
																},
																"nativeSrc": "1680:23:21",
																"nodeType": "YulFunctionCall",
																"src": "1680:23:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1670:6:21",
																	"nodeType": "YulTypedName",
																	"src": "1670:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1746:16:21",
																"nodeType": "YulBlock",
																"src": "1746:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1755:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1758:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1758:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1748:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:21"
																			},
																			"nativeSrc": "1748:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:21"
																		},
																		"nativeSrc": "1748:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1718:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1726:18:21",
																		"nodeType": "YulLiteral",
																		"src": "1726:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1715:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1715:2:21"
																},
																"nativeSrc": "1715:30:21",
																"nodeType": "YulFunctionCall",
																"src": "1715:30:21"
															},
															"nativeSrc": "1712:50:21",
															"nodeType": "YulIf",
															"src": "1712:50:21"
														},
														{
															"nativeSrc": "1771:85:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:85:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1828:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1828:9:21"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1839:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1824:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1824:3:21"
																		},
																		"nativeSrc": "1824:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1824:22:21"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1848:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "1848:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nativeSrc": "1797:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "1797:26:21"
																},
																"nativeSrc": "1797:59:21",
																"nodeType": "YulFunctionCall",
																"src": "1797:59:21"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "1775:8:21",
																	"nodeType": "YulTypedName",
																	"src": "1775:8:21",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "1785:8:21",
																	"nodeType": "YulTypedName",
																	"src": "1785:8:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1865:18:21",
															"nodeType": "YulAssignment",
															"src": "1865:18:21",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1875:8:21",
																"nodeType": "YulIdentifier",
																"src": "1875:8:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1865:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:21"
																}
															]
														},
														{
															"nativeSrc": "1892:18:21",
															"nodeType": "YulAssignment",
															"src": "1892:18:21",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1902:8:21",
																"nodeType": "YulIdentifier",
																"src": "1902:8:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1892:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:21"
																}
															]
														},
														{
															"nativeSrc": "1919:48:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1919:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1952:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1963:2:21",
																				"nodeType": "YulLiteral",
																				"src": "1963:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1948:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:21"
																		},
																		"nativeSrc": "1948:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1935:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:21"
																},
																"nativeSrc": "1935:32:21",
																"nodeType": "YulFunctionCall",
																"src": "1935:32:21"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1923:8:21",
																	"nodeType": "YulTypedName",
																	"src": "1923:8:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2012:16:21",
																"nodeType": "YulBlock",
																"src": "2012:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:21"
																			},
																			"nativeSrc": "2014:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:21"
																		},
																		"nativeSrc": "2014:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1982:8:21",
																		"nodeType": "YulIdentifier",
																		"src": "1982:8:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:18:21",
																		"nodeType": "YulLiteral",
																		"src": "1992:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1979:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1979:2:21"
																},
																"nativeSrc": "1979:32:21",
																"nodeType": "YulFunctionCall",
																"src": "1979:32:21"
															},
															"nativeSrc": "1976:52:21",
															"nodeType": "YulIf",
															"src": "1976:52:21"
														},
														{
															"nativeSrc": "2037:87:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2037:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2094:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2094:9:21"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "2105:8:21",
																				"nodeType": "YulIdentifier",
																				"src": "2105:8:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2090:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2090:3:21"
																		},
																		"nativeSrc": "2090:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2090:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2116:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nativeSrc": "2063:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "2063:26:21"
																},
																"nativeSrc": "2063:61:21",
																"nodeType": "YulFunctionCall",
																"src": "2063:61:21"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "2041:8:21",
																	"nodeType": "YulTypedName",
																	"src": "2041:8:21",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "2051:8:21",
																	"nodeType": "YulTypedName",
																	"src": "2051:8:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2133:18:21",
															"nodeType": "YulAssignment",
															"src": "2133:18:21",
															"value": {
																"name": "value2_1",
																"nativeSrc": "2143:8:21",
																"nodeType": "YulIdentifier",
																"src": "2143:8:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2133:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:21"
																}
															]
														},
														{
															"nativeSrc": "2160:18:21",
															"nodeType": "YulAssignment",
															"src": "2160:18:21",
															"value": {
																"name": "value3_1",
																"nativeSrc": "2170:8:21",
																"nodeType": "YulIdentifier",
																"src": "2170:8:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2160:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:21"
																}
															]
														},
														{
															"nativeSrc": "2187:48:21",
															"nodeType": "YulAssignment",
															"src": "2187:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2216:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2216:3:21"
																		},
																		"nativeSrc": "2216:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2216:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2197:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "2197:18:21"
																},
																"nativeSrc": "2197:38:21",
																"nodeType": "YulFunctionCall",
																"src": "2197:38:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2187:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address",
												"nativeSrc": "1451:790:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1529:9:21",
														"nodeType": "YulTypedName",
														"src": "1529:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1540:7:21",
														"nodeType": "YulTypedName",
														"src": "1540:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1552:6:21",
														"nodeType": "YulTypedName",
														"src": "1552:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1560:6:21",
														"nodeType": "YulTypedName",
														"src": "1560:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1568:6:21",
														"nodeType": "YulTypedName",
														"src": "1568:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1576:6:21",
														"nodeType": "YulTypedName",
														"src": "1576:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1584:6:21",
														"nodeType": "YulTypedName",
														"src": "1584:6:21",
														"type": ""
													}
												],
												"src": "1451:790:21"
											},
											{
												"body": {
													"nativeSrc": "2333:213:21",
													"nodeType": "YulBlock",
													"src": "2333:213:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2379:16:21",
																"nodeType": "YulBlock",
																"src": "2379:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2388:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2388:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2391:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2391:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2381:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2381:6:21"
																			},
																			"nativeSrc": "2381:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2381:12:21"
																		},
																		"nativeSrc": "2381:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2354:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2354:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2350:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:21"
																		},
																		"nativeSrc": "2350:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2346:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:21"
																},
																"nativeSrc": "2346:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2346:32:21"
															},
															"nativeSrc": "2343:52:21",
															"nodeType": "YulIf",
															"src": "2343:52:21"
														},
														{
															"nativeSrc": "2404:39:21",
															"nodeType": "YulAssignment",
															"src": "2404:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2433:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2414:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "2414:18:21"
																},
																"nativeSrc": "2414:29:21",
																"nodeType": "YulFunctionCall",
																"src": "2414:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2404:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:21"
																}
															]
														},
														{
															"nativeSrc": "2452:14:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:14:21",
															"value": {
																"kind": "number",
																"nativeSrc": "2465:1:21",
																"nodeType": "YulLiteral",
																"src": "2465:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:21",
																	"nodeType": "YulTypedName",
																	"src": "2456:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2475:41:21",
															"nodeType": "YulAssignment",
															"src": "2475:41:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2501:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2501:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2512:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2512:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2497:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2497:3:21"
																		},
																		"nativeSrc": "2497:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2497:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2484:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2484:12:21"
																},
																"nativeSrc": "2484:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2484:32:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2475:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "2475:5:21"
																}
															]
														},
														{
															"nativeSrc": "2525:15:21",
															"nodeType": "YulAssignment",
															"src": "2525:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "2535:5:21",
																"nodeType": "YulIdentifier",
																"src": "2535:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2525:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2525:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2246:300:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2291:9:21",
														"nodeType": "YulTypedName",
														"src": "2291:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2302:7:21",
														"nodeType": "YulTypedName",
														"src": "2302:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2314:6:21",
														"nodeType": "YulTypedName",
														"src": "2314:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2322:6:21",
														"nodeType": "YulTypedName",
														"src": "2322:6:21",
														"type": ""
													}
												],
												"src": "2246:300:21"
											},
											{
												"body": {
													"nativeSrc": "2690:711:21",
													"nodeType": "YulBlock",
													"src": "2690:711:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2736:16:21",
																"nodeType": "YulBlock",
																"src": "2736:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2745:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2748:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2738:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:21"
																			},
																			"nativeSrc": "2738:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:21"
																		},
																		"nativeSrc": "2738:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2711:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2711:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2720:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2720:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2707:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:21"
																		},
																		"nativeSrc": "2707:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2732:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2732:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2703:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:21"
																},
																"nativeSrc": "2703:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2703:32:21"
															},
															"nativeSrc": "2700:52:21",
															"nodeType": "YulIf",
															"src": "2700:52:21"
														},
														{
															"nativeSrc": "2761:37:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2761:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2788:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2788:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2775:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2775:12:21"
																},
																"nativeSrc": "2775:23:21",
																"nodeType": "YulFunctionCall",
																"src": "2775:23:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2765:6:21",
																	"nodeType": "YulTypedName",
																	"src": "2765:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2841:16:21",
																"nodeType": "YulBlock",
																"src": "2841:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2850:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2853:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2843:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:21"
																			},
																			"nativeSrc": "2843:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:21"
																		},
																		"nativeSrc": "2843:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2813:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:18:21",
																		"nodeType": "YulLiteral",
																		"src": "2821:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2810:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "2810:2:21"
																},
																"nativeSrc": "2810:30:21",
																"nodeType": "YulFunctionCall",
																"src": "2810:30:21"
															},
															"nativeSrc": "2807:50:21",
															"nodeType": "YulIf",
															"src": "2807:50:21"
														},
														{
															"nativeSrc": "2866:32:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2866:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2880:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:21"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2891:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2891:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2876:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:21"
																},
																"nativeSrc": "2876:22:21",
																"nodeType": "YulFunctionCall",
																"src": "2876:22:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2870:2:21",
																	"nodeType": "YulTypedName",
																	"src": "2870:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2946:16:21",
																"nodeType": "YulBlock",
																"src": "2946:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:21"
																			},
																			"nativeSrc": "2948:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:21"
																		},
																		"nativeSrc": "2948:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2925:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "2925:2:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2929:4:21",
																						"nodeType": "YulLiteral",
																						"src": "2929:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2921:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "2921:3:21"
																				},
																				"nativeSrc": "2921:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2921:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2936:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2936:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2917:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:21"
																		},
																		"nativeSrc": "2917:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2917:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2910:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:21"
																},
																"nativeSrc": "2910:35:21",
																"nodeType": "YulFunctionCall",
																"src": "2910:35:21"
															},
															"nativeSrc": "2907:55:21",
															"nodeType": "YulIf",
															"src": "2907:55:21"
														},
														{
															"nativeSrc": "2971:30:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2971:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2998:2:21",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2985:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2985:12:21"
																},
																"nativeSrc": "2985:16:21",
																"nodeType": "YulFunctionCall",
																"src": "2985:16:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2975:6:21",
																	"nodeType": "YulTypedName",
																	"src": "2975:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3044:16:21",
																"nodeType": "YulBlock",
																"src": "3044:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3053:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3053:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3056:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3056:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3046:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3046:6:21"
																			},
																			"nativeSrc": "3046:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3046:12:21"
																		},
																		"nativeSrc": "3046:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3046:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3016:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3016:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3024:18:21",
																		"nodeType": "YulLiteral",
																		"src": "3024:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3013:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "3013:2:21"
																},
																"nativeSrc": "3013:30:21",
																"nodeType": "YulFunctionCall",
																"src": "3013:30:21"
															},
															"nativeSrc": "3010:50:21",
															"nodeType": "YulIf",
															"src": "3010:50:21"
														},
														{
															"body": {
																"nativeSrc": "3120:16:21",
																"nodeType": "YulBlock",
																"src": "3120:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3129:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3129:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3132:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3132:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3122:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3122:6:21"
																			},
																			"nativeSrc": "3122:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3122:12:21"
																		},
																		"nativeSrc": "3122:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3122:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3083:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "3083:2:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3091:1:21",
																								"nodeType": "YulLiteral",
																								"src": "3091:1:21",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "3094:6:21",
																								"nodeType": "YulIdentifier",
																								"src": "3094:6:21"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3087:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "3087:3:21"
																						},
																						"nativeSrc": "3087:14:21",
																						"nodeType": "YulFunctionCall",
																						"src": "3087:14:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3079:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "3079:3:21"
																				},
																				"nativeSrc": "3079:23:21",
																				"nodeType": "YulFunctionCall",
																				"src": "3079:23:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3104:4:21",
																				"nodeType": "YulLiteral",
																				"src": "3104:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3075:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:21"
																		},
																		"nativeSrc": "3075:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3075:34:21"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3111:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "3111:7:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3072:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "3072:2:21"
																},
																"nativeSrc": "3072:47:21",
																"nodeType": "YulFunctionCall",
																"src": "3072:47:21"
															},
															"nativeSrc": "3069:67:21",
															"nodeType": "YulIf",
															"src": "3069:67:21"
														},
														{
															"nativeSrc": "3145:23:21",
															"nodeType": "YulAssignment",
															"src": "3145:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3159:2:21",
																		"nodeType": "YulIdentifier",
																		"src": "3159:2:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3163:4:21",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3155:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:21"
																},
																"nativeSrc": "3155:13:21",
																"nodeType": "YulFunctionCall",
																"src": "3155:13:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3145:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:21"
																}
															]
														},
														{
															"nativeSrc": "3177:16:21",
															"nodeType": "YulAssignment",
															"src": "3177:16:21",
															"value": {
																"name": "length",
																"nativeSrc": "3187:6:21",
																"nodeType": "YulIdentifier",
																"src": "3187:6:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3177:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3177:6:21"
																}
															]
														},
														{
															"nativeSrc": "3202:14:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3202:14:21",
															"value": {
																"kind": "number",
																"nativeSrc": "3215:1:21",
																"nodeType": "YulLiteral",
																"src": "3215:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3206:5:21",
																	"nodeType": "YulTypedName",
																	"src": "3206:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3225:43:21",
															"nodeType": "YulAssignment",
															"src": "3225:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3251:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3251:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3262:4:21",
																				"nodeType": "YulLiteral",
																				"src": "3262:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3247:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:21"
																		},
																		"nativeSrc": "3247:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:20:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3234:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3234:12:21"
																},
																"nativeSrc": "3234:34:21",
																"nodeType": "YulFunctionCall",
																"src": "3234:34:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3225:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "3225:5:21"
																}
															]
														},
														{
															"nativeSrc": "3277:15:21",
															"nodeType": "YulAssignment",
															"src": "3277:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "3287:5:21",
																"nodeType": "YulIdentifier",
																"src": "3287:5:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3277:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:21"
																}
															]
														},
														{
															"nativeSrc": "3301:16:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3301:16:21",
															"value": {
																"kind": "number",
																"nativeSrc": "3316:1:21",
																"nodeType": "YulLiteral",
																"src": "3316:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3305:7:21",
																	"nodeType": "YulTypedName",
																	"src": "3305:7:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3326:43:21",
															"nodeType": "YulAssignment",
															"src": "3326:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3354:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3365:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3365:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:21"
																		},
																		"nativeSrc": "3350:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3337:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3337:12:21"
																},
																"nativeSrc": "3337:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3337:32:21"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3326:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "3326:7:21"
																}
															]
														},
														{
															"nativeSrc": "3378:17:21",
															"nodeType": "YulAssignment",
															"src": "3378:17:21",
															"value": {
																"name": "value_1",
																"nativeSrc": "3388:7:21",
																"nodeType": "YulIdentifier",
																"src": "3388:7:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3378:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3378:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_uint256",
												"nativeSrc": "2551:850:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2632:9:21",
														"nodeType": "YulTypedName",
														"src": "2632:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2643:7:21",
														"nodeType": "YulTypedName",
														"src": "2643:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2655:6:21",
														"nodeType": "YulTypedName",
														"src": "2655:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2663:6:21",
														"nodeType": "YulTypedName",
														"src": "2663:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2671:6:21",
														"nodeType": "YulTypedName",
														"src": "2671:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2679:6:21",
														"nodeType": "YulTypedName",
														"src": "2679:6:21",
														"type": ""
													}
												],
												"src": "2551:850:21"
											},
											{
												"body": {
													"nativeSrc": "3507:76:21",
													"nodeType": "YulBlock",
													"src": "3507:76:21",
													"statements": [
														{
															"nativeSrc": "3517:26:21",
															"nodeType": "YulAssignment",
															"src": "3517:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3529:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3529:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:2:21",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3525:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:21"
																},
																"nativeSrc": "3525:18:21",
																"nodeType": "YulFunctionCall",
																"src": "3525:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3517:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3517:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3559:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3559:9:21"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3570:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3570:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3552:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:21"
																},
																"nativeSrc": "3552:25:21",
																"nodeType": "YulFunctionCall",
																"src": "3552:25:21"
															},
															"nativeSrc": "3552:25:21",
															"nodeType": "YulExpressionStatement",
															"src": "3552:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3406:177:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3476:9:21",
														"nodeType": "YulTypedName",
														"src": "3476:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3487:6:21",
														"nodeType": "YulTypedName",
														"src": "3487:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3498:4:21",
														"nodeType": "YulTypedName",
														"src": "3498:4:21",
														"type": ""
													}
												],
												"src": "3406:177:21"
											},
											{
												"body": {
													"nativeSrc": "3692:270:21",
													"nodeType": "YulBlock",
													"src": "3692:270:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "3738:16:21",
																"nodeType": "YulBlock",
																"src": "3738:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3747:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3747:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3750:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3750:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3740:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:21"
																			},
																			"nativeSrc": "3740:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3740:12:21"
																		},
																		"nativeSrc": "3740:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3713:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "3713:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3722:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3722:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3709:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:21"
																		},
																		"nativeSrc": "3709:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3709:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3734:2:21",
																		"nodeType": "YulLiteral",
																		"src": "3734:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3705:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3705:3:21"
																},
																"nativeSrc": "3705:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3705:32:21"
															},
															"nativeSrc": "3702:52:21",
															"nodeType": "YulIf",
															"src": "3702:52:21"
														},
														{
															"nativeSrc": "3763:39:21",
															"nodeType": "YulAssignment",
															"src": "3763:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3792:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3792:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3773:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "3773:18:21"
																},
																"nativeSrc": "3773:29:21",
																"nodeType": "YulFunctionCall",
																"src": "3773:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3763:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:21"
																}
															]
														},
														{
															"nativeSrc": "3811:48:21",
															"nodeType": "YulAssignment",
															"src": "3811:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3844:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3844:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3855:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3855:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3840:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:21"
																		},
																		"nativeSrc": "3840:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3840:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3821:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "3821:18:21"
																},
																"nativeSrc": "3821:38:21",
																"nodeType": "YulFunctionCall",
																"src": "3821:38:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3811:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3811:6:21"
																}
															]
														},
														{
															"nativeSrc": "3868:14:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3868:14:21",
															"value": {
																"kind": "number",
																"nativeSrc": "3881:1:21",
																"nodeType": "YulLiteral",
																"src": "3881:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3872:5:21",
																	"nodeType": "YulTypedName",
																	"src": "3872:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3891:41:21",
															"nodeType": "YulAssignment",
															"src": "3891:41:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3917:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3917:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3928:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3928:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3913:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3913:3:21"
																		},
																		"nativeSrc": "3913:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3913:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3900:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3900:12:21"
																},
																"nativeSrc": "3900:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3900:32:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3891:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "3891:5:21"
																}
															]
														},
														{
															"nativeSrc": "3941:15:21",
															"nodeType": "YulAssignment",
															"src": "3941:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "3951:5:21",
																"nodeType": "YulIdentifier",
																"src": "3951:5:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3941:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3588:374:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:21",
														"nodeType": "YulTypedName",
														"src": "3642:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3653:7:21",
														"nodeType": "YulTypedName",
														"src": "3653:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3665:6:21",
														"nodeType": "YulTypedName",
														"src": "3665:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3673:6:21",
														"nodeType": "YulTypedName",
														"src": "3673:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3681:6:21",
														"nodeType": "YulTypedName",
														"src": "3681:6:21",
														"type": ""
													}
												],
												"src": "3588:374:21"
											},
											{
												"body": {
													"nativeSrc": "4037:156:21",
													"nodeType": "YulBlock",
													"src": "4037:156:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4083:16:21",
																"nodeType": "YulBlock",
																"src": "4083:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4092:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4095:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4085:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:21"
																			},
																			"nativeSrc": "4085:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4085:12:21"
																		},
																		"nativeSrc": "4085:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4058:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4058:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4067:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4054:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:21"
																		},
																		"nativeSrc": "4054:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4054:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4079:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4050:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:21"
																},
																"nativeSrc": "4050:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4050:32:21"
															},
															"nativeSrc": "4047:52:21",
															"nodeType": "YulIf",
															"src": "4047:52:21"
														},
														{
															"nativeSrc": "4108:14:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4108:14:21",
															"value": {
																"kind": "number",
																"nativeSrc": "4121:1:21",
																"nodeType": "YulLiteral",
																"src": "4121:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4112:5:21",
																	"nodeType": "YulTypedName",
																	"src": "4112:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4131:32:21",
															"nodeType": "YulAssignment",
															"src": "4131:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4153:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4153:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4140:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "4140:12:21"
																},
																"nativeSrc": "4140:23:21",
																"nodeType": "YulFunctionCall",
																"src": "4140:23:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4131:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "4131:5:21"
																}
															]
														},
														{
															"nativeSrc": "4172:15:21",
															"nodeType": "YulAssignment",
															"src": "4172:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "4182:5:21",
																"nodeType": "YulIdentifier",
																"src": "4182:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4172:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3967:226:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4003:9:21",
														"nodeType": "YulTypedName",
														"src": "4003:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4014:7:21",
														"nodeType": "YulTypedName",
														"src": "4014:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4026:6:21",
														"nodeType": "YulTypedName",
														"src": "4026:6:21",
														"type": ""
													}
												],
												"src": "3967:226:21"
											},
											{
												"body": {
													"nativeSrc": "4299:76:21",
													"nodeType": "YulBlock",
													"src": "4299:76:21",
													"statements": [
														{
															"nativeSrc": "4309:26:21",
															"nodeType": "YulAssignment",
															"src": "4309:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4321:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4321:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4332:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4332:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4317:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4317:3:21"
																},
																"nativeSrc": "4317:18:21",
																"nodeType": "YulFunctionCall",
																"src": "4317:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4309:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4309:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4351:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:21"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4362:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4362:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4344:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:21"
																},
																"nativeSrc": "4344:25:21",
																"nodeType": "YulFunctionCall",
																"src": "4344:25:21"
															},
															"nativeSrc": "4344:25:21",
															"nodeType": "YulExpressionStatement",
															"src": "4344:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4198:177:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4268:9:21",
														"nodeType": "YulTypedName",
														"src": "4268:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4279:6:21",
														"nodeType": "YulTypedName",
														"src": "4279:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4290:4:21",
														"nodeType": "YulTypedName",
														"src": "4290:4:21",
														"type": ""
													}
												],
												"src": "4198:177:21"
											},
											{
												"body": {
													"nativeSrc": "4467:213:21",
													"nodeType": "YulBlock",
													"src": "4467:213:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4513:16:21",
																"nodeType": "YulBlock",
																"src": "4513:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4522:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4522:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4525:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4515:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:21"
																			},
																			"nativeSrc": "4515:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4515:12:21"
																		},
																		"nativeSrc": "4515:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4515:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4488:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4488:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4497:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4484:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:21"
																		},
																		"nativeSrc": "4484:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4484:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4509:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4480:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:21"
																},
																"nativeSrc": "4480:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4480:32:21"
															},
															"nativeSrc": "4477:52:21",
															"nodeType": "YulIf",
															"src": "4477:52:21"
														},
														{
															"nativeSrc": "4538:14:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4538:14:21",
															"value": {
																"kind": "number",
																"nativeSrc": "4551:1:21",
																"nodeType": "YulLiteral",
																"src": "4551:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4542:5:21",
																	"nodeType": "YulTypedName",
																	"src": "4542:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4561:32:21",
															"nodeType": "YulAssignment",
															"src": "4561:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4583:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4583:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4570:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "4570:12:21"
																},
																"nativeSrc": "4570:23:21",
																"nodeType": "YulFunctionCall",
																"src": "4570:23:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4561:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "4561:5:21"
																}
															]
														},
														{
															"nativeSrc": "4602:15:21",
															"nodeType": "YulAssignment",
															"src": "4602:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "4612:5:21",
																"nodeType": "YulIdentifier",
																"src": "4612:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4602:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:21"
																}
															]
														},
														{
															"nativeSrc": "4626:48:21",
															"nodeType": "YulAssignment",
															"src": "4626:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4659:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4659:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4670:2:21",
																				"nodeType": "YulLiteral",
																				"src": "4670:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4655:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:21"
																		},
																		"nativeSrc": "4655:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4636:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "4636:18:21"
																},
																"nativeSrc": "4636:38:21",
																"nodeType": "YulFunctionCall",
																"src": "4636:38:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4626:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4380:300:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4425:9:21",
														"nodeType": "YulTypedName",
														"src": "4425:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4436:7:21",
														"nodeType": "YulTypedName",
														"src": "4436:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4448:6:21",
														"nodeType": "YulTypedName",
														"src": "4448:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4456:6:21",
														"nodeType": "YulTypedName",
														"src": "4456:6:21",
														"type": ""
													}
												],
												"src": "4380:300:21"
											},
											{
												"body": {
													"nativeSrc": "4782:87:21",
													"nodeType": "YulBlock",
													"src": "4782:87:21",
													"statements": [
														{
															"nativeSrc": "4792:26:21",
															"nodeType": "YulAssignment",
															"src": "4792:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4804:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4804:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4815:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4815:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4800:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4800:3:21"
																},
																"nativeSrc": "4800:18:21",
																"nodeType": "YulFunctionCall",
																"src": "4800:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4792:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4792:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4834:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4834:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4849:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4849:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4857:4:21",
																				"nodeType": "YulLiteral",
																				"src": "4857:4:21",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4845:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:21"
																		},
																		"nativeSrc": "4845:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4845:17:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4827:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:21"
																},
																"nativeSrc": "4827:36:21",
																"nodeType": "YulFunctionCall",
																"src": "4827:36:21"
															},
															"nativeSrc": "4827:36:21",
															"nodeType": "YulExpressionStatement",
															"src": "4827:36:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4685:184:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4751:9:21",
														"nodeType": "YulTypedName",
														"src": "4751:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4762:6:21",
														"nodeType": "YulTypedName",
														"src": "4762:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4773:4:21",
														"nodeType": "YulTypedName",
														"src": "4773:4:21",
														"type": ""
													}
												],
												"src": "4685:184:21"
											},
											{
												"body": {
													"nativeSrc": "4944:116:21",
													"nodeType": "YulBlock",
													"src": "4944:116:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4990:16:21",
																"nodeType": "YulBlock",
																"src": "4990:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4999:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4999:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5002:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5002:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4992:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4992:6:21"
																			},
																			"nativeSrc": "4992:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4992:12:21"
																		},
																		"nativeSrc": "4992:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4992:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4965:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4965:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4974:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4974:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4961:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4961:3:21"
																		},
																		"nativeSrc": "4961:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4961:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4986:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4986:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4957:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:21"
																},
																"nativeSrc": "4957:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4957:32:21"
															},
															"nativeSrc": "4954:52:21",
															"nodeType": "YulIf",
															"src": "4954:52:21"
														},
														{
															"nativeSrc": "5015:39:21",
															"nodeType": "YulAssignment",
															"src": "5015:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5044:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5025:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "5025:18:21"
																},
																"nativeSrc": "5025:29:21",
																"nodeType": "YulFunctionCall",
																"src": "5025:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5015:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4874:186:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4910:9:21",
														"nodeType": "YulTypedName",
														"src": "4910:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4921:7:21",
														"nodeType": "YulTypedName",
														"src": "4921:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4933:6:21",
														"nodeType": "YulTypedName",
														"src": "4933:6:21",
														"type": ""
													}
												],
												"src": "4874:186:21"
											},
											{
												"body": {
													"nativeSrc": "5097:95:21",
													"nodeType": "YulBlock",
													"src": "5097:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5114:1:21",
																		"nodeType": "YulLiteral",
																		"src": "5114:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5121:3:21",
																				"nodeType": "YulLiteral",
																				"src": "5121:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5126:10:21",
																				"nodeType": "YulLiteral",
																				"src": "5126:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5117:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5117:3:21"
																		},
																		"nativeSrc": "5117:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5117:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5107:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:21"
																},
																"nativeSrc": "5107:31:21",
																"nodeType": "YulFunctionCall",
																"src": "5107:31:21"
															},
															"nativeSrc": "5107:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "5107:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5154:1:21",
																		"nodeType": "YulLiteral",
																		"src": "5154:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5157:4:21",
																		"nodeType": "YulLiteral",
																		"src": "5157:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5147:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:21"
																},
																"nativeSrc": "5147:15:21",
																"nodeType": "YulFunctionCall",
																"src": "5147:15:21"
															},
															"nativeSrc": "5147:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "5147:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5178:1:21",
																		"nodeType": "YulLiteral",
																		"src": "5178:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5181:4:21",
																		"nodeType": "YulLiteral",
																		"src": "5181:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5171:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:21"
																},
																"nativeSrc": "5171:15:21",
																"nodeType": "YulFunctionCall",
																"src": "5171:15:21"
															},
															"nativeSrc": "5171:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "5171:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5065:127:21",
												"nodeType": "YulFunctionDefinition",
												"src": "5065:127:21"
											},
											{
												"body": {
													"nativeSrc": "5293:922:21",
													"nodeType": "YulBlock",
													"src": "5293:922:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5339:16:21",
																"nodeType": "YulBlock",
																"src": "5339:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5348:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5348:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5351:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5351:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5341:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5341:6:21"
																			},
																			"nativeSrc": "5341:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5341:12:21"
																		},
																		"nativeSrc": "5341:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5341:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5314:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5314:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5323:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5323:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5310:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:21"
																		},
																		"nativeSrc": "5310:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5306:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5306:3:21"
																},
																"nativeSrc": "5306:32:21",
																"nodeType": "YulFunctionCall",
																"src": "5306:32:21"
															},
															"nativeSrc": "5303:52:21",
															"nodeType": "YulIf",
															"src": "5303:52:21"
														},
														{
															"nativeSrc": "5364:39:21",
															"nodeType": "YulAssignment",
															"src": "5364:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5393:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5393:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5374:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "5374:18:21"
																},
																"nativeSrc": "5374:29:21",
																"nodeType": "YulFunctionCall",
																"src": "5374:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5364:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5364:6:21"
																}
															]
														},
														{
															"nativeSrc": "5412:46:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5412:46:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5443:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5443:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5454:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5454:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5439:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:21"
																		},
																		"nativeSrc": "5439:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5426:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "5426:12:21"
																},
																"nativeSrc": "5426:32:21",
																"nodeType": "YulFunctionCall",
																"src": "5426:32:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5416:6:21",
																	"nodeType": "YulTypedName",
																	"src": "5416:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5501:16:21",
																"nodeType": "YulBlock",
																"src": "5501:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5510:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5510:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5513:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5513:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5503:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5503:6:21"
																			},
																			"nativeSrc": "5503:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5503:12:21"
																		},
																		"nativeSrc": "5503:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5503:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5473:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5481:18:21",
																		"nodeType": "YulLiteral",
																		"src": "5481:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5470:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "5470:2:21"
																},
																"nativeSrc": "5470:30:21",
																"nodeType": "YulFunctionCall",
																"src": "5470:30:21"
															},
															"nativeSrc": "5467:50:21",
															"nodeType": "YulIf",
															"src": "5467:50:21"
														},
														{
															"nativeSrc": "5526:32:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5526:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5540:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5540:9:21"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5551:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5536:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5536:3:21"
																},
																"nativeSrc": "5536:22:21",
																"nodeType": "YulFunctionCall",
																"src": "5536:22:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5530:2:21",
																	"nodeType": "YulTypedName",
																	"src": "5530:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5606:16:21",
																"nodeType": "YulBlock",
																"src": "5606:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5615:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5615:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5618:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5618:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5608:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5608:6:21"
																			},
																			"nativeSrc": "5608:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5608:12:21"
																		},
																		"nativeSrc": "5608:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5608:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5585:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "5585:2:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5589:4:21",
																						"nodeType": "YulLiteral",
																						"src": "5589:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5581:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5581:3:21"
																				},
																				"nativeSrc": "5581:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5581:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5596:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5596:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5577:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5577:3:21"
																		},
																		"nativeSrc": "5577:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5577:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5570:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:21"
																},
																"nativeSrc": "5570:35:21",
																"nodeType": "YulFunctionCall",
																"src": "5570:35:21"
															},
															"nativeSrc": "5567:55:21",
															"nodeType": "YulIf",
															"src": "5567:55:21"
														},
														{
															"nativeSrc": "5631:30:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5658:2:21",
																		"nodeType": "YulIdentifier",
																		"src": "5658:2:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5645:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "5645:12:21"
																},
																"nativeSrc": "5645:16:21",
																"nodeType": "YulFunctionCall",
																"src": "5645:16:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5635:6:21",
																	"nodeType": "YulTypedName",
																	"src": "5635:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5704:22:21",
																"nodeType": "YulBlock",
																"src": "5704:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5706:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "5706:16:21"
																			},
																			"nativeSrc": "5706:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5706:18:21"
																		},
																		"nativeSrc": "5706:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5706:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5676:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5676:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5684:18:21",
																		"nodeType": "YulLiteral",
																		"src": "5684:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5673:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "5673:2:21"
																},
																"nativeSrc": "5673:30:21",
																"nodeType": "YulFunctionCall",
																"src": "5673:30:21"
															},
															"nativeSrc": "5670:56:21",
															"nodeType": "YulIf",
															"src": "5670:56:21"
														},
														{
															"nativeSrc": "5735:23:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5735:23:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5755:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5755:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5749:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "5749:5:21"
																},
																"nativeSrc": "5749:9:21",
																"nodeType": "YulFunctionCall",
																"src": "5749:9:21"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5739:6:21",
																	"nodeType": "YulTypedName",
																	"src": "5739:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5767:85:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5767:85:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5789:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5789:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "5813:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "5813:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5821:4:21",
																										"nodeType": "YulLiteral",
																										"src": "5821:4:21",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5809:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "5809:3:21"
																								},
																								"nativeSrc": "5809:17:21",
																								"nodeType": "YulFunctionCall",
																								"src": "5809:17:21"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5832:2:21",
																										"nodeType": "YulLiteral",
																										"src": "5832:2:21",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "5828:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "5828:3:21"
																								},
																								"nativeSrc": "5828:7:21",
																								"nodeType": "YulFunctionCall",
																								"src": "5828:7:21"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "5805:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "5805:3:21"
																						},
																						"nativeSrc": "5805:31:21",
																						"nodeType": "YulFunctionCall",
																						"src": "5805:31:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5838:2:21",
																						"nodeType": "YulLiteral",
																						"src": "5838:2:21",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5801:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5801:3:21"
																				},
																				"nativeSrc": "5801:40:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5801:40:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5847:2:21",
																						"nodeType": "YulLiteral",
																						"src": "5847:2:21",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5843:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5843:3:21"
																				},
																				"nativeSrc": "5843:7:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5843:7:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5797:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5797:3:21"
																		},
																		"nativeSrc": "5797:54:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5797:54:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5785:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5785:3:21"
																},
																"nativeSrc": "5785:67:21",
																"nodeType": "YulFunctionCall",
																"src": "5785:67:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5771:10:21",
																	"nodeType": "YulTypedName",
																	"src": "5771:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5927:22:21",
																"nodeType": "YulBlock",
																"src": "5927:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5929:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "5929:16:21"
																			},
																			"nativeSrc": "5929:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5929:18:21"
																		},
																		"nativeSrc": "5929:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5929:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5870:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "5870:10:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5882:18:21",
																				"nodeType": "YulLiteral",
																				"src": "5882:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5867:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "5867:2:21"
																		},
																		"nativeSrc": "5867:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5867:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5906:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "5906:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5918:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5918:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5903:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "5903:2:21"
																		},
																		"nativeSrc": "5903:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5864:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "5864:2:21"
																},
																"nativeSrc": "5864:62:21",
																"nodeType": "YulFunctionCall",
																"src": "5864:62:21"
															},
															"nativeSrc": "5861:88:21",
															"nodeType": "YulIf",
															"src": "5861:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5965:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5969:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "5969:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5958:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:21"
																},
																"nativeSrc": "5958:22:21",
																"nodeType": "YulFunctionCall",
																"src": "5958:22:21"
															},
															"nativeSrc": "5958:22:21",
															"nodeType": "YulExpressionStatement",
															"src": "5958:22:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5996:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5996:6:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6004:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5989:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:21"
																},
																"nativeSrc": "5989:22:21",
																"nodeType": "YulFunctionCall",
																"src": "5989:22:21"
															},
															"nativeSrc": "5989:22:21",
															"nodeType": "YulExpressionStatement",
															"src": "5989:22:21"
														},
														{
															"body": {
																"nativeSrc": "6061:16:21",
																"nodeType": "YulBlock",
																"src": "6061:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6070:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6070:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6073:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6073:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6063:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6063:6:21"
																			},
																			"nativeSrc": "6063:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:12:21"
																		},
																		"nativeSrc": "6063:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6034:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "6034:2:21"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6038:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6038:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6030:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6030:3:21"
																				},
																				"nativeSrc": "6030:15:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6030:15:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6047:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6026:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6026:3:21"
																		},
																		"nativeSrc": "6026:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6026:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6052:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "6052:7:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6023:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:21"
																},
																"nativeSrc": "6023:37:21",
																"nodeType": "YulFunctionCall",
																"src": "6023:37:21"
															},
															"nativeSrc": "6020:57:21",
															"nodeType": "YulIf",
															"src": "6020:57:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6103:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6103:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6111:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6111:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6099:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:21"
																		},
																		"nativeSrc": "6099:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6099:15:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6120:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "6120:2:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6124:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:21"
																		},
																		"nativeSrc": "6116:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:11:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6129:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6129:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6086:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "6086:12:21"
																},
																"nativeSrc": "6086:50:21",
																"nodeType": "YulFunctionCall",
																"src": "6086:50:21"
															},
															"nativeSrc": "6086:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "6086:50:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "6160:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6160:6:21"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6168:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6168:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6156:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6156:3:21"
																				},
																				"nativeSrc": "6156:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6156:19:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6177:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6177:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6152:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6152:3:21"
																		},
																		"nativeSrc": "6152:28:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6152:28:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6182:1:21",
																		"nodeType": "YulLiteral",
																		"src": "6182:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6145:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:21"
																},
																"nativeSrc": "6145:39:21",
																"nodeType": "YulFunctionCall",
																"src": "6145:39:21"
															},
															"nativeSrc": "6145:39:21",
															"nodeType": "YulExpressionStatement",
															"src": "6145:39:21"
														},
														{
															"nativeSrc": "6193:16:21",
															"nodeType": "YulAssignment",
															"src": "6193:16:21",
															"value": {
																"name": "memPtr",
																"nativeSrc": "6203:6:21",
																"nodeType": "YulIdentifier",
																"src": "6203:6:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6193:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "5197:1018:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5251:9:21",
														"nodeType": "YulTypedName",
														"src": "5251:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5262:7:21",
														"nodeType": "YulTypedName",
														"src": "5262:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5274:6:21",
														"nodeType": "YulTypedName",
														"src": "5274:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5282:6:21",
														"nodeType": "YulTypedName",
														"src": "5282:6:21",
														"type": ""
													}
												],
												"src": "5197:1018:21"
											},
											{
												"body": {
													"nativeSrc": "6307:173:21",
													"nodeType": "YulBlock",
													"src": "6307:173:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6353:16:21",
																"nodeType": "YulBlock",
																"src": "6353:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6362:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6362:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6365:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6365:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6355:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6355:6:21"
																			},
																			"nativeSrc": "6355:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6355:12:21"
																		},
																		"nativeSrc": "6355:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6355:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6328:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6328:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6337:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6324:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:21"
																		},
																		"nativeSrc": "6324:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6349:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6349:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6320:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6320:3:21"
																},
																"nativeSrc": "6320:32:21",
																"nodeType": "YulFunctionCall",
																"src": "6320:32:21"
															},
															"nativeSrc": "6317:52:21",
															"nodeType": "YulIf",
															"src": "6317:52:21"
														},
														{
															"nativeSrc": "6378:39:21",
															"nodeType": "YulAssignment",
															"src": "6378:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6407:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6407:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6388:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "6388:18:21"
																},
																"nativeSrc": "6388:29:21",
																"nodeType": "YulFunctionCall",
																"src": "6388:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6378:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6378:6:21"
																}
															]
														},
														{
															"nativeSrc": "6426:48:21",
															"nodeType": "YulAssignment",
															"src": "6426:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6459:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6470:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6470:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6455:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:21"
																		},
																		"nativeSrc": "6455:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6455:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6436:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "6436:18:21"
																},
																"nativeSrc": "6436:38:21",
																"nodeType": "YulFunctionCall",
																"src": "6436:38:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6426:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6220:260:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6265:9:21",
														"nodeType": "YulTypedName",
														"src": "6265:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6276:7:21",
														"nodeType": "YulTypedName",
														"src": "6276:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6288:6:21",
														"nodeType": "YulTypedName",
														"src": "6288:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6296:6:21",
														"nodeType": "YulTypedName",
														"src": "6296:6:21",
														"type": ""
													}
												],
												"src": "6220:260:21"
											},
											{
												"body": {
													"nativeSrc": "6540:325:21",
													"nodeType": "YulBlock",
													"src": "6540:325:21",
													"statements": [
														{
															"nativeSrc": "6550:22:21",
															"nodeType": "YulAssignment",
															"src": "6550:22:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6564:1:21",
																		"nodeType": "YulLiteral",
																		"src": "6564:1:21",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6567:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "6567:4:21"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6560:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:21"
																},
																"nativeSrc": "6560:12:21",
																"nodeType": "YulFunctionCall",
																"src": "6560:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6550:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:21"
																}
															]
														},
														{
															"nativeSrc": "6581:38:21",
															"nodeType": "YulVariableDeclaration",
															"src": "6581:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6611:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "6611:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6617:1:21",
																		"nodeType": "YulLiteral",
																		"src": "6617:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6607:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6607:3:21"
																},
																"nativeSrc": "6607:12:21",
																"nodeType": "YulFunctionCall",
																"src": "6607:12:21"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6585:18:21",
																	"nodeType": "YulTypedName",
																	"src": "6585:18:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6658:31:21",
																"nodeType": "YulBlock",
																"src": "6658:31:21",
																"statements": [
																	{
																		"nativeSrc": "6660:27:21",
																		"nodeType": "YulAssignment",
																		"src": "6660:27:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6674:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "6674:6:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6682:4:21",
																					"nodeType": "YulLiteral",
																					"src": "6682:4:21",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6670:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "6670:3:21"
																			},
																			"nativeSrc": "6670:17:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6670:17:21"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6660:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6660:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6638:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "6638:18:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6631:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:21"
																},
																"nativeSrc": "6631:26:21",
																"nodeType": "YulFunctionCall",
																"src": "6631:26:21"
															},
															"nativeSrc": "6628:61:21",
															"nodeType": "YulIf",
															"src": "6628:61:21"
														},
														{
															"body": {
																"nativeSrc": "6748:111:21",
																"nodeType": "YulBlock",
																"src": "6748:111:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6769:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6769:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6776:3:21",
																							"nodeType": "YulLiteral",
																							"src": "6776:3:21",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6781:10:21",
																							"nodeType": "YulLiteral",
																							"src": "6781:10:21",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6772:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "6772:3:21"
																					},
																					"nativeSrc": "6772:20:21",
																					"nodeType": "YulFunctionCall",
																					"src": "6772:20:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6762:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6762:6:21"
																			},
																			"nativeSrc": "6762:31:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6762:31:21"
																		},
																		"nativeSrc": "6762:31:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6762:31:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6813:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6813:1:21",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6816:4:21",
																					"nodeType": "YulLiteral",
																					"src": "6816:4:21",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6806:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:21"
																			},
																			"nativeSrc": "6806:15:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6806:15:21"
																		},
																		"nativeSrc": "6806:15:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6806:15:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6841:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6841:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6844:4:21",
																					"nodeType": "YulLiteral",
																					"src": "6844:4:21",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6834:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6834:6:21"
																			},
																			"nativeSrc": "6834:15:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6834:15:21"
																		},
																		"nativeSrc": "6834:15:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6834:15:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6704:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "6704:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6727:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6727:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6735:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6724:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "6724:2:21"
																		},
																		"nativeSrc": "6724:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:14:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6701:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "6701:2:21"
																},
																"nativeSrc": "6701:38:21",
																"nodeType": "YulFunctionCall",
																"src": "6701:38:21"
															},
															"nativeSrc": "6698:161:21",
															"nodeType": "YulIf",
															"src": "6698:161:21"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6485:380:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6520:4:21",
														"nodeType": "YulTypedName",
														"src": "6520:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6529:6:21",
														"nodeType": "YulTypedName",
														"src": "6529:6:21",
														"type": ""
													}
												],
												"src": "6485:380:21"
											},
											{
												"body": {
													"nativeSrc": "7044:171:21",
													"nodeType": "YulBlock",
													"src": "7044:171:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7061:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7061:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7072:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7072:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7054:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7054:6:21"
																},
																"nativeSrc": "7054:21:21",
																"nodeType": "YulFunctionCall",
																"src": "7054:21:21"
															},
															"nativeSrc": "7054:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "7054:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:21"
																		},
																		"nativeSrc": "7091:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7111:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:21",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7084:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:21"
																},
																"nativeSrc": "7084:30:21",
																"nodeType": "YulFunctionCall",
																"src": "7084:30:21"
															},
															"nativeSrc": "7084:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "7084:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7134:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7134:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7145:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7145:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7130:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7130:3:21"
																		},
																		"nativeSrc": "7130:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7130:18:21"
																	},
																	{
																		"hexValue": "496e76616c69642061646d696e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7150:23:21",
																		"nodeType": "YulLiteral",
																		"src": "7150:23:21",
																		"type": "",
																		"value": "Invalid admin address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7123:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7123:6:21"
																},
																"nativeSrc": "7123:51:21",
																"nodeType": "YulFunctionCall",
																"src": "7123:51:21"
															},
															"nativeSrc": "7123:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "7123:51:21"
														},
														{
															"nativeSrc": "7183:26:21",
															"nodeType": "YulAssignment",
															"src": "7183:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7195:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7195:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7206:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7206:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7191:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7191:3:21"
																},
																"nativeSrc": "7191:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7191:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7183:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7183:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6870:345:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7021:9:21",
														"nodeType": "YulTypedName",
														"src": "7021:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7035:4:21",
														"nodeType": "YulTypedName",
														"src": "7035:4:21",
														"type": ""
													}
												],
												"src": "6870:345:21"
											},
											{
												"body": {
													"nativeSrc": "7287:200:21",
													"nodeType": "YulBlock",
													"src": "7287:200:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7304:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7304:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7309:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7309:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7297:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:21"
																},
																"nativeSrc": "7297:19:21",
																"nodeType": "YulFunctionCall",
																"src": "7297:19:21"
															},
															"nativeSrc": "7297:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "7297:19:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7342:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "7342:3:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7347:4:21",
																				"nodeType": "YulLiteral",
																				"src": "7347:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7338:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7338:3:21"
																		},
																		"nativeSrc": "7338:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7338:14:21"
																	},
																	{
																		"name": "start",
																		"nativeSrc": "7354:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7354:5:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7361:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7361:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7325:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "7325:12:21"
																},
																"nativeSrc": "7325:43:21",
																"nodeType": "YulFunctionCall",
																"src": "7325:43:21"
															},
															"nativeSrc": "7325:43:21",
															"nodeType": "YulExpressionStatement",
															"src": "7325:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7392:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "7392:3:21"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7397:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "7397:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7388:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "7388:3:21"
																				},
																				"nativeSrc": "7388:16:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7388:16:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7406:4:21",
																				"nodeType": "YulLiteral",
																				"src": "7406:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7384:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:21"
																		},
																		"nativeSrc": "7384:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7384:27:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7413:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7413:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7377:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:21"
																},
																"nativeSrc": "7377:38:21",
																"nodeType": "YulFunctionCall",
																"src": "7377:38:21"
															},
															"nativeSrc": "7377:38:21",
															"nodeType": "YulExpressionStatement",
															"src": "7377:38:21"
														},
														{
															"nativeSrc": "7424:57:21",
															"nodeType": "YulAssignment",
															"src": "7424:57:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7439:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "7439:3:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7452:6:21",
																								"nodeType": "YulIdentifier",
																								"src": "7452:6:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7460:2:21",
																								"nodeType": "YulLiteral",
																								"src": "7460:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7448:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "7448:3:21"
																						},
																						"nativeSrc": "7448:15:21",
																						"nodeType": "YulFunctionCall",
																						"src": "7448:15:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7469:2:21",
																								"nodeType": "YulLiteral",
																								"src": "7469:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7465:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "7465:3:21"
																						},
																						"nativeSrc": "7465:7:21",
																						"nodeType": "YulFunctionCall",
																						"src": "7465:7:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7444:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "7444:3:21"
																				},
																				"nativeSrc": "7444:29:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7444:29:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7435:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7435:3:21"
																		},
																		"nativeSrc": "7435:39:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7435:39:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7476:4:21",
																		"nodeType": "YulLiteral",
																		"src": "7476:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7431:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7431:3:21"
																},
																"nativeSrc": "7431:50:21",
																"nodeType": "YulFunctionCall",
																"src": "7431:50:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7424:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7424:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_calldata",
												"nativeSrc": "7220:267:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7256:5:21",
														"nodeType": "YulTypedName",
														"src": "7256:5:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7263:6:21",
														"nodeType": "YulTypedName",
														"src": "7263:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7271:3:21",
														"nodeType": "YulTypedName",
														"src": "7271:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7279:3:21",
														"nodeType": "YulTypedName",
														"src": "7279:3:21",
														"type": ""
													}
												],
												"src": "7220:267:21"
											},
											{
												"body": {
													"nativeSrc": "7681:248:21",
													"nodeType": "YulBlock",
													"src": "7681:248:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7698:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7698:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7709:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7709:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7691:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:21"
																},
																"nativeSrc": "7691:21:21",
																"nodeType": "YulFunctionCall",
																"src": "7691:21:21"
															},
															"nativeSrc": "7691:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "7691:21:21"
														},
														{
															"nativeSrc": "7721:76:21",
															"nodeType": "YulVariableDeclaration",
															"src": "7721:76:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7762:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7762:6:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7770:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7770:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7782:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7793:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7778:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:21"
																		},
																		"nativeSrc": "7778:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nativeSrc": "7735:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "7735:26:21"
																},
																"nativeSrc": "7735:62:21",
																"nodeType": "YulFunctionCall",
																"src": "7735:62:21"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7725:6:21",
																	"nodeType": "YulTypedName",
																	"src": "7725:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7817:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7828:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7828:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7813:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:21"
																		},
																		"nativeSrc": "7813:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "7837:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "7837:6:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7845:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7833:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7833:3:21"
																		},
																		"nativeSrc": "7833:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7833:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7806:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7806:6:21"
																},
																"nativeSrc": "7806:50:21",
																"nodeType": "YulFunctionCall",
																"src": "7806:50:21"
															},
															"nativeSrc": "7806:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "7806:50:21"
														},
														{
															"nativeSrc": "7865:58:21",
															"nodeType": "YulAssignment",
															"src": "7865:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7900:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7900:6:21"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7908:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7908:6:21"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "7916:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7916:6:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nativeSrc": "7873:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "7873:26:21"
																},
																"nativeSrc": "7873:50:21",
																"nodeType": "YulFunctionCall",
																"src": "7873:50:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7865:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7865:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7492:437:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7626:9:21",
														"nodeType": "YulTypedName",
														"src": "7626:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7637:6:21",
														"nodeType": "YulTypedName",
														"src": "7637:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7645:6:21",
														"nodeType": "YulTypedName",
														"src": "7645:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7653:6:21",
														"nodeType": "YulTypedName",
														"src": "7653:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7661:6:21",
														"nodeType": "YulTypedName",
														"src": "7661:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7672:4:21",
														"nodeType": "YulTypedName",
														"src": "7672:4:21",
														"type": ""
													}
												],
												"src": "7492:437:21"
											},
											{
												"body": {
													"nativeSrc": "8042:101:21",
													"nodeType": "YulBlock",
													"src": "8042:101:21",
													"statements": [
														{
															"nativeSrc": "8052:26:21",
															"nodeType": "YulAssignment",
															"src": "8052:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8064:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8064:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8075:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8075:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8060:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8060:3:21"
																},
																"nativeSrc": "8060:18:21",
																"nodeType": "YulFunctionCall",
																"src": "8060:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8052:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8052:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8094:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8094:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8109:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "8109:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8117:18:21",
																				"nodeType": "YulLiteral",
																				"src": "8117:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8105:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8105:3:21"
																		},
																		"nativeSrc": "8105:31:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:31:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8087:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8087:6:21"
																},
																"nativeSrc": "8087:50:21",
																"nodeType": "YulFunctionCall",
																"src": "8087:50:21"
															},
															"nativeSrc": "8087:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "8087:50:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "7934:209:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8011:9:21",
														"nodeType": "YulTypedName",
														"src": "8011:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8022:6:21",
														"nodeType": "YulTypedName",
														"src": "8022:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8033:4:21",
														"nodeType": "YulTypedName",
														"src": "8033:4:21",
														"type": ""
													}
												],
												"src": "7934:209:21"
											},
											{
												"body": {
													"nativeSrc": "8322:170:21",
													"nodeType": "YulBlock",
													"src": "8322:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8339:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8339:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8350:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8350:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8332:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:21"
																},
																"nativeSrc": "8332:21:21",
																"nodeType": "YulFunctionCall",
																"src": "8332:21:21"
															},
															"nativeSrc": "8332:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "8332:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8373:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8384:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8369:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:21"
																		},
																		"nativeSrc": "8369:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8369:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:21"
																},
																"nativeSrc": "8362:30:21",
																"nodeType": "YulFunctionCall",
																"src": "8362:30:21"
															},
															"nativeSrc": "8362:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "8362:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:21"
																		},
																		"nativeSrc": "8408:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:21"
																	},
																	{
																		"hexValue": "456d707479206163636f756e7473206172726179",
																		"kind": "string",
																		"nativeSrc": "8428:22:21",
																		"nodeType": "YulLiteral",
																		"src": "8428:22:21",
																		"type": "",
																		"value": "Empty accounts array"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:21"
																},
																"nativeSrc": "8401:50:21",
																"nodeType": "YulFunctionCall",
																"src": "8401:50:21"
															},
															"nativeSrc": "8401:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "8401:50:21"
														},
														{
															"nativeSrc": "8460:26:21",
															"nodeType": "YulAssignment",
															"src": "8460:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8472:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8472:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8483:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8483:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8468:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8468:3:21"
																},
																"nativeSrc": "8468:18:21",
																"nodeType": "YulFunctionCall",
																"src": "8468:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8460:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8460:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8148:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8299:9:21",
														"nodeType": "YulTypedName",
														"src": "8299:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8313:4:21",
														"nodeType": "YulTypedName",
														"src": "8313:4:21",
														"type": ""
													}
												],
												"src": "8148:344:21"
											},
											{
												"body": {
													"nativeSrc": "8671:163:21",
													"nodeType": "YulBlock",
													"src": "8671:163:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8688:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8688:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8699:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8699:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8681:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8681:6:21"
																},
																"nativeSrc": "8681:21:21",
																"nodeType": "YulFunctionCall",
																"src": "8681:21:21"
															},
															"nativeSrc": "8681:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "8681:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8722:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8722:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8733:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8733:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8718:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8718:3:21"
																		},
																		"nativeSrc": "8718:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8718:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8738:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:21",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8711:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:21"
																},
																"nativeSrc": "8711:30:21",
																"nodeType": "YulFunctionCall",
																"src": "8711:30:21"
															},
															"nativeSrc": "8711:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "8711:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8761:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8772:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8772:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8757:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:21"
																		},
																		"nativeSrc": "8757:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8757:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206c696d6974",
																		"kind": "string",
																		"nativeSrc": "8777:15:21",
																		"nodeType": "YulLiteral",
																		"src": "8777:15:21",
																		"type": "",
																		"value": "Invalid limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8750:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:21"
																},
																"nativeSrc": "8750:43:21",
																"nodeType": "YulFunctionCall",
																"src": "8750:43:21"
															},
															"nativeSrc": "8750:43:21",
															"nodeType": "YulExpressionStatement",
															"src": "8750:43:21"
														},
														{
															"nativeSrc": "8802:26:21",
															"nodeType": "YulAssignment",
															"src": "8802:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8814:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8814:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8825:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8825:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8810:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:21"
																},
																"nativeSrc": "8810:18:21",
																"nodeType": "YulFunctionCall",
																"src": "8810:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8802:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8802:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8497:337:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8648:9:21",
														"nodeType": "YulTypedName",
														"src": "8648:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8662:4:21",
														"nodeType": "YulTypedName",
														"src": "8662:4:21",
														"type": ""
													}
												],
												"src": "8497:337:21"
											},
											{
												"body": {
													"nativeSrc": "8871:95:21",
													"nodeType": "YulBlock",
													"src": "8871:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8888:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8888:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8895:3:21",
																				"nodeType": "YulLiteral",
																				"src": "8895:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8900:10:21",
																				"nodeType": "YulLiteral",
																				"src": "8900:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8891:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8891:3:21"
																		},
																		"nativeSrc": "8891:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8891:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8881:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:21"
																},
																"nativeSrc": "8881:31:21",
																"nodeType": "YulFunctionCall",
																"src": "8881:31:21"
															},
															"nativeSrc": "8881:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "8881:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8928:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8928:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8931:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8931:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8921:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:21"
																},
																"nativeSrc": "8921:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8921:15:21"
															},
															"nativeSrc": "8921:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8921:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8952:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8955:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8945:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:21"
																},
																"nativeSrc": "8945:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8945:15:21"
															},
															"nativeSrc": "8945:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8945:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8839:127:21",
												"nodeType": "YulFunctionDefinition",
												"src": "8839:127:21"
											},
											{
												"body": {
													"nativeSrc": "9019:77:21",
													"nodeType": "YulBlock",
													"src": "9019:77:21",
													"statements": [
														{
															"nativeSrc": "9029:16:21",
															"nodeType": "YulAssignment",
															"src": "9029:16:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9040:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "9040:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9043:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "9043:1:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9036:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9036:3:21"
																},
																"nativeSrc": "9036:9:21",
																"nodeType": "YulFunctionCall",
																"src": "9036:9:21"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9029:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9068:22:21",
																"nodeType": "YulBlock",
																"src": "9068:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9070:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "9070:16:21"
																			},
																			"nativeSrc": "9070:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9070:18:21"
																		},
																		"nativeSrc": "9070:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "9070:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9060:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "9060:1:21"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9063:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9063:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9057:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9057:2:21"
																},
																"nativeSrc": "9057:10:21",
																"nodeType": "YulFunctionCall",
																"src": "9057:10:21"
															},
															"nativeSrc": "9054:36:21",
															"nodeType": "YulIf",
															"src": "9054:36:21"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8971:125:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9002:1:21",
														"nodeType": "YulTypedName",
														"src": "9002:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9005:1:21",
														"nodeType": "YulTypedName",
														"src": "9005:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9011:3:21",
														"nodeType": "YulTypedName",
														"src": "9011:3:21",
														"type": ""
													}
												],
												"src": "8971:125:21"
											},
											{
												"body": {
													"nativeSrc": "9275:170:21",
													"nodeType": "YulBlock",
													"src": "9275:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9292:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9292:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9303:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9303:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9285:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9285:6:21"
																},
																"nativeSrc": "9285:21:21",
																"nodeType": "YulFunctionCall",
																"src": "9285:21:21"
															},
															"nativeSrc": "9285:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "9285:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9326:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9326:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9337:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9337:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9322:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:21"
																		},
																		"nativeSrc": "9322:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9342:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9315:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:21"
																},
																"nativeSrc": "9315:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9315:30:21"
															},
															"nativeSrc": "9315:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "9315:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9365:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9365:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9376:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9376:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9361:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9361:3:21"
																		},
																		"nativeSrc": "9361:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9361:18:21"
																	},
																	{
																		"hexValue": "42617463682073697a6520746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "9381:22:21",
																		"nodeType": "YulLiteral",
																		"src": "9381:22:21",
																		"type": "",
																		"value": "Batch size too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9354:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9354:6:21"
																},
																"nativeSrc": "9354:50:21",
																"nodeType": "YulFunctionCall",
																"src": "9354:50:21"
															},
															"nativeSrc": "9354:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "9354:50:21"
														},
														{
															"nativeSrc": "9413:26:21",
															"nodeType": "YulAssignment",
															"src": "9413:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9425:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9425:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9436:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9436:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9421:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9421:3:21"
																},
																"nativeSrc": "9421:18:21",
																"nodeType": "YulFunctionCall",
																"src": "9421:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9413:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9413:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9101:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9252:9:21",
														"nodeType": "YulTypedName",
														"src": "9252:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9266:4:21",
														"nodeType": "YulTypedName",
														"src": "9266:4:21",
														"type": ""
													}
												],
												"src": "9101:344:21"
											},
											{
												"body": {
													"nativeSrc": "9482:95:21",
													"nodeType": "YulBlock",
													"src": "9482:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9499:1:21",
																		"nodeType": "YulLiteral",
																		"src": "9499:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9506:3:21",
																				"nodeType": "YulLiteral",
																				"src": "9506:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9511:10:21",
																				"nodeType": "YulLiteral",
																				"src": "9511:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9502:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9502:3:21"
																		},
																		"nativeSrc": "9502:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9502:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9492:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9492:6:21"
																},
																"nativeSrc": "9492:31:21",
																"nodeType": "YulFunctionCall",
																"src": "9492:31:21"
															},
															"nativeSrc": "9492:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "9492:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9539:1:21",
																		"nodeType": "YulLiteral",
																		"src": "9539:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:4:21",
																		"nodeType": "YulLiteral",
																		"src": "9542:4:21",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:21"
																},
																"nativeSrc": "9532:15:21",
																"nodeType": "YulFunctionCall",
																"src": "9532:15:21"
															},
															"nativeSrc": "9532:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "9532:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9563:1:21",
																		"nodeType": "YulLiteral",
																		"src": "9563:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9566:4:21",
																		"nodeType": "YulLiteral",
																		"src": "9566:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9556:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:21"
																},
																"nativeSrc": "9556:15:21",
																"nodeType": "YulFunctionCall",
																"src": "9556:15:21"
															},
															"nativeSrc": "9556:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "9556:15:21"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9450:127:21",
												"nodeType": "YulFunctionDefinition",
												"src": "9450:127:21"
											},
											{
												"body": {
													"nativeSrc": "9756:174:21",
													"nodeType": "YulBlock",
													"src": "9756:174:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9773:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9773:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9784:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9784:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9766:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9766:6:21"
																},
																"nativeSrc": "9766:21:21",
																"nodeType": "YulFunctionCall",
																"src": "9766:21:21"
															},
															"nativeSrc": "9766:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "9766:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9807:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9803:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:21"
																		},
																		"nativeSrc": "9803:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9823:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9823:2:21",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9796:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:21"
																},
																"nativeSrc": "9796:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9796:30:21"
															},
															"nativeSrc": "9796:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "9796:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9846:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9857:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:21"
																		},
																		"nativeSrc": "9842:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e7420696e206261746368",
																		"kind": "string",
																		"nativeSrc": "9862:26:21",
																		"nodeType": "YulLiteral",
																		"src": "9862:26:21",
																		"type": "",
																		"value": "Invalid account in batch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9835:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:21"
																},
																"nativeSrc": "9835:54:21",
																"nodeType": "YulFunctionCall",
																"src": "9835:54:21"
															},
															"nativeSrc": "9835:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "9835:54:21"
														},
														{
															"nativeSrc": "9898:26:21",
															"nodeType": "YulAssignment",
															"src": "9898:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9910:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9910:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9921:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9921:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9906:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:21"
																},
																"nativeSrc": "9906:18:21",
																"nodeType": "YulFunctionCall",
																"src": "9906:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9898:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9898:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9582:348:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9733:9:21",
														"nodeType": "YulTypedName",
														"src": "9733:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9747:4:21",
														"nodeType": "YulTypedName",
														"src": "9747:4:21",
														"type": ""
													}
												],
												"src": "9582:348:21"
											},
											{
												"body": {
													"nativeSrc": "9984:79:21",
													"nodeType": "YulBlock",
													"src": "9984:79:21",
													"statements": [
														{
															"nativeSrc": "9994:17:21",
															"nodeType": "YulAssignment",
															"src": "9994:17:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10006:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "10006:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10009:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "10009:1:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10002:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10002:3:21"
																},
																"nativeSrc": "10002:9:21",
																"nodeType": "YulFunctionCall",
																"src": "10002:9:21"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9994:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9994:4:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10035:22:21",
																"nodeType": "YulBlock",
																"src": "10035:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10037:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "10037:16:21"
																			},
																			"nativeSrc": "10037:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "10037:18:21"
																		},
																		"nativeSrc": "10037:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "10037:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10026:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10026:4:21"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10032:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "10032:1:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10023:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "10023:2:21"
																},
																"nativeSrc": "10023:11:21",
																"nodeType": "YulFunctionCall",
																"src": "10023:11:21"
															},
															"nativeSrc": "10020:37:21",
															"nodeType": "YulIf",
															"src": "10020:37:21"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9935:128:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9966:1:21",
														"nodeType": "YulTypedName",
														"src": "9966:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9969:1:21",
														"nodeType": "YulTypedName",
														"src": "9969:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9975:4:21",
														"nodeType": "YulTypedName",
														"src": "9975:4:21",
														"type": ""
													}
												],
												"src": "9935:128:21"
											},
											{
												"body": {
													"nativeSrc": "10242:172:21",
													"nodeType": "YulBlock",
													"src": "10242:172:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10259:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10259:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10270:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10252:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:21"
																},
																"nativeSrc": "10252:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10252:21:21"
															},
															"nativeSrc": "10252:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "10252:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10293:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10304:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10304:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10289:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10289:3:21"
																		},
																		"nativeSrc": "10289:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10289:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10309:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10309:2:21",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10282:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10282:6:21"
																},
																"nativeSrc": "10282:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10282:30:21"
															},
															"nativeSrc": "10282:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "10282:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10332:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10343:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10343:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10328:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:21"
																		},
																		"nativeSrc": "10328:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10328:18:21"
																	},
																	{
																		"hexValue": "496e76616c69642073656e6465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "10348:24:21",
																		"nodeType": "YulLiteral",
																		"src": "10348:24:21",
																		"type": "",
																		"value": "Invalid sender address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10321:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10321:6:21"
																},
																"nativeSrc": "10321:52:21",
																"nodeType": "YulFunctionCall",
																"src": "10321:52:21"
															},
															"nativeSrc": "10321:52:21",
															"nodeType": "YulExpressionStatement",
															"src": "10321:52:21"
														},
														{
															"nativeSrc": "10382:26:21",
															"nodeType": "YulAssignment",
															"src": "10382:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10394:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10394:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10405:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10405:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10390:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10390:3:21"
																},
																"nativeSrc": "10390:18:21",
																"nodeType": "YulFunctionCall",
																"src": "10390:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10382:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10382:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10068:346:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10219:9:21",
														"nodeType": "YulTypedName",
														"src": "10219:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10233:4:21",
														"nodeType": "YulTypedName",
														"src": "10233:4:21",
														"type": ""
													}
												],
												"src": "10068:346:21"
											},
											{
												"body": {
													"nativeSrc": "10593:175:21",
													"nodeType": "YulBlock",
													"src": "10593:175:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10610:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10610:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10621:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10621:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10603:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10603:6:21"
																},
																"nativeSrc": "10603:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10603:21:21"
															},
															"nativeSrc": "10603:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "10603:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10644:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10644:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10655:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10655:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10640:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:21"
																		},
																		"nativeSrc": "10640:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10640:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10660:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10660:2:21",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10633:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:21"
																},
																"nativeSrc": "10633:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10633:30:21"
															},
															"nativeSrc": "10633:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "10633:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10683:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10683:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10694:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10694:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10679:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10679:3:21"
																		},
																		"nativeSrc": "10679:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10679:18:21"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "10699:27:21",
																		"nodeType": "YulLiteral",
																		"src": "10699:27:21",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10672:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:21"
																},
																"nativeSrc": "10672:55:21",
																"nodeType": "YulFunctionCall",
																"src": "10672:55:21"
															},
															"nativeSrc": "10672:55:21",
															"nodeType": "YulExpressionStatement",
															"src": "10672:55:21"
														},
														{
															"nativeSrc": "10736:26:21",
															"nodeType": "YulAssignment",
															"src": "10736:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10748:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10748:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10759:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10759:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10744:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10744:3:21"
																},
																"nativeSrc": "10744:18:21",
																"nodeType": "YulFunctionCall",
																"src": "10744:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10736:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10736:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10419:349:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10570:9:21",
														"nodeType": "YulTypedName",
														"src": "10570:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10584:4:21",
														"nodeType": "YulTypedName",
														"src": "10584:4:21",
														"type": ""
													}
												],
												"src": "10419:349:21"
											},
											{
												"body": {
													"nativeSrc": "10947:173:21",
													"nodeType": "YulBlock",
													"src": "10947:173:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10964:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10964:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10975:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10975:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10957:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:21"
																},
																"nativeSrc": "10957:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10957:21:21"
															},
															"nativeSrc": "10957:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "10957:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10998:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11009:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11009:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10994:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:21"
																		},
																		"nativeSrc": "10994:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10994:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11014:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11014:2:21",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10987:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10987:6:21"
																},
																"nativeSrc": "10987:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10987:30:21"
															},
															"nativeSrc": "10987:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "10987:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11037:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11037:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11048:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11048:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11033:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11033:3:21"
																		},
																		"nativeSrc": "11033:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11033:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964207472616e7366657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11053:25:21",
																		"nodeType": "YulLiteral",
																		"src": "11053:25:21",
																		"type": "",
																		"value": "Invalid transfer amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11026:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11026:6:21"
																},
																"nativeSrc": "11026:53:21",
																"nodeType": "YulFunctionCall",
																"src": "11026:53:21"
															},
															"nativeSrc": "11026:53:21",
															"nodeType": "YulExpressionStatement",
															"src": "11026:53:21"
														},
														{
															"nativeSrc": "11088:26:21",
															"nodeType": "YulAssignment",
															"src": "11088:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11100:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11100:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11111:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11111:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11096:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11096:3:21"
																},
																"nativeSrc": "11096:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11096:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11088:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11088:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10773:347:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10924:9:21",
														"nodeType": "YulTypedName",
														"src": "10924:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10938:4:21",
														"nodeType": "YulTypedName",
														"src": "10938:4:21",
														"type": ""
													}
												],
												"src": "10773:347:21"
											},
											{
												"body": {
													"nativeSrc": "11299:172:21",
													"nodeType": "YulBlock",
													"src": "11299:172:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11316:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11316:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11327:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11327:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11309:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:21"
																},
																"nativeSrc": "11309:21:21",
																"nodeType": "YulFunctionCall",
																"src": "11309:21:21"
															},
															"nativeSrc": "11309:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "11309:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11350:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11350:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11361:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11361:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11346:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:21"
																		},
																		"nativeSrc": "11346:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11346:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11366:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11366:2:21",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11339:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11339:6:21"
																},
																"nativeSrc": "11339:30:21",
																"nodeType": "YulFunctionCall",
																"src": "11339:30:21"
															},
															"nativeSrc": "11339:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "11339:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11389:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11389:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11400:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11400:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11385:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:21"
																		},
																		"nativeSrc": "11385:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11385:18:21"
																	},
																	{
																		"hexValue": "53656e646572206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "11405:24:21",
																		"nodeType": "YulLiteral",
																		"src": "11405:24:21",
																		"type": "",
																		"value": "Sender not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11378:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:21"
																},
																"nativeSrc": "11378:52:21",
																"nodeType": "YulFunctionCall",
																"src": "11378:52:21"
															},
															"nativeSrc": "11378:52:21",
															"nodeType": "YulExpressionStatement",
															"src": "11378:52:21"
														},
														{
															"nativeSrc": "11439:26:21",
															"nodeType": "YulAssignment",
															"src": "11439:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11451:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11451:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11462:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11462:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11447:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11447:3:21"
																},
																"nativeSrc": "11447:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11447:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11439:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11439:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11125:346:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11276:9:21",
														"nodeType": "YulTypedName",
														"src": "11276:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11290:4:21",
														"nodeType": "YulTypedName",
														"src": "11290:4:21",
														"type": ""
													}
												],
												"src": "11125:346:21"
											},
											{
												"body": {
													"nativeSrc": "11650:175:21",
													"nodeType": "YulBlock",
													"src": "11650:175:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11667:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11667:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11678:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11678:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11660:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11660:6:21"
																},
																"nativeSrc": "11660:21:21",
																"nodeType": "YulFunctionCall",
																"src": "11660:21:21"
															},
															"nativeSrc": "11660:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "11660:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11701:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11701:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11712:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11712:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11697:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11697:3:21"
																		},
																		"nativeSrc": "11697:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11697:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11717:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11717:2:21",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11690:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11690:6:21"
																},
																"nativeSrc": "11690:30:21",
																"nodeType": "YulFunctionCall",
																"src": "11690:30:21"
															},
															"nativeSrc": "11690:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "11690:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11740:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11740:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11751:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11751:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11736:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11736:3:21"
																		},
																		"nativeSrc": "11736:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11736:18:21"
																	},
																	{
																		"hexValue": "526563697069656e74206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "11756:27:21",
																		"nodeType": "YulLiteral",
																		"src": "11756:27:21",
																		"type": "",
																		"value": "Recipient not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11729:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11729:6:21"
																},
																"nativeSrc": "11729:55:21",
																"nodeType": "YulFunctionCall",
																"src": "11729:55:21"
															},
															"nativeSrc": "11729:55:21",
															"nodeType": "YulExpressionStatement",
															"src": "11729:55:21"
														},
														{
															"nativeSrc": "11793:26:21",
															"nodeType": "YulAssignment",
															"src": "11793:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11805:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11805:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11816:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11816:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11801:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11801:3:21"
																},
																"nativeSrc": "11801:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11801:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11793:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11793:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11476:349:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11627:9:21",
														"nodeType": "YulTypedName",
														"src": "11627:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11641:4:21",
														"nodeType": "YulTypedName",
														"src": "11641:4:21",
														"type": ""
													}
												],
												"src": "11476:349:21"
											},
											{
												"body": {
													"nativeSrc": "12004:173:21",
													"nodeType": "YulBlock",
													"src": "12004:173:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12021:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12021:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12032:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12032:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12014:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12014:6:21"
																},
																"nativeSrc": "12014:21:21",
																"nodeType": "YulFunctionCall",
																"src": "12014:21:21"
															},
															"nativeSrc": "12014:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "12014:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12055:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12055:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12066:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12066:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12051:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12051:3:21"
																		},
																		"nativeSrc": "12051:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12051:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12071:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12071:2:21",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12044:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12044:6:21"
																},
																"nativeSrc": "12044:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12044:30:21"
															},
															"nativeSrc": "12044:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "12044:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12094:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12094:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12105:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12105:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12090:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12090:3:21"
																		},
																		"nativeSrc": "12090:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12090:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "12110:25:21",
																		"nodeType": "YulLiteral",
																		"src": "12110:25:21",
																		"type": "",
																		"value": "Invalid account address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12083:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:21"
																},
																"nativeSrc": "12083:53:21",
																"nodeType": "YulFunctionCall",
																"src": "12083:53:21"
															},
															"nativeSrc": "12083:53:21",
															"nodeType": "YulExpressionStatement",
															"src": "12083:53:21"
														},
														{
															"nativeSrc": "12145:26:21",
															"nodeType": "YulAssignment",
															"src": "12145:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12157:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12157:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12168:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12168:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12153:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12153:3:21"
																},
																"nativeSrc": "12153:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12153:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12145:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12145:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11830:347:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11981:9:21",
														"nodeType": "YulTypedName",
														"src": "11981:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11995:4:21",
														"nodeType": "YulTypedName",
														"src": "11995:4:21",
														"type": ""
													}
												],
												"src": "11830:347:21"
											},
											{
												"body": {
													"nativeSrc": "12356:169:21",
													"nodeType": "YulBlock",
													"src": "12356:169:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12373:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12373:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12384:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12384:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12366:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12366:6:21"
																},
																"nativeSrc": "12366:21:21",
																"nodeType": "YulFunctionCall",
																"src": "12366:21:21"
															},
															"nativeSrc": "12366:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "12366:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12407:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12407:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12418:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12418:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12403:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12403:3:21"
																		},
																		"nativeSrc": "12403:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12403:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12423:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12423:2:21",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12396:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:21"
																},
																"nativeSrc": "12396:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12396:30:21"
															},
															"nativeSrc": "12396:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "12396:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12446:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12446:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12457:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12457:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12442:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12442:3:21"
																		},
																		"nativeSrc": "12442:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12442:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "12462:21:21",
																		"nodeType": "YulLiteral",
																		"src": "12462:21:21",
																		"type": "",
																		"value": "Invalid mint amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12435:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12435:6:21"
																},
																"nativeSrc": "12435:49:21",
																"nodeType": "YulFunctionCall",
																"src": "12435:49:21"
															},
															"nativeSrc": "12435:49:21",
															"nodeType": "YulExpressionStatement",
															"src": "12435:49:21"
														},
														{
															"nativeSrc": "12493:26:21",
															"nodeType": "YulAssignment",
															"src": "12493:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12505:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12505:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12516:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12516:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12501:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12501:3:21"
																},
																"nativeSrc": "12501:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12501:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12493:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12493:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12182:343:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12333:9:21",
														"nodeType": "YulTypedName",
														"src": "12333:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12347:4:21",
														"nodeType": "YulTypedName",
														"src": "12347:4:21",
														"type": ""
													}
												],
												"src": "12182:343:21"
											},
											{
												"body": {
													"nativeSrc": "12704:162:21",
													"nodeType": "YulBlock",
													"src": "12704:162:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12721:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12721:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12732:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12732:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12714:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12714:6:21"
																},
																"nativeSrc": "12714:21:21",
																"nodeType": "YulFunctionCall",
																"src": "12714:21:21"
															},
															"nativeSrc": "12714:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "12714:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12755:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12755:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12766:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12766:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12751:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12751:3:21"
																		},
																		"nativeSrc": "12751:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12751:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12771:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12771:2:21",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12744:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:21"
																},
																"nativeSrc": "12744:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12744:30:21"
															},
															"nativeSrc": "12744:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "12744:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12794:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12794:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12805:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12805:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12790:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12790:3:21"
																		},
																		"nativeSrc": "12790:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12790:18:21"
																	},
																	{
																		"hexValue": "436170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "12810:14:21",
																		"nodeType": "YulLiteral",
																		"src": "12810:14:21",
																		"type": "",
																		"value": "Cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12783:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12783:6:21"
																},
																"nativeSrc": "12783:42:21",
																"nodeType": "YulFunctionCall",
																"src": "12783:42:21"
															},
															"nativeSrc": "12783:42:21",
															"nodeType": "YulExpressionStatement",
															"src": "12783:42:21"
														},
														{
															"nativeSrc": "12834:26:21",
															"nodeType": "YulAssignment",
															"src": "12834:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12846:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12846:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12857:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12857:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12842:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12842:3:21"
																},
																"nativeSrc": "12842:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12842:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12834:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12834:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12530:336:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12681:9:21",
														"nodeType": "YulTypedName",
														"src": "12681:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12695:4:21",
														"nodeType": "YulTypedName",
														"src": "12695:4:21",
														"type": ""
													}
												],
												"src": "12530:336:21"
											},
											{
												"body": {
													"nativeSrc": "13045:170:21",
													"nodeType": "YulBlock",
													"src": "13045:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13062:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13062:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13073:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13073:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13055:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13055:6:21"
																},
																"nativeSrc": "13055:21:21",
																"nodeType": "YulFunctionCall",
																"src": "13055:21:21"
															},
															"nativeSrc": "13055:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "13055:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13096:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13096:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13107:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13107:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13092:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13092:3:21"
																		},
																		"nativeSrc": "13092:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13092:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13112:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13112:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13085:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:21"
																},
																"nativeSrc": "13085:30:21",
																"nodeType": "YulFunctionCall",
																"src": "13085:30:21"
															},
															"nativeSrc": "13085:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "13085:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13135:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13135:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13146:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13146:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13131:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13131:3:21"
																		},
																		"nativeSrc": "13131:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13131:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206275726e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "13151:22:21",
																		"nodeType": "YulLiteral",
																		"src": "13151:22:21",
																		"type": "",
																		"value": "Invalid burn address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13124:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13124:6:21"
																},
																"nativeSrc": "13124:50:21",
																"nodeType": "YulFunctionCall",
																"src": "13124:50:21"
															},
															"nativeSrc": "13124:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "13124:50:21"
														},
														{
															"nativeSrc": "13183:26:21",
															"nodeType": "YulAssignment",
															"src": "13183:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13195:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13195:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13206:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13206:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13191:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:21"
																},
																"nativeSrc": "13191:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13191:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13183:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13183:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e039e896b666aadb82976a4fad223163b0be195242fbcf4255e53d4f2a4e4aa0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12871:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13022:9:21",
														"nodeType": "YulTypedName",
														"src": "13022:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13036:4:21",
														"nodeType": "YulTypedName",
														"src": "13036:4:21",
														"type": ""
													}
												],
												"src": "12871:344:21"
											},
											{
												"body": {
													"nativeSrc": "13394:169:21",
													"nodeType": "YulBlock",
													"src": "13394:169:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13411:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13411:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13422:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13422:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13404:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13404:6:21"
																},
																"nativeSrc": "13404:21:21",
																"nodeType": "YulFunctionCall",
																"src": "13404:21:21"
															},
															"nativeSrc": "13404:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "13404:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13445:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13445:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13456:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13456:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13441:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13441:3:21"
																		},
																		"nativeSrc": "13441:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13441:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13461:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13461:2:21",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13434:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13434:6:21"
																},
																"nativeSrc": "13434:30:21",
																"nodeType": "YulFunctionCall",
																"src": "13434:30:21"
															},
															"nativeSrc": "13434:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "13434:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13484:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13484:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13495:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13495:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13480:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13480:3:21"
																		},
																		"nativeSrc": "13480:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13480:18:21"
																	},
																	{
																		"hexValue": "496e76616c6964206275726e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "13500:21:21",
																		"nodeType": "YulLiteral",
																		"src": "13500:21:21",
																		"type": "",
																		"value": "Invalid burn amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13473:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:21"
																},
																"nativeSrc": "13473:49:21",
																"nodeType": "YulFunctionCall",
																"src": "13473:49:21"
															},
															"nativeSrc": "13473:49:21",
															"nodeType": "YulExpressionStatement",
															"src": "13473:49:21"
														},
														{
															"nativeSrc": "13531:26:21",
															"nodeType": "YulAssignment",
															"src": "13531:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13543:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13543:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13554:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13554:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13539:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:21"
																},
																"nativeSrc": "13539:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13539:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13531:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13531:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26c54b3e13aa2dfe42517d4e33d479520cac47dc66cf13820ed08a9ade960c6c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13220:343:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13371:9:21",
														"nodeType": "YulTypedName",
														"src": "13371:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13385:4:21",
														"nodeType": "YulTypedName",
														"src": "13385:4:21",
														"type": ""
													}
												],
												"src": "13220:343:21"
											},
											{
												"body": {
													"nativeSrc": "13742:170:21",
													"nodeType": "YulBlock",
													"src": "13742:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13759:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13759:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13770:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13770:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13752:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13752:6:21"
																},
																"nativeSrc": "13752:21:21",
																"nodeType": "YulFunctionCall",
																"src": "13752:21:21"
															},
															"nativeSrc": "13752:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "13752:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13793:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13793:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13804:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13804:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13789:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13789:3:21"
																		},
																		"nativeSrc": "13789:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13789:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13809:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13809:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13782:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13782:6:21"
																},
																"nativeSrc": "13782:30:21",
																"nodeType": "YulFunctionCall",
																"src": "13782:30:21"
															},
															"nativeSrc": "13782:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "13782:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13832:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13832:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13843:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13843:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13828:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13828:3:21"
																		},
																		"nativeSrc": "13828:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13828:18:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13848:22:21",
																		"nodeType": "YulLiteral",
																		"src": "13848:22:21",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13821:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13821:6:21"
																},
																"nativeSrc": "13821:50:21",
																"nodeType": "YulFunctionCall",
																"src": "13821:50:21"
															},
															"nativeSrc": "13821:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "13821:50:21"
														},
														{
															"nativeSrc": "13880:26:21",
															"nodeType": "YulAssignment",
															"src": "13880:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13892:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13892:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13903:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13903:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13888:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13888:3:21"
																},
																"nativeSrc": "13888:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13888:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13880:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13880:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13568:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13719:9:21",
														"nodeType": "YulTypedName",
														"src": "13719:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13733:4:21",
														"nodeType": "YulTypedName",
														"src": "13733:4:21",
														"type": ""
													}
												],
												"src": "13568:344:21"
											},
											{
												"body": {
													"nativeSrc": "14074:188:21",
													"nodeType": "YulBlock",
													"src": "14074:188:21",
													"statements": [
														{
															"nativeSrc": "14084:26:21",
															"nodeType": "YulAssignment",
															"src": "14084:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14096:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14096:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14107:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14107:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14092:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14092:3:21"
																},
																"nativeSrc": "14092:18:21",
																"nodeType": "YulFunctionCall",
																"src": "14092:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14084:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14084:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14126:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14126:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14141:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "14141:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14157:3:21",
																								"nodeType": "YulLiteral",
																								"src": "14157:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14162:1:21",
																								"nodeType": "YulLiteral",
																								"src": "14162:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14153:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "14153:3:21"
																						},
																						"nativeSrc": "14153:11:21",
																						"nodeType": "YulFunctionCall",
																						"src": "14153:11:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14166:1:21",
																						"nodeType": "YulLiteral",
																						"src": "14166:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14149:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "14149:3:21"
																				},
																				"nativeSrc": "14149:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "14149:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14137:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14137:3:21"
																		},
																		"nativeSrc": "14137:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14137:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14119:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14119:6:21"
																},
																"nativeSrc": "14119:51:21",
																"nodeType": "YulFunctionCall",
																"src": "14119:51:21"
															},
															"nativeSrc": "14119:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "14119:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14190:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14190:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14201:2:21",
																				"nodeType": "YulLiteral",
																				"src": "14201:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14186:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14186:3:21"
																		},
																		"nativeSrc": "14186:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14186:18:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14206:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14206:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14179:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14179:6:21"
																},
																"nativeSrc": "14179:34:21",
																"nodeType": "YulFunctionCall",
																"src": "14179:34:21"
															},
															"nativeSrc": "14179:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "14179:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14233:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14233:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14244:2:21",
																				"nodeType": "YulLiteral",
																				"src": "14244:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:21"
																		},
																		"nativeSrc": "14229:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:18:21"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14249:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14249:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14222:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:21"
																},
																"nativeSrc": "14222:34:21",
																"nodeType": "YulFunctionCall",
																"src": "14222:34:21"
															},
															"nativeSrc": "14222:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "14222:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13917:345:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14027:9:21",
														"nodeType": "YulTypedName",
														"src": "14027:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14038:6:21",
														"nodeType": "YulTypedName",
														"src": "14038:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14046:6:21",
														"nodeType": "YulTypedName",
														"src": "14046:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14054:6:21",
														"nodeType": "YulTypedName",
														"src": "14054:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14065:4:21",
														"nodeType": "YulTypedName",
														"src": "14065:4:21",
														"type": ""
													}
												],
												"src": "13917:345:21"
											},
											{
												"body": {
													"nativeSrc": "14368:102:21",
													"nodeType": "YulBlock",
													"src": "14368:102:21",
													"statements": [
														{
															"nativeSrc": "14378:26:21",
															"nodeType": "YulAssignment",
															"src": "14378:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14390:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14390:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14401:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14401:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14386:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14386:3:21"
																},
																"nativeSrc": "14386:18:21",
																"nodeType": "YulFunctionCall",
																"src": "14386:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14378:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14378:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14420:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14420:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14435:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "14435:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14451:3:21",
																								"nodeType": "YulLiteral",
																								"src": "14451:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14456:1:21",
																								"nodeType": "YulLiteral",
																								"src": "14456:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14447:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "14447:3:21"
																						},
																						"nativeSrc": "14447:11:21",
																						"nodeType": "YulFunctionCall",
																						"src": "14447:11:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14460:1:21",
																						"nodeType": "YulLiteral",
																						"src": "14460:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14443:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "14443:3:21"
																				},
																				"nativeSrc": "14443:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "14443:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14431:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14431:3:21"
																		},
																		"nativeSrc": "14431:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14431:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14413:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14413:6:21"
																},
																"nativeSrc": "14413:51:21",
																"nodeType": "YulFunctionCall",
																"src": "14413:51:21"
															},
															"nativeSrc": "14413:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "14413:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14267:203:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14337:9:21",
														"nodeType": "YulTypedName",
														"src": "14337:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14348:6:21",
														"nodeType": "YulTypedName",
														"src": "14348:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14359:4:21",
														"nodeType": "YulTypedName",
														"src": "14359:4:21",
														"type": ""
													}
												],
												"src": "14267:203:21"
											},
											{
												"body": {
													"nativeSrc": "14649:180:21",
													"nodeType": "YulBlock",
													"src": "14649:180:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14666:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14666:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14677:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14677:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14659:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14659:6:21"
																},
																"nativeSrc": "14659:21:21",
																"nodeType": "YulFunctionCall",
																"src": "14659:21:21"
															},
															"nativeSrc": "14659:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "14659:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14700:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14700:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14711:2:21",
																				"nodeType": "YulLiteral",
																				"src": "14711:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14696:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14696:3:21"
																		},
																		"nativeSrc": "14696:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14696:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14716:2:21",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14689:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14689:6:21"
																},
																"nativeSrc": "14689:30:21",
																"nodeType": "YulFunctionCall",
																"src": "14689:30:21"
															},
															"nativeSrc": "14689:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "14689:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14739:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14739:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14750:2:21",
																				"nodeType": "YulLiteral",
																				"src": "14750:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14735:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14735:3:21"
																		},
																		"nativeSrc": "14735:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14735:18:21"
																	},
																	{
																		"hexValue": "496e76616c696420696d706c656d656e746174696f6e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14755:32:21",
																		"nodeType": "YulLiteral",
																		"src": "14755:32:21",
																		"type": "",
																		"value": "Invalid implementation address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14728:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14728:6:21"
																},
																"nativeSrc": "14728:60:21",
																"nodeType": "YulFunctionCall",
																"src": "14728:60:21"
															},
															"nativeSrc": "14728:60:21",
															"nodeType": "YulExpressionStatement",
															"src": "14728:60:21"
														},
														{
															"nativeSrc": "14797:26:21",
															"nodeType": "YulAssignment",
															"src": "14797:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14809:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14809:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14820:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14820:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14805:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14805:3:21"
																},
																"nativeSrc": "14805:18:21",
																"nodeType": "YulFunctionCall",
																"src": "14805:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14797:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14797:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14475:354:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14626:9:21",
														"nodeType": "YulTypedName",
														"src": "14626:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14640:4:21",
														"nodeType": "YulTypedName",
														"src": "14640:4:21",
														"type": ""
													}
												],
												"src": "14475:354:21"
											},
											{
												"body": {
													"nativeSrc": "14915:103:21",
													"nodeType": "YulBlock",
													"src": "14915:103:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "14961:16:21",
																"nodeType": "YulBlock",
																"src": "14961:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14970:1:21",
																					"nodeType": "YulLiteral",
																					"src": "14970:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14973:1:21",
																					"nodeType": "YulLiteral",
																					"src": "14973:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14963:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "14963:6:21"
																			},
																			"nativeSrc": "14963:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "14963:12:21"
																		},
																		"nativeSrc": "14963:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "14963:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14936:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "14936:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14945:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14945:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14932:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14932:3:21"
																		},
																		"nativeSrc": "14932:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14932:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14957:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14957:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14928:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14928:3:21"
																},
																"nativeSrc": "14928:32:21",
																"nodeType": "YulFunctionCall",
																"src": "14928:32:21"
															},
															"nativeSrc": "14925:52:21",
															"nodeType": "YulIf",
															"src": "14925:52:21"
														},
														{
															"nativeSrc": "14986:26:21",
															"nodeType": "YulAssignment",
															"src": "14986:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15002:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "15002:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14996:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "14996:5:21"
																},
																"nativeSrc": "14996:16:21",
																"nodeType": "YulFunctionCall",
																"src": "14996:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "14986:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14986:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "14834:184:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14881:9:21",
														"nodeType": "YulTypedName",
														"src": "14881:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14892:7:21",
														"nodeType": "YulTypedName",
														"src": "14892:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14904:6:21",
														"nodeType": "YulTypedName",
														"src": "14904:6:21",
														"type": ""
													}
												],
												"src": "14834:184:21"
											},
											{
												"body": {
													"nativeSrc": "15079:65:21",
													"nodeType": "YulBlock",
													"src": "15079:65:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15096:1:21",
																		"nodeType": "YulLiteral",
																		"src": "15096:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15099:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "15099:3:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15089:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "15089:6:21"
																},
																"nativeSrc": "15089:14:21",
																"nodeType": "YulFunctionCall",
																"src": "15089:14:21"
															},
															"nativeSrc": "15089:14:21",
															"nodeType": "YulExpressionStatement",
															"src": "15089:14:21"
														},
														{
															"nativeSrc": "15112:26:21",
															"nodeType": "YulAssignment",
															"src": "15112:26:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15130:1:21",
																		"nodeType": "YulLiteral",
																		"src": "15130:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15133:4:21",
																		"nodeType": "YulLiteral",
																		"src": "15133:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15120:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "15120:9:21"
																},
																"nativeSrc": "15120:18:21",
																"nodeType": "YulFunctionCall",
																"src": "15120:18:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15112:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "15112:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "15023:121:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15062:3:21",
														"nodeType": "YulTypedName",
														"src": "15062:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15070:4:21",
														"nodeType": "YulTypedName",
														"src": "15070:4:21",
														"type": ""
													}
												],
												"src": "15023:121:21"
											},
											{
												"body": {
													"nativeSrc": "15230:437:21",
													"nodeType": "YulBlock",
													"src": "15230:437:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "15263:398:21",
																"nodeType": "YulBlock",
																"src": "15263:398:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15284:1:21",
																					"nodeType": "YulLiteral",
																					"src": "15284:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "15287:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "15287:5:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15277:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "15277:6:21"
																			},
																			"nativeSrc": "15277:16:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15277:16:21"
																		},
																		"nativeSrc": "15277:16:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "15277:16:21"
																	},
																	{
																		"nativeSrc": "15306:30:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15306:30:21",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15328:1:21",
																					"nodeType": "YulLiteral",
																					"src": "15328:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15331:4:21",
																					"nodeType": "YulLiteral",
																					"src": "15331:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "15318:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "15318:9:21"
																			},
																			"nativeSrc": "15318:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15318:18:21"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "15310:4:21",
																				"nodeType": "YulTypedName",
																				"src": "15310:4:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15349:57:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15349:57:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "15372:4:21",
																					"nodeType": "YulIdentifier",
																					"src": "15372:4:21"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15382:1:21",
																							"nodeType": "YulLiteral",
																							"src": "15382:1:21",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "15389:10:21",
																									"nodeType": "YulIdentifier",
																									"src": "15389:10:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15401:2:21",
																									"nodeType": "YulLiteral",
																									"src": "15401:2:21",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15385:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "15385:3:21"
																							},
																							"nativeSrc": "15385:19:21",
																							"nodeType": "YulFunctionCall",
																							"src": "15385:19:21"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15378:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "15378:3:21"
																					},
																					"nativeSrc": "15378:27:21",
																					"nodeType": "YulFunctionCall",
																					"src": "15378:27:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15368:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "15368:3:21"
																			},
																			"nativeSrc": "15368:38:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15368:38:21"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15353:11:21",
																				"nodeType": "YulTypedName",
																				"src": "15353:11:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15443:23:21",
																			"nodeType": "YulBlock",
																			"src": "15443:23:21",
																			"statements": [
																				{
																					"nativeSrc": "15445:19:21",
																					"nodeType": "YulAssignment",
																					"src": "15445:19:21",
																					"value": {
																						"name": "data",
																						"nativeSrc": "15460:4:21",
																						"nodeType": "YulIdentifier",
																						"src": "15460:4:21"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15445:11:21",
																							"nodeType": "YulIdentifier",
																							"src": "15445:11:21"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15425:10:21",
																					"nodeType": "YulIdentifier",
																					"src": "15425:10:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15437:4:21",
																					"nodeType": "YulLiteral",
																					"src": "15437:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15422:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "15422:2:21"
																			},
																			"nativeSrc": "15422:20:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15422:20:21"
																		},
																		"nativeSrc": "15419:47:21",
																		"nodeType": "YulIf",
																		"src": "15419:47:21"
																	},
																	{
																		"nativeSrc": "15479:41:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15479:41:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "15493:4:21",
																					"nodeType": "YulIdentifier",
																					"src": "15493:4:21"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15503:1:21",
																							"nodeType": "YulLiteral",
																							"src": "15503:1:21",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15510:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "15510:3:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15515:2:21",
																									"nodeType": "YulLiteral",
																									"src": "15515:2:21",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15506:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "15506:3:21"
																							},
																							"nativeSrc": "15506:12:21",
																							"nodeType": "YulFunctionCall",
																							"src": "15506:12:21"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15499:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "15499:3:21"
																					},
																					"nativeSrc": "15499:20:21",
																					"nodeType": "YulFunctionCall",
																					"src": "15499:20:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15489:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "15489:3:21"
																			},
																			"nativeSrc": "15489:31:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15489:31:21"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "15483:2:21",
																				"nodeType": "YulTypedName",
																				"src": "15483:2:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15533:24:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15533:24:21",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "15546:11:21",
																			"nodeType": "YulIdentifier",
																			"src": "15546:11:21"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "15537:5:21",
																				"nodeType": "YulTypedName",
																				"src": "15537:5:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15631:20:21",
																			"nodeType": "YulBlock",
																			"src": "15631:20:21",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "15640:5:21",
																								"nodeType": "YulIdentifier",
																								"src": "15640:5:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15647:1:21",
																								"nodeType": "YulLiteral",
																								"src": "15647:1:21",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "15633:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "15633:6:21"
																						},
																						"nativeSrc": "15633:16:21",
																						"nodeType": "YulFunctionCall",
																						"src": "15633:16:21"
																					},
																					"nativeSrc": "15633:16:21",
																					"nodeType": "YulExpressionStatement",
																					"src": "15633:16:21"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15581:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "15581:5:21"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "15588:2:21",
																					"nodeType": "YulIdentifier",
																					"src": "15588:2:21"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15578:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "15578:2:21"
																			},
																			"nativeSrc": "15578:13:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15578:13:21"
																		},
																		"nativeSrc": "15570:81:21",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "15592:26:21",
																			"nodeType": "YulBlock",
																			"src": "15592:26:21",
																			"statements": [
																				{
																					"nativeSrc": "15594:22:21",
																					"nodeType": "YulAssignment",
																					"src": "15594:22:21",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "15607:5:21",
																								"nodeType": "YulIdentifier",
																								"src": "15607:5:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15614:1:21",
																								"nodeType": "YulLiteral",
																								"src": "15614:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "15603:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "15603:3:21"
																						},
																						"nativeSrc": "15603:13:21",
																						"nodeType": "YulFunctionCall",
																						"src": "15603:13:21"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "15594:5:21",
																							"nodeType": "YulIdentifier",
																							"src": "15594:5:21"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "15574:3:21",
																			"nodeType": "YulBlock",
																			"src": "15574:3:21",
																			"statements": []
																		},
																		"src": "15570:81:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15246:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "15246:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15251:2:21",
																		"nodeType": "YulLiteral",
																		"src": "15251:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15243:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "15243:2:21"
																},
																"nativeSrc": "15243:11:21",
																"nodeType": "YulFunctionCall",
																"src": "15243:11:21"
															},
															"nativeSrc": "15240:421:21",
															"nodeType": "YulIf",
															"src": "15240:421:21"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "15149:518:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15202:5:21",
														"nodeType": "YulTypedName",
														"src": "15202:5:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15209:3:21",
														"nodeType": "YulTypedName",
														"src": "15209:3:21",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15214:10:21",
														"nodeType": "YulTypedName",
														"src": "15214:10:21",
														"type": ""
													}
												],
												"src": "15149:518:21"
											},
											{
												"body": {
													"nativeSrc": "15757:81:21",
													"nodeType": "YulBlock",
													"src": "15757:81:21",
													"statements": [
														{
															"nativeSrc": "15767:65:21",
															"nodeType": "YulAssignment",
															"src": "15767:65:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "15782:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "15782:4:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15800:1:21",
																										"nodeType": "YulLiteral",
																										"src": "15800:1:21",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "15803:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "15803:3:21"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "15796:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "15796:3:21"
																								},
																								"nativeSrc": "15796:11:21",
																								"nodeType": "YulFunctionCall",
																								"src": "15796:11:21"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15813:1:21",
																										"nodeType": "YulLiteral",
																										"src": "15813:1:21",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "15809:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "15809:3:21"
																								},
																								"nativeSrc": "15809:6:21",
																								"nodeType": "YulFunctionCall",
																								"src": "15809:6:21"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "15792:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "15792:3:21"
																						},
																						"nativeSrc": "15792:24:21",
																						"nodeType": "YulFunctionCall",
																						"src": "15792:24:21"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15788:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "15788:3:21"
																				},
																				"nativeSrc": "15788:29:21",
																				"nodeType": "YulFunctionCall",
																				"src": "15788:29:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15778:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "15778:3:21"
																		},
																		"nativeSrc": "15778:40:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15778:40:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15824:1:21",
																				"nodeType": "YulLiteral",
																				"src": "15824:1:21",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "15827:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "15827:3:21"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15820:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "15820:3:21"
																		},
																		"nativeSrc": "15820:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15820:11:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15775:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "15775:2:21"
																},
																"nativeSrc": "15775:57:21",
																"nodeType": "YulFunctionCall",
																"src": "15775:57:21"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15767:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "15767:4:21"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15672:166:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15734:4:21",
														"nodeType": "YulTypedName",
														"src": "15734:4:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15740:3:21",
														"nodeType": "YulTypedName",
														"src": "15740:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15748:4:21",
														"nodeType": "YulTypedName",
														"src": "15748:4:21",
														"type": ""
													}
												],
												"src": "15672:166:21"
											},
											{
												"body": {
													"nativeSrc": "15939:1203:21",
													"nodeType": "YulBlock",
													"src": "15939:1203:21",
													"statements": [
														{
															"nativeSrc": "15949:24:21",
															"nodeType": "YulVariableDeclaration",
															"src": "15949:24:21",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15969:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "15969:3:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15963:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "15963:5:21"
																},
																"nativeSrc": "15963:10:21",
																"nodeType": "YulFunctionCall",
																"src": "15963:10:21"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "15953:6:21",
																	"nodeType": "YulTypedName",
																	"src": "15953:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16016:22:21",
																"nodeType": "YulBlock",
																"src": "16016:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16018:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "16018:16:21"
																			},
																			"nativeSrc": "16018:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "16018:18:21"
																		},
																		"nativeSrc": "16018:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "16018:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15988:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "15988:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15996:18:21",
																		"nodeType": "YulLiteral",
																		"src": "15996:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15985:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "15985:2:21"
																},
																"nativeSrc": "15985:30:21",
																"nodeType": "YulFunctionCall",
																"src": "15985:30:21"
															},
															"nativeSrc": "15982:56:21",
															"nodeType": "YulIf",
															"src": "15982:56:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16091:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "16091:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16129:4:21",
																						"nodeType": "YulIdentifier",
																						"src": "16129:4:21"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16123:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "16123:5:21"
																				},
																				"nativeSrc": "16123:11:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16123:11:21"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "16097:25:21",
																			"nodeType": "YulIdentifier",
																			"src": "16097:25:21"
																		},
																		"nativeSrc": "16097:38:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16097:38:21"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16137:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "16137:6:21"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "16047:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "16047:43:21"
																},
																"nativeSrc": "16047:97:21",
																"nodeType": "YulFunctionCall",
																"src": "16047:97:21"
															},
															"nativeSrc": "16047:97:21",
															"nodeType": "YulExpressionStatement",
															"src": "16047:97:21"
														},
														{
															"nativeSrc": "16153:18:21",
															"nodeType": "YulVariableDeclaration",
															"src": "16153:18:21",
															"value": {
																"kind": "number",
																"nativeSrc": "16170:1:21",
																"nodeType": "YulLiteral",
																"src": "16170:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16157:9:21",
																	"nodeType": "YulTypedName",
																	"src": "16157:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16180:17:21",
															"nodeType": "YulAssignment",
															"src": "16180:17:21",
															"value": {
																"kind": "number",
																"nativeSrc": "16193:4:21",
																"nodeType": "YulLiteral",
																"src": "16193:4:21",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16180:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "16180:9:21"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16243:642:21",
																		"nodeType": "YulBlock",
																		"src": "16243:642:21",
																		"statements": [
																			{
																				"nativeSrc": "16257:35:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16257:35:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16276:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "16276:6:21"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16288:2:21",
																									"nodeType": "YulLiteral",
																									"src": "16288:2:21",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16284:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "16284:3:21"
																							},
																							"nativeSrc": "16284:7:21",
																							"nodeType": "YulFunctionCall",
																							"src": "16284:7:21"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16272:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "16272:3:21"
																					},
																					"nativeSrc": "16272:20:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16272:20:21"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16261:7:21",
																						"nodeType": "YulTypedName",
																						"src": "16261:7:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16305:49:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16305:49:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16349:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "16349:4:21"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "16319:29:21",
																						"nodeType": "YulIdentifier",
																						"src": "16319:29:21"
																					},
																					"nativeSrc": "16319:35:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16319:35:21"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16309:6:21",
																						"nodeType": "YulTypedName",
																						"src": "16309:6:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16367:10:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16367:10:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16376:1:21",
																					"nodeType": "YulLiteral",
																					"src": "16376:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16371:1:21",
																						"nodeType": "YulTypedName",
																						"src": "16371:1:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16447:165:21",
																					"nodeType": "YulBlock",
																					"src": "16447:165:21",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16472:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "16472:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16490:3:21",
																														"nodeType": "YulIdentifier",
																														"src": "16490:3:21"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16495:9:21",
																														"nodeType": "YulIdentifier",
																														"src": "16495:9:21"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16486:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "16486:3:21"
																												},
																												"nativeSrc": "16486:19:21",
																												"nodeType": "YulFunctionCall",
																												"src": "16486:19:21"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16480:5:21",
																											"nodeType": "YulIdentifier",
																											"src": "16480:5:21"
																										},
																										"nativeSrc": "16480:26:21",
																										"nodeType": "YulFunctionCall",
																										"src": "16480:26:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16465:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "16465:6:21"
																								},
																								"nativeSrc": "16465:42:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16465:42:21"
																							},
																							"nativeSrc": "16465:42:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "16465:42:21"
																						},
																						{
																							"nativeSrc": "16524:24:21",
																							"nodeType": "YulAssignment",
																							"src": "16524:24:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16538:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "16538:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16546:1:21",
																										"nodeType": "YulLiteral",
																										"src": "16546:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16534:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "16534:3:21"
																								},
																								"nativeSrc": "16534:14:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16534:14:21"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16524:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "16524:6:21"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16565:33:21",
																							"nodeType": "YulAssignment",
																							"src": "16565:33:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16582:9:21",
																										"nodeType": "YulIdentifier",
																										"src": "16582:9:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16593:4:21",
																										"nodeType": "YulLiteral",
																										"src": "16593:4:21",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16578:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "16578:3:21"
																								},
																								"nativeSrc": "16578:20:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16578:20:21"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16565:9:21",
																									"nodeType": "YulIdentifier",
																									"src": "16565:9:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16401:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "16401:1:21"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16404:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "16404:7:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16398:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "16398:2:21"
																					},
																					"nativeSrc": "16398:14:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16398:14:21"
																				},
																				"nativeSrc": "16390:222:21",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16413:21:21",
																					"nodeType": "YulBlock",
																					"src": "16413:21:21",
																					"statements": [
																						{
																							"nativeSrc": "16415:17:21",
																							"nodeType": "YulAssignment",
																							"src": "16415:17:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16424:1:21",
																										"nodeType": "YulIdentifier",
																										"src": "16424:1:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16427:4:21",
																										"nodeType": "YulLiteral",
																										"src": "16427:4:21",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16420:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "16420:3:21"
																								},
																								"nativeSrc": "16420:12:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16420:12:21"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16415:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "16415:1:21"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16394:3:21",
																					"nodeType": "YulBlock",
																					"src": "16394:3:21",
																					"statements": []
																				},
																				"src": "16390:222:21"
																			},
																			{
																				"body": {
																					"nativeSrc": "16660:166:21",
																					"nodeType": "YulBlock",
																					"src": "16660:166:21",
																					"statements": [
																						{
																							"nativeSrc": "16678:43:21",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16678:43:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16705:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "16705:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16710:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "16710:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16701:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "16701:3:21"
																										},
																										"nativeSrc": "16701:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "16701:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16695:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "16695:5:21"
																								},
																								"nativeSrc": "16695:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16695:26:21"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16682:9:21",
																									"nodeType": "YulTypedName",
																									"src": "16682:9:21",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16745:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "16745:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "16757:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "16757:9:21"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "16784:1:21",
																																				"nodeType": "YulLiteral",
																																				"src": "16784:1:21",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "16787:6:21",
																																				"nodeType": "YulIdentifier",
																																				"src": "16787:6:21"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "16780:3:21",
																																			"nodeType": "YulIdentifier",
																																			"src": "16780:3:21"
																																		},
																																		"nativeSrc": "16780:14:21",
																																		"nodeType": "YulFunctionCall",
																																		"src": "16780:14:21"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "16796:3:21",
																																		"nodeType": "YulLiteral",
																																		"src": "16796:3:21",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "16776:3:21",
																																	"nodeType": "YulIdentifier",
																																	"src": "16776:3:21"
																																},
																																"nativeSrc": "16776:24:21",
																																"nodeType": "YulFunctionCall",
																																"src": "16776:24:21"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "16806:1:21",
																																		"nodeType": "YulLiteral",
																																		"src": "16806:1:21",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "16802:3:21",
																																	"nodeType": "YulIdentifier",
																																	"src": "16802:3:21"
																																},
																																"nativeSrc": "16802:6:21",
																																"nodeType": "YulFunctionCall",
																																"src": "16802:6:21"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "16772:3:21",
																															"nodeType": "YulIdentifier",
																															"src": "16772:3:21"
																														},
																														"nativeSrc": "16772:37:21",
																														"nodeType": "YulFunctionCall",
																														"src": "16772:37:21"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "16768:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "16768:3:21"
																												},
																												"nativeSrc": "16768:42:21",
																												"nodeType": "YulFunctionCall",
																												"src": "16768:42:21"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "16753:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "16753:3:21"
																										},
																										"nativeSrc": "16753:58:21",
																										"nodeType": "YulFunctionCall",
																										"src": "16753:58:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16738:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "16738:6:21"
																								},
																								"nativeSrc": "16738:74:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16738:74:21"
																							},
																							"nativeSrc": "16738:74:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "16738:74:21"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16631:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "16631:7:21"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16640:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "16640:6:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16628:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "16628:2:21"
																					},
																					"nativeSrc": "16628:19:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16628:19:21"
																				},
																				"nativeSrc": "16625:201:21",
																				"nodeType": "YulIf",
																				"src": "16625:201:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16846:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "16846:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16860:1:21",
																											"nodeType": "YulLiteral",
																											"src": "16860:1:21",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "16863:6:21",
																											"nodeType": "YulIdentifier",
																											"src": "16863:6:21"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16856:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "16856:3:21"
																									},
																									"nativeSrc": "16856:14:21",
																									"nodeType": "YulFunctionCall",
																									"src": "16856:14:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16872:1:21",
																									"nodeType": "YulLiteral",
																									"src": "16872:1:21",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16852:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "16852:3:21"
																							},
																							"nativeSrc": "16852:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "16852:22:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16839:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16839:6:21"
																					},
																					"nativeSrc": "16839:36:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16839:36:21"
																				},
																				"nativeSrc": "16839:36:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "16839:36:21"
																			}
																		]
																	},
																	"nativeSrc": "16236:649:21",
																	"nodeType": "YulCase",
																	"src": "16236:649:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16241:1:21",
																		"nodeType": "YulLiteral",
																		"src": "16241:1:21",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16902:234:21",
																		"nodeType": "YulBlock",
																		"src": "16902:234:21",
																		"statements": [
																			{
																				"nativeSrc": "16916:14:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16916:14:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16929:1:21",
																					"nodeType": "YulLiteral",
																					"src": "16929:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "16920:5:21",
																						"nodeType": "YulTypedName",
																						"src": "16920:5:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16965:67:21",
																					"nodeType": "YulBlock",
																					"src": "16965:67:21",
																					"statements": [
																						{
																							"nativeSrc": "16983:35:21",
																							"nodeType": "YulAssignment",
																							"src": "16983:35:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17002:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "17002:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17007:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "17007:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16998:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "16998:3:21"
																										},
																										"nativeSrc": "16998:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "16998:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16992:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "16992:5:21"
																								},
																								"nativeSrc": "16992:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "16992:26:21"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16983:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "16983:5:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "16946:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "16946:6:21"
																				},
																				"nativeSrc": "16943:89:21",
																				"nodeType": "YulIf",
																				"src": "16943:89:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17052:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "17052:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17111:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "17111:5:21"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17118:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "17118:6:21"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17058:52:21",
																								"nodeType": "YulIdentifier",
																								"src": "17058:52:21"
																							},
																							"nativeSrc": "17058:67:21",
																							"nodeType": "YulFunctionCall",
																							"src": "17058:67:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17045:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "17045:6:21"
																					},
																					"nativeSrc": "17045:81:21",
																					"nodeType": "YulFunctionCall",
																					"src": "17045:81:21"
																				},
																				"nativeSrc": "17045:81:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "17045:81:21"
																			}
																		]
																	},
																	"nativeSrc": "16894:242:21",
																	"nodeType": "YulCase",
																	"src": "16894:242:21",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16216:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "16216:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16224:2:21",
																		"nodeType": "YulLiteral",
																		"src": "16224:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16213:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "16213:2:21"
																},
																"nativeSrc": "16213:14:21",
																"nodeType": "YulFunctionCall",
																"src": "16213:14:21"
															},
															"nativeSrc": "16206:930:21",
															"nodeType": "YulSwitch",
															"src": "16206:930:21"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "15843:1299:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15924:4:21",
														"nodeType": "YulTypedName",
														"src": "15924:4:21",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "15930:3:21",
														"nodeType": "YulTypedName",
														"src": "15930:3:21",
														"type": ""
													}
												],
												"src": "15843:1299:21"
											},
											{
												"body": {
													"nativeSrc": "17276:145:21",
													"nodeType": "YulBlock",
													"src": "17276:145:21",
													"statements": [
														{
															"nativeSrc": "17286:26:21",
															"nodeType": "YulAssignment",
															"src": "17286:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17298:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "17298:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17309:2:21",
																		"nodeType": "YulLiteral",
																		"src": "17309:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17294:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17294:3:21"
																},
																"nativeSrc": "17294:18:21",
																"nodeType": "YulFunctionCall",
																"src": "17294:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17286:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "17286:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17328:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "17328:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17343:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "17343:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17359:3:21",
																								"nodeType": "YulLiteral",
																								"src": "17359:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17364:1:21",
																								"nodeType": "YulLiteral",
																								"src": "17364:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "17355:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "17355:3:21"
																						},
																						"nativeSrc": "17355:11:21",
																						"nodeType": "YulFunctionCall",
																						"src": "17355:11:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17368:1:21",
																						"nodeType": "YulLiteral",
																						"src": "17368:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17351:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "17351:3:21"
																				},
																				"nativeSrc": "17351:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "17351:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17339:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "17339:3:21"
																		},
																		"nativeSrc": "17339:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "17339:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17321:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17321:6:21"
																},
																"nativeSrc": "17321:51:21",
																"nodeType": "YulFunctionCall",
																"src": "17321:51:21"
															},
															"nativeSrc": "17321:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "17321:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17392:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "17392:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17403:2:21",
																				"nodeType": "YulLiteral",
																				"src": "17403:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17388:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "17388:3:21"
																		},
																		"nativeSrc": "17388:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "17388:18:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17408:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "17408:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17381:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17381:6:21"
																},
																"nativeSrc": "17381:34:21",
																"nodeType": "YulFunctionCall",
																"src": "17381:34:21"
															},
															"nativeSrc": "17381:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "17381:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17147:274:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17237:9:21",
														"nodeType": "YulTypedName",
														"src": "17237:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17248:6:21",
														"nodeType": "YulTypedName",
														"src": "17248:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17256:6:21",
														"nodeType": "YulTypedName",
														"src": "17256:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17267:4:21",
														"nodeType": "YulTypedName",
														"src": "17267:4:21",
														"type": ""
													}
												],
												"src": "17147:274:21"
											},
											{
												"body": {
													"nativeSrc": "17563:164:21",
													"nodeType": "YulBlock",
													"src": "17563:164:21",
													"statements": [
														{
															"nativeSrc": "17573:27:21",
															"nodeType": "YulVariableDeclaration",
															"src": "17573:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17593:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "17593:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17587:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "17587:5:21"
																},
																"nativeSrc": "17587:13:21",
																"nodeType": "YulFunctionCall",
																"src": "17587:13:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17577:6:21",
																	"nodeType": "YulTypedName",
																	"src": "17577:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17615:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "17615:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17624:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "17624:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17632:4:21",
																				"nodeType": "YulLiteral",
																				"src": "17632:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17620:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "17620:3:21"
																		},
																		"nativeSrc": "17620:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "17620:17:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17639:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "17639:6:21"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "17609:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "17609:5:21"
																},
																"nativeSrc": "17609:37:21",
																"nodeType": "YulFunctionCall",
																"src": "17609:37:21"
															},
															"nativeSrc": "17609:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "17609:37:21"
														},
														{
															"nativeSrc": "17655:26:21",
															"nodeType": "YulVariableDeclaration",
															"src": "17655:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17669:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "17669:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17674:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "17674:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17665:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17665:3:21"
																},
																"nativeSrc": "17665:16:21",
																"nodeType": "YulFunctionCall",
																"src": "17665:16:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "17659:2:21",
																	"nodeType": "YulTypedName",
																	"src": "17659:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "17697:2:21",
																		"nodeType": "YulIdentifier",
																		"src": "17697:2:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17701:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17701:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17690:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17690:6:21"
																},
																"nativeSrc": "17690:13:21",
																"nodeType": "YulFunctionCall",
																"src": "17690:13:21"
															},
															"nativeSrc": "17690:13:21",
															"nodeType": "YulExpressionStatement",
															"src": "17690:13:21"
														},
														{
															"nativeSrc": "17712:9:21",
															"nodeType": "YulAssignment",
															"src": "17712:9:21",
															"value": {
																"name": "_1",
																"nativeSrc": "17719:2:21",
																"nodeType": "YulIdentifier",
																"src": "17719:2:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17712:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17712:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17426:301:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17539:3:21",
														"nodeType": "YulTypedName",
														"src": "17539:3:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17544:6:21",
														"nodeType": "YulTypedName",
														"src": "17544:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17555:3:21",
														"nodeType": "YulTypedName",
														"src": "17555:3:21",
														"type": ""
													}
												],
												"src": "17426:301:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 0x20)\n        value1 := length\n        let value := 0\n        value := calldataload(add(headStart, 0x20))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Empty accounts array\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid limit\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Batch size too large\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid account in batch\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid sender address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid transfer amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Sender not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Recipient not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid account address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid mint amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e039e896b666aadb82976a4fad223163b0be195242fbcf4255e53d4f2a4e4aa0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid burn address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_26c54b3e13aa2dfe42517d4e33d479520cac47dc66cf13820ed08a9ade960c6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid burn amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid implementation address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"650": [
									{
										"length": 32,
										"start": 7128
									},
									{
										"length": 32,
										"start": 7169
									},
									{
										"length": 32,
										"start": 7608
									}
								],
								"2939": [
									{
										"length": 32,
										"start": 864
									},
									{
										"length": 32,
										"start": 1490
									},
									{
										"length": 32,
										"start": 4085
									},
									{
										"length": 32,
										"start": 6178
									},
									{
										"length": 32,
										"start": 6227
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101f1575f3560e01c806352d1902d11610108578063a217fddf1161009d578063d547741f1161006d578063d547741f14610564578063dd62ed3e14610583578063e43252d7146105a2578063ec81b483146105c1578063f76e95e5146105f4575f5ffd5b8063a217fddf146104e3578063a9059cbb146104f6578063ad3cb1cc14610515578063bfab3b9e14610545575f5ffd5b80638ab1d681116100d85780638ab1d6811461047257806391d148541461049157806395d89b41146104b05780639dc29fac146104c4575f5ffd5b806352d1902d146104085780635c975abb1461041c57806370a082311461043f5780638456cb591461045e575f5ffd5b80632913daa01161018957806336568abe1161015957806336568abe146103845780633af32abf146103a35780633f4ba83a146103c257806340c10f19146103d65780634f1ef286146103f5575f5ffd5b80632913daa0146103055780632f2ff15d14610318578063313ce56714610337578063355274ea14610352575f5ffd5b80631663a066116101c45780631663a0661461028a57806318160ddd146102a957806323b872dd146102c7578063248a9ca3146102e6575f5ffd5b806301ffc9a7146101f557806306fdde0314610229578063077f224a1461024a578063095ea7b31461026b575b5f5ffd5b348015610200575f5ffd5b5061021461020f36600461235b565b610608565b60405190151581526020015b60405180910390f35b348015610234575f5ffd5b5061023d61063e565b6040516102209190612382565b348015610255575f5ffd5b50610269610264366004612417565b6106fe565b005b348015610276575f5ffd5b50610214610285366004612497565b610a0f565b348015610295575f5ffd5b506102696102a43660046124bf565b610a26565b3480156102b4575f5ffd5b506001545b604051908152602001610220565b3480156102d2575f5ffd5b506102146102e136600461253c565b610c1f565b3480156102f1575f5ffd5b506102b9610300366004612576565b610de5565b348015610310575f5ffd5b5060646102b9565b348015610323575f5ffd5b5061026961033236600461258d565b610e05565b348015610342575f5ffd5b5060405160128152602001610220565b34801561035d575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006102b9565b34801561038f575f5ffd5b5061026961039e36600461258d565b610e27565b3480156103ae575f5ffd5b506102146103bd3660046125b7565b610e5f565b3480156103cd575f5ffd5b50610269610ea4565b3480156103e1575f5ffd5b506102696103f0366004612497565b610f03565b6102696104033660046125e4565b6110ba565b348015610413575f5ffd5b506102b96110d5565b348015610427575f5ffd5b505f516020612a015f395f51905f525460ff16610214565b34801561044a575f5ffd5b506102b96104593660046125b7565b6110f0565b348015610469575f5ffd5b50610269611116565b34801561047d575f5ffd5b5061026961048c3660046125b7565b611175565b34801561049c575f5ffd5b506102146104ab36600461258d565b6111ff565b3480156104bb575f5ffd5b5061023d611235565b3480156104cf575f5ffd5b506102696104de366004612497565b611273565b3480156104ee575f5ffd5b506102b95f81565b348015610501575f5ffd5b50610214610510366004612497565b611403565b348015610520575f5ffd5b5061023d604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610550575f5ffd5b5061026961055f3660046124bf565b611568565b34801561056f575f5ffd5b5061026961057e36600461258d565b611727565b34801561058e575f5ffd5b506102b961059d3660046126a8565b611743565b3480156105ad575f5ffd5b506102696105bc3660046125b7565b61178c565b3480156105cc575f5ffd5b506102b97f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ff575f5ffd5b506102b961181b565b5f6001600160e01b03198216637965db0b60e01b148061063857506301ffc9a760e01b6001600160e01b03198316145b92915050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f5160206129815f395f51905f529161067c906126d0565b80601f01602080910402602001604051908101604052809291908181526020018280546106a8906126d0565b80156106f35780601f106106ca576101008083540402835291602001916106f3565b820191905f5260205f20905b8154815290600101906020018083116106d657829003601f168201915b505050505091505090565b5f61070761187d565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561072e5750825b90505f8267ffffffffffffffff16600114801561074a5750303b155b905081158015610758575080155b156107765760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107a057845460ff60401b1916600160401b1785555b6001600160a01b0386166107f35760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b60448201526064015b60405180910390fd5b6108648a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f920191909152506118a592505050565b61086c6118b7565b6108746118b7565b61087c6118c1565b6108846118b7565b61088e5f876118d1565b506108b97f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122876118d1565b506108d15f5160206129c15f395f51905f52876118d1565b506108fc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a876118d1565b506109277f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3876118d1565b506001600160a01b0386165f81815260208190526040808220805460ff1916600190811790915590519092917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91a3856001600160a01b03167f2583210d6110b6d11e7775956ed0bea544d92d3760073450942661b4264863658b8b8b8b6040516109b59493929190612730565b60405180910390a28315610a0357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b5f33610a1c818585611972565b5060019392505050565b5f5160206129c15f395f51905f52610a3d8161197f565b835f819003610a855760405162461bcd60e51b8152602060048201526014602482015273456d707479206163636f756e747320617272617960601b60448201526064016107ea565b825f03610ac45760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b1a5b5a5d609a1b60448201526064016107ea565b610ad060646001612775565b8310610b155760405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b60448201526064016107ea565b5f610b208486612775565b9050610b2d826001612775565b8110610b365750805b845b81811015610be1575f888883818110610b5357610b53612788565b9050602002016020810190610b6891906125b7565b90506001600160a01b038116610bbb5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d60431b60448201526064016107ea565b6001600160a01b03165f908152602081905260409020805460ff19169055600101610b38565b50610bec858261279c565b60405186907f3838459cd794256a3c29bb3186da72029a8036c0f596fee1bd526f8eb9493d41905f90a350505050505050565b5f610c2861198c565b6001600160a01b038416610c775760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656e646572206164647265737360501b60448201526064016107ea565b6001600160a01b038316610c9d5760405162461bcd60e51b81526004016107ea906127af565b815f03610ce65760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d604a1b60448201526064016107ea565b6001600160a01b038085165f9081526020819052604080822054928616825290205460ff918216911681610d555760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016107ea565b80610d725760405162461bcd60e51b81526004016107ea906127e6565b33610d7e8782876119bc565b610d89878787611a1a565b856001600160a01b0316876001600160a01b03167fd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de687604051610dce91815260200190565b60405180910390a3600193505050505b9392505050565b5f9081525f5160206129e15f395f51905f52602052604090206001015490565b610e0e82610de5565b610e178161197f565b610e2183836118d1565b50505050565b6001600160a01b0381163314610e505760405163334bd91960e11b815260040160405180910390fd5b610e5a8282611a77565b505050565b5f6001600160a01b038216610e865760405162461bcd60e51b81526004016107ea9061281d565b506001600160a01b03165f9081526020819052604090205460ff1690565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610ece8161197f565b610ed6611af0565b60405133907f5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d11766905f90a250565b610f0b611b4f565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122610f358161197f565b610f3d61198c565b6001600160a01b038316610f635760405162461bcd60e51b81526004016107ea906127af565b815f03610fa85760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b5a5b9d08185b5bdd5b9d606a1b60448201526064016107ea565b6001600160a01b0383165f9081526020819052604090205460ff1680610fe05760405162461bcd60e51b81526004016107ea906127e6565b6001545f610fee8583612775565b905061101b7f00000000000000000000000000000000000000000000000000000000000000006001612775565b81106110585760405162461bcd60e51b815260206004820152600c60248201526b10d85c08195e18d95959195960a21b60448201526064016107ea565b60018190556110678686611b86565b60405185906001600160a01b038816907f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273905f90a3505050506110b660015f516020612a215f395f51905f5255565b5050565b6110c2611bcd565b6110cb82611c71565b6110b68282611cf1565b5f6110de611dad565b505f5160206129a15f395f51905f5290565b6001600160a01b03165f9081525f5160206129815f395f51905f52602052604090205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6111408161197f565b611148611df6565b60405133907f81990fd9a5c552b8e3677917d8a03c07678f0d2cb68f88b634aca2022e9bd19f905f90a250565b5f5160206129c15f395f51905f5261118c8161197f565b6001600160a01b0382166111b25760405162461bcd60e51b81526004016107ea9061281d565b6001600160a01b0382165f81815260208190526040808220805460ff19169055519091907ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d908390a35050565b5f9182525f5160206129e15f395f51905f52602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f5160206129815f395f51905f529161067c906126d0565b61127b611b4f565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa1226112a58161197f565b6112ad61198c565b6001600160a01b0383166112fa5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206275726e206164647265737360601b60448201526064016107ea565b815f0361133f5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908189d5c9b88185b5bdd5b9d606a1b60448201526064016107ea565b5f611349846110f0565b905061135660018461279c565b811161139b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ea565b6001546113a8848261279c565b6001556113b58585611e3e565b60405184906001600160a01b038716907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6905f90a35050506110b660015f516020612a215f395f51905f5255565b5f61140c61198c565b6001600160a01b0383166114325760405162461bcd60e51b81526004016107ea906127af565b815f0361147b5760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081d1c985b9cd9995c88185b5bdd5b9d604a1b60448201526064016107ea565b335f81815260208190526040808220546001600160a01b038716835291205460ff9182169116816114e75760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016107ea565b806115045760405162461bcd60e51b81526004016107ea906127e6565b61150f838787611a1a565b856001600160a01b0316836001600160a01b03167fd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de68760405161155491815260200190565b60405180910390a350600195945050505050565b5f5160206129c15f395f51905f5261157f8161197f565b835f8190036115c75760405162461bcd60e51b8152602060048201526014602482015273456d707479206163636f756e747320617272617960601b60448201526064016107ea565b825f036116065760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b1a5b5a5d609a1b60448201526064016107ea565b61161260646001612775565b83106116575760405162461bcd60e51b815260206004820152601460248201527342617463682073697a6520746f6f206c6172676560601b60448201526064016107ea565b5f6116628486612775565b905061166f826001612775565b81106116785750805b845b81811015610be1575f88888381811061169557611695612788565b90506020020160208101906116aa91906125b7565b90506001600160a01b0381166116fd5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840c2c6c6deeadce840d2dc40c4c2e8c6d60431b60448201526064016107ea565b6001600160a01b03165f908152602081905260409020805460ff191660019081179091550161167a565b61173082610de5565b6117398161197f565b610e218383611a77565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b5f5160206129c15f395f51905f526117a38161197f565b6001600160a01b0382166117c95760405162461bcd60e51b81526004016107ea9061281d565b6001600160a01b0382165f81815260208190526040808220805460ff1916600190811790915590519092917ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91a35050565b6001545f907f0000000000000000000000000000000000000000000000000000000000000000811061184d575f611877565b611877817f000000000000000000000000000000000000000000000000000000000000000061279c565b91505090565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610638565b6118ad611e72565b6110b68282611e97565b6118bf611e72565b565b6118c9611e72565b6118bf611ee7565b5f5f5160206129e15f395f51905f526118ea84846111ff565b611969575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561191f3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610638565b5f915050610638565b610e5a8383836001611eef565b6119898133611fd3565b50565b5f516020612a015f395f51905f525460ff16156118bf5760405163d93c066560e01b815260040160405180910390fd5b5f6119c78484611743565b90505f19811015610e215781811015611a0c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107ea565b610e2184848484035f611eef565b6001600160a01b038316611a4357604051634b637e8f60e11b81525f60048201526024016107ea565b6001600160a01b038216611a6c5760405163ec442f0560e01b81525f60048201526024016107ea565b610e5a83838361200c565b5f5f5160206129e15f395f51905f52611a9084846111ff565b15611969575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610638565b611af8612145565b5f516020612a015f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f516020612a215f395f51905f52805460011901611b8057604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600160a01b038216611baf5760405163ec442f0560e01b81525f60048201526024016107ea565b6110b65f838361200c565b60015f516020612a215f395f51905f5255565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611c5357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611c475f5160206129a15f395f51905f52546001600160a01b031690565b6001600160a01b031614155b156118bf5760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611c9b8161197f565b6001600160a01b0382166110b65760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064016107ea565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611d4b575060408051601f3d908101601f19168201909252611d4891810190612854565b60015b611d7357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107ea565b5f5160206129a15f395f51905f528114611da357604051632a87526960e21b8152600481018290526024016107ea565b610e5a8383612174565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118bf5760405163703e46dd60e11b815260040160405180910390fd5b611dfe61198c565b5f516020612a015f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611b31565b6001600160a01b038216611e6757604051634b637e8f60e11b81525f60048201526024016107ea565b6110b6825f8361200c565b611e7a6121c9565b6118bf57604051631afcd79f60e31b815260040160405180910390fd5b611e9f611e72565b5f5160206129815f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611ed884826128af565b5060048101610e2183826128af565b611bba611e72565b5f5160206129815f395f51905f526001600160a01b038516611f265760405163e602df0560e01b81525f60048201526024016107ea565b6001600160a01b038416611f4f57604051634a1406b160e11b81525f60048201526024016107ea565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611fcc57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611fc391815260200190565b60405180910390a35b5050505050565b611fdd82826111ff565b6110b65760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107ea565b5f5160206129815f395f51905f526001600160a01b0384166120465781816002015f82825461203b9190612775565b909155506120b69050565b6001600160a01b0384165f90815260208290526040902054828110156120985760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016107ea565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b0383166120d45760028101805483900390556120f2565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161213791815260200190565b60405180910390a350505050565b5f516020612a015f395f51905f525460ff166118bf57604051638dfc202b60e01b815260040160405180910390fd5b61217d826121e2565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156121c157610e5a8282612245565b6110b66122b7565b5f6121d261187d565b54600160401b900460ff16919050565b806001600160a01b03163b5f0361221757604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107ea565b5f5160206129a15f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051612261919061296a565b5f60405180830381855af49150503d805f8114612299576040519150601f19603f3d011682016040523d82523d5f602084013e61229e565b606091505b50915091506122ae8583836122d6565b95945050505050565b34156118bf5760405163b398979f60e01b815260040160405180910390fd5b6060826122eb576122e682612332565b610dde565b815115801561230257506001600160a01b0384163b155b1561232b57604051639996b31560e01b81526001600160a01b03851660048201526024016107ea565b5080610dde565b8051156123425780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f6020828403121561236b575f5ffd5b81356001600160e01b031981168114610dde575f5ffd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f83601f8401126123c7575f5ffd5b50813567ffffffffffffffff8111156123de575f5ffd5b6020830191508360208285010111156123f5575f5ffd5b9250929050565b80356001600160a01b0381168114612412575f5ffd5b919050565b5f5f5f5f5f6060868803121561242b575f5ffd5b853567ffffffffffffffff811115612441575f5ffd5b61244d888289016123b7565b909650945050602086013567ffffffffffffffff81111561246c575f5ffd5b612478888289016123b7565b909450925061248b9050604087016123fc565b90509295509295909350565b5f5f604083850312156124a8575f5ffd5b6124b1836123fc565b946020939093013593505050565b5f5f5f5f606085870312156124d2575f5ffd5b843567ffffffffffffffff8111156124e8575f5ffd5b8501601f810187136124f8575f5ffd5b803567ffffffffffffffff81111561250e575f5ffd5b8760208260051b8401011115612522575f5ffd5b602091820198909750908601359560400135945092505050565b5f5f5f6060848603121561254e575f5ffd5b612557846123fc565b9250612565602085016123fc565b929592945050506040919091013590565b5f60208284031215612586575f5ffd5b5035919050565b5f5f6040838503121561259e575f5ffd5b823591506125ae602084016123fc565b90509250929050565b5f602082840312156125c7575f5ffd5b610dde826123fc565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156125f5575f5ffd5b6125fe836123fc565b9150602083013567ffffffffffffffff811115612619575f5ffd5b8301601f81018513612629575f5ffd5b803567ffffffffffffffff811115612643576126436125d0565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612672576126726125d0565b604052818152828201602001871015612689575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f604083850312156126b9575f5ffd5b6126c2836123fc565b91506125ae602084016123fc565b600181811c908216806126e457607f821691505b60208210810361270257634e487b7160e01b5f52602260045260245ffd5b50919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f612743604083018688612708565b8281036020840152612756818587612708565b979650505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561063857610638612761565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561063857610638612761565b60208082526019908201527f496e76616c696420726563697069656e74206164647265737300000000000000604082015260600190565b60208082526019908201527f526563697069656e74206e6f742077686974656c697374656400000000000000604082015260600190565b60208082526017908201527f496e76616c6964206163636f756e742061646472657373000000000000000000604082015260600190565b5f60208284031215612864575f5ffd5b5051919050565b601f821115610e5a57805f5260205f20601f840160051c810160208510156128905750805b601f840160051c820191505b81811015611fcc575f815560010161289c565b815167ffffffffffffffff8111156128c9576128c96125d0565b6128dd816128d784546126d0565b8461286b565b6020601f82116001811461290f575f83156128f85750848201515b5f19600385901b1c1916600184901b178455611fcc565b5f84815260208120601f198516915b8281101561293e578785015182556020948501946001909201910161291e565b508482101561295b57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee698502dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220f7c2954de56edf05d76f88f580037602b591bc93ef1a94ba39479acd75e7e8a564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xEC81B483 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xF76E95E5 EQ PUSH2 0x5F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xBFAB3B9E EQ PUSH2 0x545 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8AB1D681 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x45E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2913DAA0 GT PUSH2 0x189 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2913DAA0 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1663A066 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x1663A066 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x235B JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x2382 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x253C JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x2576 JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x2B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0xEA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x10D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x1116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x1175 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x1235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1403 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x181B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x638 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x67C SWAP1 PUSH2 0x26D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x707 PUSH2 0x187D JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x72E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x74A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x7A0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x864 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x18A5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x874 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x884 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x88E PUSH0 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8B9 PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8D1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH2 0x927 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x18D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 LOG3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2583210D6110B6D11E7775956ED0BEA544D92D3760073450942661B426486365 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x9B5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 ISZERO PUSH2 0xA03 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA1C DUP2 DUP6 DUP6 PUSH2 0x1972 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0xA3D DUP2 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH0 DUP2 SWAP1 SUB PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D707479206163636F756E7473206172726179 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xAD0 PUSH1 0x64 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP4 LT PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42617463682073697A6520746F6F206C61726765 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0xB20 DUP5 DUP7 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2D DUP3 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0xB36 JUMPI POP DUP1 JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI PUSH0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0x2788 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xB38 JUMP JUMPDEST POP PUSH2 0xBEC DUP6 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH32 0x3838459CD794256A3C29BB3186DA72029A8036C0F596FEE1BD526F8EB9493D41 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642073656E6465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND DUP2 PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST CALLER PUSH2 0xD7E DUP8 DUP3 DUP8 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xD89 DUP8 DUP8 DUP8 PUSH2 0x1A1A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDCE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE0E DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE21 DUP4 DUP4 PUSH2 0x18D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5A DUP3 DUP3 PUSH2 0x1A77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xECE DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x5B65B0C1363B3003DB9BCC5E1FD8805A6D6BF5BF6DC9D3431EE4494CD7D11766 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xF0B PUSH2 0x1B4F JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0xF35 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081B5A5B9D08185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 PUSH2 0xFEE DUP6 DUP4 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0x101B PUSH32 0x0 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10D85C08195E18D959591959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x1067 DUP7 DUP7 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP POP PUSH2 0x10B6 PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10C2 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x10CB DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH2 0x1CF1 JUMP JUMPDEST PUSH0 PUSH2 0x10DE PUSH2 0x1DAD JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1140 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1148 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x81990FD9A5C552B8E3677917D8A03C07678F0D2CB68F88B634ACA2022E9BD19F SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x118C DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP1 DUP4 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x67C SWAP1 PUSH2 0x26D0 JUMP JUMPDEST PUSH2 0x127B PUSH2 0x1B4F JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0x12A5 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206275726E2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908189D5C9B88185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0x1349 DUP5 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1356 PUSH1 0x1 DUP5 PUSH2 0x279C JUMP JUMPDEST DUP2 GT PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13A8 DUP5 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x13B5 DUP6 DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP PUSH2 0x10B6 PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x140C PUSH2 0x198C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 AND DUP2 PUSH2 0x14E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH2 0x150F DUP4 DUP8 DUP8 PUSH2 0x1A1A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1554 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x157F DUP2 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH0 DUP2 SWAP1 SUB PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D707479206163636F756E7473206172726179 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x1612 PUSH1 0x64 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP4 LT PUSH2 0x1657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42617463682073697A6520746F6F206C61726765 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH2 0x1662 DUP5 DUP7 PUSH2 0x2775 JUMP JUMPDEST SWAP1 POP PUSH2 0x166F DUP3 PUSH1 0x1 PUSH2 0x2775 JUMP JUMPDEST DUP2 LT PUSH2 0x1678 JUMPI POP DUP1 JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI PUSH0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1695 JUMPI PUSH2 0x1695 PUSH2 0x2788 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADD PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1730 DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x1739 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE21 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29C1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH32 0x0 DUP2 LT PUSH2 0x184D JUMPI PUSH0 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x1877 DUP2 PUSH32 0x0 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x18AD PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x18BF PUSH2 0x1E72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x18BF PUSH2 0x1EE7 JUMP JUMPDEST PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x18EA DUP5 DUP5 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1969 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x191F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1989 DUP2 CALLER PUSH2 0x1FD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19C7 DUP5 DUP5 PUSH2 0x1743 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE21 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE21 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29E1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x1A90 DUP5 DUP5 PUSH2 0x11FF JUMP JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST PUSH2 0x1AF8 PUSH2 0x2145 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x10B6 PUSH0 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A21 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1C53 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C47 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1C9B DUP2 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696D706C656D656E746174696F6E20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2854 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0xE5A DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DFE PUSH2 0x198C JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x10B6 DUP3 PUSH0 DUP4 PUSH2 0x200C JUMP JUMPDEST PUSH2 0x1E7A PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E9F PUSH2 0x1E72 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1ED8 DUP5 DUP3 PUSH2 0x28AF JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0xE21 DUP4 DUP3 PUSH2 0x28AF JUMP JUMPDEST PUSH2 0x1BBA PUSH2 0x1E72 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1F26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1FCC JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FC3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FDD DUP3 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2981 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2046 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x203B SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x20B6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2098 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20D4 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2137 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2A01 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217D DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21C1 JUMPI PUSH2 0xE5A DUP3 DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x10B6 PUSH2 0x22B7 JUMP JUMPDEST PUSH0 PUSH2 0x21D2 PUSH2 0x187D JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x2217 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x29A1 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2299 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x229E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x22AE DUP6 DUP4 DUP4 PUSH2 0x22D6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x22EB JUMPI PUSH2 0x22E6 DUP3 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2302 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EA JUMP JUMPDEST POP DUP1 PUSH2 0xDDE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2342 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x23F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2412 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x242B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x244D DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x246C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2478 DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x248B SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x24B1 DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x24F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x250E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x2522 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP9 SWAP1 SWAP8 POP SWAP1 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x254E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2557 DUP5 PUSH2 0x23FC JUMP JUMPDEST SWAP3 POP PUSH2 0x2565 PUSH1 0x20 DUP6 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2586 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x259E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x25AE PUSH1 0x20 DUP5 ADD PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDDE DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x25FE DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2643 JUMPI PUSH2 0x2643 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2672 JUMPI PUSH2 0x2672 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2689 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x26C2 DUP4 PUSH2 0x23FC JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE PUSH1 0x20 DUP5 ADD PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x2743 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x2708 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2756 DUP2 DUP6 DUP8 PUSH2 0x2708 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x2761 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x526563697069656E74206E6F742077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206163636F756E742061646472657373000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE5A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2890 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FCC JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x289C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C9 JUMPI PUSH2 0x28C9 PUSH2 0x25D0 JUMP JUMPDEST PUSH2 0x28DD DUP2 PUSH2 0x28D7 DUP5 SLOAD PUSH2 0x26D0 JUMP JUMPDEST DUP5 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x290F JUMPI PUSH0 DUP4 ISZERO PUSH2 0x28F8 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1FCC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x293E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x291E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x295B JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE STOP CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC442A94F1A1FAC79AF32856 0xAF 0x2A PUSH5 0xF63648CFA2 0xEF EXTCODESIZE SWAP9 PUSH2 0xA5B 0xB7 0xCB EOFCREATE 0x4C RETURNCONTRACT 0x69 DUP6 MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xCD MCOPY DATALOADN 0x5C6E XOR PUSH31 0x77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F033009B779B17422D 0xD EXTDELEGATECALL 0x22 0x23 ADD DUP12 ORIGIN 0xB4 DATALOADN 0xFA46 RJUMP 0x7172 RETURNDATASIZE PUSH9 0x17E2486D003BECC55F STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC2 SWAP6 0x4D JUMPF 0x6EDF SDIV 0xD7 PUSH16 0x88F580037602B591BC93EF1A94BA3947 SWAP11 0xCD PUSH22 0xE7E8A564736F6C634300081E00330000000000000000 ",
							"sourceMap": "1094:20020:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:21;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7241:920:20:-;;;;;;;;;;-1:-1:-1;7241:920:20;;;;;:::i;:::-;;:::i;:::-;;5191:186:3;;;;;;;;;;-1:-1:-1;5191:186:3;;;;;:::i;:::-;;:::i;16343:1170:20:-;;;;;;;;;;-1:-1:-1;16343:1170:20;;;;;:::i;:::-;;:::i;19556:100::-;;;;;;;;;;-1:-1:-1;19635:14:20;;19556:100;;;3552:25:21;;;3540:2;3525:18;19556:100:20;3406:177:21;12250:930:20;;;;;;;;;;-1:-1:-1;12250:930:20;;;;;:::i;:::-;;:::i;4759:191:0:-;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;20035:90:20:-;;;;;;;;;;-1:-1:-1;2199:3:20;20035:90;;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;3735:82:3:-;;;;;;;;;;-1:-1:-1;3735:82:3;;3808:2;4827:36:21;;4815:2;4800:18;3735:82:3;4685:184:21;19790:74:20;;;;;;;;;;-1:-1:-1;19854:3:20;19790:74;;6348:245:0;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;18692:225:20:-;;;;;;;;;;-1:-1:-1;18692:225:20;;;;;:::i;:::-;;:::i;18183:123::-;;;;;;;;;;;;;:::i;8627:943::-;;;;;;;;;;-1:-1:-1;8627:943:20;;;;;:::i;:::-;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;2496:145:5:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:5;;;2496:145;;4087:171:3;;;;;;;;;;-1:-1:-1;4087:171:3;;;;;:::i;:::-;;:::i;17881:117:20:-;;;;;;;;;;;;;:::i;14100:370::-;;;;;;;;;;-1:-1:-1;14100:370:20;;;;;:::i;:::-;;:::i;3732:207:0:-;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;2954:148:3:-;;;;;;;;;;;;;:::i;9810:793:20:-;;;;;;;;;;-1:-1:-1;9810:793:20;;;;;:::i;:::-;;:::i;2317:49:0:-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;11089:812:20;;;;;;;;;;-1:-1:-1;11089:812:20;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;14822:1158:20;;;;;;;;;;-1:-1:-1;14822:1158:20;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;4689:195:3:-;;;;;;;;;;-1:-1:-1;4689:195:3;;;;;:::i;:::-;;:::i;13541:364:20:-;;;;;;;;;;-1:-1:-1;13541:364:20;;;;;:::i;:::-;;:::i;2469:28::-;;;;;;;;;;;;;;;19086:296;;;;;;;;;;;;;:::i;3443:202:0:-;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1134:40:7;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;2697:144:3:-;2827:7;2820:14;;2742:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;2820:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;7241:920:20:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;-1:-1:-1;;;;;7437:20:20;::::1;7429:54;;;::::0;-1:-1:-1;;;7429:54:20;;7072:2:21;7429:54:20::1;::::0;::::1;7054:21:21::0;7111:2;7091:18;;;7084:30;-1:-1:-1;;;7130:18:21;;;7123:51;7191:18;;7429:54:20::1;;;;;;;;;7494:28;7507:5;;7494:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;7494:28:20::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;7514:7:20;;-1:-1:-1;7514:7:20;;;;7494:28;::::1;7514:7:::0;;;;7494:28;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;7494:12:20::1;::::0;-1:-1:-1;;;7494:28:20:i:1;:::-;7532:22;:20;:22::i;:::-;7564:17;:15;:17::i;:::-;7591:24;:22;:24::i;:::-;7625;:22;:24::i;:::-;7700:38;2362:4:0;7731:6:20::0;7700:10:::1;:38::i;:::-;;7748:32;1567:24;7773:6;7748:10;:32::i;:::-;;7790:36;-1:-1:-1::0;;;;;;;;;;;7819:6:20::1;7790:10;:36::i;:::-;;7836:32;1878:24;7861:6;7836:10;:32::i;:::-;;7878:34;2034:26;7905:6;7878:10;:34::i;:::-;-1:-1:-1::0;;;;;;8017:18:20;::::1;:10;:18:::0;;;::::1;::::0;;;;;;;:25;;-1:-1:-1;;8017:25:20::1;8038:4;8017:25:::0;;::::1;::::0;;;8066:30;;8038:4;;8017:18;8066:30:::1;::::0;::::1;8131:6;-1:-1:-1::0;;;;;8111:43:20::1;;8139:5;;8146:7;;8111:43;;;;;;;;;:::i;:::-;;;;;;;;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;8087:50:21;;5140:14:1;;8075:2:21;8060:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;7241:920:20;;;;;:::o;5191:186:3:-;5264:4;966:10:4;5318:31:3;966:10:4;5334:7:3;5343:5;5318:8;:31::i;:::-;-1:-1:-1;5366:4:3;;5191:186;-1:-1:-1;;;5191:186:3:o;16343:1170:20:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;16592:9:20;16567:22:::1;16626:19:::0;;;16618:52:::1;;;::::0;-1:-1:-1;;;16618:52:20;;8350:2:21;16618:52:20::1;::::0;::::1;8332:21:21::0;8389:2;8369:18;;;8362:30;-1:-1:-1;;;8408:18:21;;;8401:50;8468:18;;16618:52:20::1;8148:344:21::0;16618:52:20::1;16688:6;16698:1;16688:11:::0;16680:37:::1;;;::::0;-1:-1:-1;;;16680:37:20;;8699:2:21;16680:37:20::1;::::0;::::1;8681:21:21::0;8738:2;8718:18;;;8711:30;-1:-1:-1;;;8757:18:21;;;8750:43;8810:18;;16680:37:20::1;8497:337:21::0;16680:37:20::1;16814:14;2199:3;16827:1;16814:14;:::i;:::-;16805:6;:23;16797:56;;;::::0;-1:-1:-1;;;16797:56:20;;9303:2:21;16797:56:20::1;::::0;::::1;9285:21:21::0;9342:2;9322:18;;;9315:30;-1:-1:-1;;;9361:18:21;;;9354:50;9421:18;;16797:56:20::1;9101:344:21::0;16797:56:20::1;16872:11;16886:16;16896:6:::0;16886:7;:16:::1;:::i;:::-;16872:30:::0;-1:-1:-1;16992:18:20::1;:14:::0;17009:1:::1;16992:18;:::i;:::-;16985:3;:25;16981:76;;-1:-1:-1::0;17032:14:20;16981:76:::1;17103:7:::0;17086:335:::1;17116:3;17112:1;:7;17086:335;;;17136:15;17154:9;;17164:1;17154:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17136:30:::0;-1:-1:-1;;;;;;17235:21:20;::::1;17227:58;;;::::0;-1:-1:-1;;;17227:58:20;;9784:2:21;17227:58:20::1;::::0;::::1;9766:21:21::0;9823:2;9803:18;;;9796:30;-1:-1:-1;;;9842:18:21;;;9835:54;9906:18;;17227:58:20::1;9582:348:21::0;17227:58:20::1;-1:-1:-1::0;;;;;17319:19:20::1;:10;:19:::0;;;::::1;::::0;;;;;;17312:26;;-1:-1:-1;;17312:26:20::1;::::0;;;17393:3:::1;17086:335;;;-1:-1:-1::0;17492:13:20::1;17498:7:::0;17492:3;:13:::1;:::i;:::-;17468:38;::::0;17483:7;;17468:38:::1;::::0;;;::::1;16506:1007;;16343:1170:::0;;;;;:::o;12250:930::-;12392:4;1979:19:5;:17;:19::i;:::-;-1:-1:-1;;;;;12464:19:20;::::1;12456:54;;;::::0;-1:-1:-1;;;12456:54:20;;10270:2:21;12456:54:20::1;::::0;::::1;10252:21:21::0;10309:2;10289:18;;;10282:30;-1:-1:-1;;;10328:18:21;;;10321:52;10390:18;;12456:54:20::1;10068:346:21::0;12456:54:20::1;-1:-1:-1::0;;;;;12528:17:20;::::1;12520:55;;;;-1:-1:-1::0;;;12520:55:20::1;;;;;;;:::i;:::-;12593:7;12604:1;12593:12:::0;12585:48:::1;;;::::0;-1:-1:-1;;;12585:48:20;;10975:2:21;12585:48:20::1;::::0;::::1;10957:21:21::0;11014:2;10994:18;;;10987:30;-1:-1:-1;;;11033:18:21;;;11026:53;11096:18;;12585:48:20::1;10773:347:21::0;12585:48:20::1;-1:-1:-1::0;;;;;12737:17:20;;::::1;12714:20;12737:17:::0;;;::::1;::::0;;;;;;;;12785:15;;::::1;::::0;;;;;12737:17:::1;::::0;;::::1;::::0;12785:15:::1;12737:17:::0;12819:50:::1;;;::::0;-1:-1:-1;;;12819:50:20;;11327:2:21;12819:50:20::1;::::0;::::1;11309:21:21::0;11366:2;11346:18;;;11339:30;-1:-1:-1;;;11385:18:21;;;11378:52;11447:18;;12819:50:20::1;11125:346:21::0;12819:50:20::1;12887:13;12879:51;;;;-1:-1:-1::0;;;12879:51:20::1;;;;;;;:::i;:::-;966:10:4::0;13023:40:20::1;13039:5:::0;966:10:4;13055:7:20;13023:15:::1;:40::i;:::-;13073:30;13083:5;13090:3;13095:7;13073:9;:30::i;:::-;13139:3;-1:-1:-1::0;;;;;13118:34:20::1;13132:5;-1:-1:-1::0;;;;;13118:34:20::1;;13144:7;13118:34;;;;3552:25:21::0;;3540:2;3525:18;;3406:177;13118:34:20::1;;;;;;;;13169:4;13162:11;;;;;2008:1:5;12250:930:20::0;;;;;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:4;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;18692:225:20:-;18756:4;-1:-1:-1;;;;;18823:22:20;;18815:58;;;;-1:-1:-1;;;18815:58:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;;18890:20:20;:10;:20;;;;;;;;;;;;;;18692:225::o;18183:123::-;1878:24;3191:16:0;3202:4;3191:10;:16::i;:::-;18244:10:20::1;:8;:10::i;:::-;18269:30;::::0;966:10:4;;18269:30:20::1;::::0;;;::::1;18183:123:::0;:::o;8627:943::-;3395:21:6;:19;:21::i;:::-;1567:24:20::1;3191:16:0;3202:4;3191:10;:16::i;:::-;1979:19:5::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;8831:17:20;::::3;8823:55;;;;-1:-1:-1::0;;;8823:55:20::3;;;;;;;:::i;:::-;8896:7;8907:1;8896:12:::0;8888:44:::3;;;::::0;-1:-1:-1;;;8888:44:20;;12384:2:21;8888:44:20::3;::::0;::::3;12366:21:21::0;12423:2;12403:18;;;12396:30;-1:-1:-1;;;12442:18:21;;;12435:49;12501:18;;8888:44:20::3;12182:343:21::0;8888:44:20::3;-1:-1:-1::0;;;;;9033:15:20;::::3;9012:18;9033:15:::0;;;::::3;::::0;;;;;;;::::3;;::::0;9058:51:::3;;;;-1:-1:-1::0;;;9058:51:20::3;;;;;;;:::i;:::-;9212:14;::::0;9187:22:::3;9256:24;9273:7:::0;9212:14;9256:24:::3;:::i;:::-;9236:44:::0;-1:-1:-1;9380:7:20::3;:3;9386:1;9380:7;:::i;:::-;9368:9;:19;9360:44;;;::::0;-1:-1:-1;;;9360:44:20;;12732:2:21;9360:44:20::3;::::0;::::3;12714:21:21::0;12771:2;12751:18;;;12744:30;-1:-1:-1;;;12790:18:21;;;12783:42;12842:18;;9360:44:20::3;12530:336:21::0;9360:44:20::3;9434:14;:26:::0;;;9470:19:::3;9476:3:::0;9481:7;9470:5:::3;:19::i;:::-;9537:26;::::0;9555:7;;-1:-1:-1;;;;;9537:26:20;::::3;::::0;::::3;::::0;;;::::3;8770:800;;;3426:1:6::1;3437:20:::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:6;3860:283;3437:20;8627:943:20;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;3708:134::-:0;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;4087:171:3:-;-1:-1:-1;;;;;4231:20:3;4152:7;4231:20;;;-1:-1:-1;;;;;;;;;;;4231:20:3;;;;;;;4087:171::o;17881:117:20:-;1878:24;3191:16:0;3202:4;3191:10;:16::i;:::-;17940:8:20::1;:6;:8::i;:::-;17963:28;::::0;966:10:4;;17963:28:20::1;::::0;;;::::1;17881:117:::0;:::o;14100:370::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;14267:22:20;::::1;14259:58;;;;-1:-1:-1::0;;;14259:58:20::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14362:20:20;::::1;:10;:20:::0;;;::::1;::::0;;;;;;;14355:27;;-1:-1:-1;;14355:27:20::1;::::0;;14430:33;14362:10;;:20;14430:33:::1;::::0;14362:10;;14430:33:::1;14100:370:::0;;:::o;3732:207:0:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;2954:148:3:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;3079:16;;;:::i;9810:793:20:-;3395:21:6;:19;:21::i;:::-;1567:24:20::1;3191:16:0;3202:4;3191:10;:16::i;:::-;1979:19:5::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;10016:19:20;::::3;10008:52;;;::::0;-1:-1:-1;;;10008:52:20;;13073:2:21;10008:52:20::3;::::0;::::3;13055:21:21::0;13112:2;13092:18;;;13085:30;-1:-1:-1;;;13131:18:21;;;13124:50;13191:18;;10008:52:20::3;12871:344:21::0;10008:52:20::3;10078:7;10089:1;10078:12:::0;10070:44:::3;;;::::0;-1:-1:-1;;;10070:44:20;;13422:2:21;10070:44:20::3;::::0;::::3;13404:21:21::0;13461:2;13441:18;;;13434:30;-1:-1:-1;;;13480:18:21;;;13473:49;13539:18;;10070:44:20::3;13220:343:21::0;10070:44:20::3;10133:15;10151:16;10161:5;10151:9;:16::i;:::-;10133:34:::0;-1:-1:-1;10265:11:20::3;10275:1;10265:7:::0;:11:::3;:::i;:::-;10255:7;:21;10247:54;;;::::0;-1:-1:-1;;;10247:54:20;;13770:2:21;10247:54:20::3;::::0;::::3;13752:21:21::0;13809:2;13789:18;;;13782:30;-1:-1:-1;;;13828:18:21;;;13821:50;13888:18;;10247:54:20::3;13568:344:21::0;10247:54:20::3;10396:14;::::0;10465:24:::3;10482:7:::0;10396:14;10465:24:::3;:::i;:::-;10448:14;:41:::0;10499:21:::3;10505:5:::0;10512:7;10499:5:::3;:21::i;:::-;10568:28;::::0;10588:7;;-1:-1:-1;;;;;10568:28:20;::::3;::::0;::::3;::::0;;;::::3;9955:648;;3426:1:6::1;3437:20:::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:6;3860:283;11089:812:20;11212:4;1979:19:5;:17;:19::i;:::-;-1:-1:-1;;;;;11284:17:20;::::1;11276:55;;;;-1:-1:-1::0;;;11276:55:20::1;;;;;;;:::i;:::-;11349:7;11360:1;11349:12:::0;11341:48:::1;;;::::0;-1:-1:-1;;;11341:48:20;;10975:2:21;11341:48:20::1;::::0;::::1;10957:21:21::0;11014:2;10994:18;;;10987:30;-1:-1:-1;;;11033:18:21;;;11026:53;11096:18;;11341:48:20::1;10773:347:21::0;11341:48:20::1;966:10:4::0;11408:14:20::1;11543:18:::0;;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;11592:15:20;::::1;::::0;;;;;11543:18:::1;::::0;;::::1;::::0;11592:15:::1;11543:18:::0;11626:52:::1;;;::::0;-1:-1:-1;;;11626:52:20;;11327:2:21;11626:52:20::1;::::0;::::1;11309:21:21::0;11366:2;11346:18;;;11339:30;-1:-1:-1;;;11385:18:21;;;11378:52;11447:18;;11626:52:20::1;11125:346:21::0;11626:52:20::1;11696:13;11688:51;;;;-1:-1:-1::0;;;11688:51:20::1;;;;;;;:::i;:::-;11792:31;11802:6;11810:3;11815:7;11792:9;:31::i;:::-;11860:3;-1:-1:-1::0;;;;;11838:35:20::1;11852:6;-1:-1:-1::0;;;;;11838:35:20::1;;11865:7;11838:35;;;;3552:25:21::0;;3540:2;3525:18;;3406:177;11838:35:20::1;;;;;;;;-1:-1:-1::0;11890:4:20::1;::::0;11089:812;-1:-1:-1;;;;;11089:812:20:o;14822:1158::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;15059:9:20;15034:22:::1;15093:19:::0;;;15085:52:::1;;;::::0;-1:-1:-1;;;15085:52:20;;8350:2:21;15085:52:20::1;::::0;::::1;8332:21:21::0;8389:2;8369:18;;;8362:30;-1:-1:-1;;;8408:18:21;;;8401:50;8468:18;;15085:52:20::1;8148:344:21::0;15085:52:20::1;15155:6;15165:1;15155:11:::0;15147:37:::1;;;::::0;-1:-1:-1;;;15147:37:20;;8699:2:21;15147:37:20::1;::::0;::::1;8681:21:21::0;8738:2;8718:18;;;8711:30;-1:-1:-1;;;8757:18:21;;;8750:43;8810:18;;15147:37:20::1;8497:337:21::0;15147:37:20::1;15281:14;2199:3;15294:1;15281:14;:::i;:::-;15272:6;:23;15264:56;;;::::0;-1:-1:-1;;;15264:56:20;;9303:2:21;15264:56:20::1;::::0;::::1;9285:21:21::0;9342:2;9322:18;;;9315:30;-1:-1:-1;;;9361:18:21;;;9354:50;9421:18;;15264:56:20::1;9101:344:21::0;15264:56:20::1;15339:11;15353:16;15363:6:::0;15353:7;:16:::1;:::i;:::-;15339:30:::0;-1:-1:-1;15459:18:20::1;:14:::0;15476:1:::1;15459:18;:::i;:::-;15452:3;:25;15448:76;;-1:-1:-1::0;15499:14:20;15448:76:::1;15570:7:::0;15553:335:::1;15583:3;15579:1;:7;15553:335;;;15603:15;15621:9;;15631:1;15621:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15603:30:::0;-1:-1:-1;;;;;;15702:21:20;::::1;15694:58;;;::::0;-1:-1:-1;;;15694:58:20;;9784:2:21;15694:58:20::1;::::0;::::1;9766:21:21::0;9823:2;9803:18;;;9796:30;-1:-1:-1;;;9842:18:21;;;9835:54;9906:18;;15694:58:20::1;9582:348:21::0;15694:58:20::1;-1:-1:-1::0;;;;;15779:19:20::1;:10;:19:::0;;;::::1;::::0;;;;;;:26;;-1:-1:-1;;15779:26:20::1;15801:4;15779:26:::0;;::::1;::::0;;;15860:3:::1;15553:335;;5662:138:0::0;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4689:195:3:-:0;-1:-1:-1;;;;;4848:20:3;;;4769:7;4848:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4689:195::o;13541:364:20:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;13703:22:20;::::1;13695:58;;;;-1:-1:-1::0;;;13695:58:20::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13791:20:20;::::1;:10;:20:::0;;;::::1;::::0;;;;;;;:27;;-1:-1:-1;;13791:27:20::1;13814:4;13791:27:::0;;::::1;::::0;;;13866:32;;13814:4;;13791:20;13866:32:::1;::::0;::::1;13541:364:::0;;:::o;19086:296::-;19241:14;;19138:7;;19328:3;:20;-1:-1:-1;19328:47:20;;19374:1;19328:47;;;19351:20;19357:14;19351:3;:20;:::i;:::-;19321:54;;;19086:296;:::o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2263:147:3;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;3231:65:0:-:0;6929:20:1;:18;:20::i;:::-;3231:65:0:o;2684:111:6:-;6929:20:1;:18;:20::i;:::-;2754:34:6::1;:32;:34::i;7270:387:0:-:0;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:4;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;9982:128:3;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;4148:103:0:-;4214:30;4225:4;966:10:4;4214::0;:30::i;:::-;4148:103;:::o;2709:128:5:-;-1:-1:-1;;;;;;;;;;;2625:9:5;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:5;;;;;;;;;;;11726:476:3;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;-1:-1:-1;;11891:16:3;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;11998:60;;-1:-1:-1;;;11998:60:3;;-1:-1:-1;;;;;14137:32:21;;11998:60:3;;;14119:51:21;14186:18;;;14179:34;;;14229:18;;;14222:34;;;14092:18;;11998:60:3;13917:345:21;11943:130:3;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;6586:300::-;-1:-1:-1;;;;;6669:18:3;;6665:86;;6710:30;;-1:-1:-1;;;6710:30:3;;6737:1;6710:30;;;14413:51:21;14386:18;;6710:30:3;14267:203:21;6665:86:3;-1:-1:-1;;;;;6764:16:3;;6760:86;;6803:32;;-1:-1:-1;;;6803:32:3;;6832:1;6803:32;;;14413:51:21;14386:18;;6803:32:3;14267:203:21;6760:86:3;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;7894:388:0:-;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:0;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:0;;;;;;;;;;:39;;-1:-1:-1;;8099:39:0;;;8157:40;966:10:4;;8099:14:0;;8157:40;;8133:5;8157:40;8218:4;8211:11;;;;;3478:178:5;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:5;;-1:-1:-1;;3595:17:5::1;::::0;;3627:22:::1;966:10:4::0;3636:12:5::1;3627:22;::::0;-1:-1:-1;;;;;14431:32:21;;;14413:51;;14401:2;14386:18;3627:22:5::1;;;;;;;3526:130;3478:178::o:0;3470:384:6:-;-1:-1:-1;;;;;;;;;;;3670:9:6;;-1:-1:-1;;3670:20:6;3666:88;;3713:30;;-1:-1:-1;;;3713:30:6;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;8714:208:3:-;-1:-1:-1;;;;;8784:21:3;;8780:91;;8828:32;;-1:-1:-1;;;8828:32:3;;8857:1;8828:32;;;14413:51:21;14386:18;;8828:32:3;14267:203:21;8780:91:3;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;3860:283:6:-;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:6;3860:283::o;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:12;-1:-1:-1;;;;;1519:53:12;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;20526:279:20;2034:26;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;20731:32:20;::::1;20723:75;;;::::0;-1:-1:-1;;;20723:75:20;;14677:2:21;20723:75:20::1;::::0;::::1;14659:21:21::0;14716:2;14696:18;;;14689:30;14755:32;14735:18;;;14728:60;14805:18;;20723:75:20::1;14475:354:21::0;6032:538:2;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;14431:32:21;;6493:60:2;;;14413:51:21;14386:18;;6493:60:2;14267:203:21;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;3552:25:21;;;3525:18;;6292:34:2;3406:177:21;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;3170:176:5;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:5;;-1:-1:-1;;3288:16:5::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:4::0;3326:12:5::1;887:96:4::0;9240:206:3;-1:-1:-1;;;;;9310:21:3;;9306:89;;9354:30;;-1:-1:-1;;;9354:30:3;;9381:1;9354:30;;;14413:51:21;14386:18;;9354:30:3;14267:203:21;9306:89:3;9404:35;9412:7;9429:1;9433:5;9404:7;:35::i;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2416:216:3;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:3;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:3::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;2801:183:6:-:0;6929:20:1;:18;:20::i;10957:487:3:-;-1:-1:-1;;;;;;;;;;;;;;;;11122:19:3;;11118:89;;11164:32;;-1:-1:-1;;;11164:32:3;;11193:1;11164:32;;;14413:51:21;14386:18;;11164:32:3;14267:203:21;11118:89:3;-1:-1:-1;;;;;11220:21:3;;11216:90;;11264:31;;-1:-1:-1;;;11264:31:3;;11292:1;11264:31;;;14413:51:21;14386:18;;11264:31:3;14267:203:21;11216:90:3;-1:-1:-1;;;;;11315:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11362:76;;;;11412:7;-1:-1:-1;;;;;11396:31:3;11405:5;-1:-1:-1;;;;;11396:31:3;;11421:5;11396:31;;;;3552:25:21;;3540:2;3525:18;;3406:177;11396:31:3;;;;;;;;11362:76;11055:389;10957:487;;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;17339:32:21;;4514:47:0;;;17321:51:21;17388:18;;;17381:34;;;17294:18;;4514:47:0;17147:274:21;7201:1170:3;-1:-1:-1;;;;;;;;;;;;;;;;7343:18:3;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7339:546:3;;-1:-1:-1;7339:546:3;;-1:-1:-1;;;;;7555:17:3;;7533:19;7555:17;;;;;;;;;;;7590:19;;;7586:115;;;7636:50;;-1:-1:-1;;;7636:50:3;;-1:-1:-1;;;;;14137:32:21;;7636:50:3;;;14119:51:21;14186:18;;;14179:34;;;14229:18;;;14222:34;;;14092:18;;7636:50:3;13917:345:21;7586:115:3;-1:-1:-1;;;;;7821:17:3;;:11;:17;;;;;;;;;;7841:19;;;;7821:39;;7339:546;-1:-1:-1;;;;;7899:16:3;;7895:429;;8062:14;;;:23;;;;;;;7895:429;;;-1:-1:-1;;;;;8275:15:3;;:11;:15;;;;;;;;;;:24;;;;;;7895:429;8354:2;-1:-1:-1;;;;;8339:25:3;8348:4;-1:-1:-1;;;;;8339:25:3;;8358:5;8339:25;;;;3552::21;;3540:2;3525:18;;3406:177;8339:25:3;;;;;;;;7276:1095;7201:1170;;;:::o;2909:126:5:-;-1:-1:-1;;;;;;;;;;;2625:9:5;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:5;;;;;;;;;;;2264:344:12;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:12;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;1671:281:12:-;1748:17;-1:-1:-1;;;;;1748:29:12;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:12;;-1:-1:-1;;;;;14431:32:21;;1805:47:12;;;14413:51:21;14386:18;;1805:47:12;14267:203:21;1744:119:12;-1:-1:-1;;;;;;;;;;;1872:73:12;;-1:-1:-1;;;;;;1872:73:12;-1:-1:-1;;;;;1872:73:12;;;;;;;;;;1671:281::o;3916:253:16:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:16;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:16:o;6113:122:12:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:12;;;;;;;;;;;4437:582:16;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:16;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:16;;-1:-1:-1;;;;;14431:32:21;;4933:24:16;;;14413:51:21;14386:18;;4933:24:16;14267:203:21;4853:119:16;-1:-1:-1;4992:10:16;4985:17;;5559:487;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:16;;;;;;;;;;;14:286:21;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:21;;209:43;;199:71;;266:1;263;256:12;497:418;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;780:6;775:2;767:6;763:15;758:2;747:9;743:18;737:50;836:1;831:2;822:6;811:9;807:22;803:31;796:42;906:2;899;895:7;890:2;882:6;878:15;874:29;863:9;859:45;855:54;847:62;;;497:418;;;;:::o;920:348::-;972:8;982:6;1036:3;1029:4;1021:6;1017:17;1013:27;1003:55;;1054:1;1051;1044:12;1003:55;-1:-1:-1;1077:20:21;;1120:18;1109:30;;1106:50;;;1152:1;1149;1142:12;1106:50;1189:4;1181:6;1177:17;1165:29;;1241:3;1234:4;1225:6;1217;1213:19;1209:30;1206:39;1203:59;;;1258:1;1255;1248:12;1203:59;920:348;;;;;:::o;1273:173::-;1341:20;;-1:-1:-1;;;;;1390:31:21;;1380:42;;1370:70;;1436:1;1433;1426:12;1370:70;1273:173;;;:::o;1451:790::-;1552:6;1560;1568;1576;1584;1637:2;1625:9;1616:7;1612:23;1608:32;1605:52;;;1653:1;1650;1643:12;1605:52;1693:9;1680:23;1726:18;1718:6;1715:30;1712:50;;;1758:1;1755;1748:12;1712:50;1797:59;1848:7;1839:6;1828:9;1824:22;1797:59;:::i;:::-;1875:8;;-1:-1:-1;1771:85:21;-1:-1:-1;;1963:2:21;1948:18;;1935:32;1992:18;1979:32;;1976:52;;;2024:1;2021;2014:12;1976:52;2063:61;2116:7;2105:8;2094:9;2090:24;2063:61;:::i;:::-;2143:8;;-1:-1:-1;2037:87:21;-1:-1:-1;2197:38:21;;-1:-1:-1;2231:2:21;2216:18;;2197:38;:::i;:::-;2187:48;;1451:790;;;;;;;;:::o;2246:300::-;2314:6;2322;2375:2;2363:9;2354:7;2350:23;2346:32;2343:52;;;2391:1;2388;2381:12;2343:52;2414:29;2433:9;2414:29;:::i;:::-;2404:39;2512:2;2497:18;;;;2484:32;;-1:-1:-1;;;2246:300:21:o;2551:850::-;2655:6;2663;2671;2679;2732:2;2720:9;2711:7;2707:23;2703:32;2700:52;;;2748:1;2745;2738:12;2700:52;2788:9;2775:23;2821:18;2813:6;2810:30;2807:50;;;2853:1;2850;2843:12;2807:50;2876:22;;2929:4;2921:13;;2917:27;-1:-1:-1;2907:55:21;;2958:1;2955;2948:12;2907:55;2998:2;2985:16;3024:18;3016:6;3013:30;3010:50;;;3056:1;3053;3046:12;3010:50;3111:7;3104:4;3094:6;3091:1;3087:14;3083:2;3079:23;3075:34;3072:47;3069:67;;;3132:1;3129;3122:12;3069:67;3163:4;3155:13;;;;3187:6;;-1:-1:-1;3247:20:21;;;3234:34;;3365:2;3350:18;3337:32;;-1:-1:-1;2551:850:21;-1:-1:-1;;;2551:850:21:o;3588:374::-;3665:6;3673;3681;3734:2;3722:9;3713:7;3709:23;3705:32;3702:52;;;3750:1;3747;3740:12;3702:52;3773:29;3792:9;3773:29;:::i;:::-;3763:39;;3821:38;3855:2;3844:9;3840:18;3821:38;:::i;:::-;3588:374;;3811:48;;-1:-1:-1;;;3928:2:21;3913:18;;;;3900:32;;3588:374::o;3967:226::-;4026:6;4079:2;4067:9;4058:7;4054:23;4050:32;4047:52;;;4095:1;4092;4085:12;4047:52;-1:-1:-1;4140:23:21;;3967:226;-1:-1:-1;3967:226:21:o;4380:300::-;4448:6;4456;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4570:23;;;-1:-1:-1;4636:38:21;4670:2;4655:18;;4636:38;:::i;:::-;4626:48;;4380:300;;;;;:::o;4874:186::-;4933:6;4986:2;4974:9;4965:7;4961:23;4957:32;4954:52;;;5002:1;4999;4992:12;4954:52;5025:29;5044:9;5025:29;:::i;5065:127::-;5126:10;5121:3;5117:20;5114:1;5107:31;5157:4;5154:1;5147:15;5181:4;5178:1;5171:15;5197:1018;5274:6;5282;5335:2;5323:9;5314:7;5310:23;5306:32;5303:52;;;5351:1;5348;5341:12;5303:52;5374:29;5393:9;5374:29;:::i;:::-;5364:39;;5454:2;5443:9;5439:18;5426:32;5481:18;5473:6;5470:30;5467:50;;;5513:1;5510;5503:12;5467:50;5536:22;;5589:4;5581:13;;5577:27;-1:-1:-1;5567:55:21;;5618:1;5615;5608:12;5567:55;5658:2;5645:16;5684:18;5676:6;5673:30;5670:56;;;5706:18;;:::i;:::-;5755:2;5749:9;5847:2;5809:17;;-1:-1:-1;;5805:31:21;;;5838:2;5801:40;5797:54;5785:67;;5882:18;5867:34;;5903:22;;;5864:62;5861:88;;;5929:18;;:::i;:::-;5965:2;5958:22;5989;;;6030:15;;;6047:2;6026:24;6023:37;-1:-1:-1;6020:57:21;;;6073:1;6070;6063:12;6020:57;6129:6;6124:2;6120;6116:11;6111:2;6103:6;6099:15;6086:50;6182:1;6177:2;6168:6;6160;6156:19;6152:28;6145:39;6203:6;6193:16;;;;;5197:1018;;;;;:::o;6220:260::-;6288:6;6296;6349:2;6337:9;6328:7;6324:23;6320:32;6317:52;;;6365:1;6362;6355:12;6317:52;6388:29;6407:9;6388:29;:::i;:::-;6378:39;;6436:38;6470:2;6459:9;6455:18;6436:38;:::i;6485:380::-;6564:1;6560:12;;;;6607;;;6628:61;;6682:4;6674:6;6670:17;6660:27;;6628:61;6735:2;6727:6;6724:14;6704:18;6701:38;6698:161;;6781:10;6776:3;6772:20;6769:1;6762:31;6816:4;6813:1;6806:15;6844:4;6841:1;6834:15;6698:161;;6485:380;;;:::o;7220:267::-;7309:6;7304:3;7297:19;7361:6;7354:5;7347:4;7342:3;7338:14;7325:43;-1:-1:-1;7413:1:21;7388:16;;;7406:4;7384:27;;;7377:38;;;;7469:2;7448:15;;;-1:-1:-1;;7444:29:21;7435:39;;;7431:50;;7220:267::o;7492:437::-;7709:2;7698:9;7691:21;7672:4;7735:62;7793:2;7782:9;7778:18;7770:6;7762;7735:62;:::i;:::-;7845:9;7837:6;7833:22;7828:2;7817:9;7813:18;7806:50;7873;7916:6;7908;7900;7873:50;:::i;:::-;7865:58;7492:437;-1:-1:-1;;;;;;;7492:437:21:o;8839:127::-;8900:10;8895:3;8891:20;8888:1;8881:31;8931:4;8928:1;8921:15;8955:4;8952:1;8945:15;8971:125;9036:9;;;9057:10;;;9054:36;;;9070:18;;:::i;9450:127::-;9511:10;9506:3;9502:20;9499:1;9492:31;9542:4;9539:1;9532:15;9566:4;9563:1;9556:15;9935:128;10002:9;;;10023:11;;;10020:37;;;10037:18;;:::i;10419:349::-;10621:2;10603:21;;;10660:2;10640:18;;;10633:30;10699:27;10694:2;10679:18;;10672:55;10759:2;10744:18;;10419:349::o;11476:::-;11678:2;11660:21;;;11717:2;11697:18;;;11690:30;11756:27;11751:2;11736:18;;11729:55;11816:2;11801:18;;11476:349::o;11830:347::-;12032:2;12014:21;;;12071:2;12051:18;;;12044:30;12110:25;12105:2;12090:18;;12083:53;12168:2;12153:18;;11830:347::o;14834:184::-;14904:6;14957:2;14945:9;14936:7;14932:23;14928:32;14925:52;;;14973:1;14970;14963:12;14925:52;-1:-1:-1;14996:16:21;;14834:184;-1:-1:-1;14834:184:21:o;15149:518::-;15251:2;15246:3;15243:11;15240:421;;;15287:5;15284:1;15277:16;15331:4;15328:1;15318:18;15401:2;15389:10;15385:19;15382:1;15378:27;15372:4;15368:38;15437:4;15425:10;15422:20;15419:47;;;-1:-1:-1;15460:4:21;15419:47;15515:2;15510:3;15506:12;15503:1;15499:20;15493:4;15489:31;15479:41;;15570:81;15588:2;15581:5;15578:13;15570:81;;;15647:1;15633:16;;15614:1;15603:13;15570:81;;15843:1299;15969:3;15963:10;15996:18;15988:6;15985:30;15982:56;;;16018:18;;:::i;:::-;16047:97;16137:6;16097:38;16129:4;16123:11;16097:38;:::i;:::-;16091:4;16047:97;:::i;:::-;16193:4;16224:2;16213:14;;16241:1;16236:649;;;;16929:1;16946:6;16943:89;;;-1:-1:-1;16998:19:21;;;16992:26;16943:89;-1:-1:-1;;15800:1:21;15796:11;;;15792:24;15788:29;15778:40;15824:1;15820:11;;;15775:57;17045:81;;16206:930;;16236:649;15096:1;15089:14;;;15133:4;15120:18;;-1:-1:-1;;16272:20:21;;;16390:222;16404:7;16401:1;16398:14;16390:222;;;16486:19;;;16480:26;16465:42;;16593:4;16578:20;;;;16546:1;16534:14;;;;16420:12;16390:222;;;16394:3;16640:6;16631:7;16628:19;16625:201;;;16701:19;;;16695:26;-1:-1:-1;;16784:1:21;16780:14;;;16796:3;16776:24;16772:37;16768:42;16753:58;16738:74;;16625:201;-1:-1:-1;;;;16872:1:21;16856:14;;;16852:22;16839:36;;-1:-1:-1;15843:1299:21:o;17426:301::-;17555:3;17593:6;17587:13;17639:6;17632:4;17624:6;17620:17;17615:3;17609:37;17701:1;17665:16;;17690:13;;;-1:-1:-1;17665:16:21;17426:301;-1:-1:-1;17426:301:21:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2174000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CAP()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "238",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"batchRemoveFromWhitelist(address[],uint256,uint256)": "infinite",
								"burn(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "266",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(string,string,address)": "infinite",
								"isWhitelisted(address)": "2656",
								"maxBatchSize()": "237",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "infinite",
								"processBatch(address[],uint256,uint256)": "infinite",
								"proxiableUUID()": "infinite",
								"remainingMintable()": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceRole(bytes32,address)": "29131",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "470",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "C0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "PUSHSIZE",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "CODESIZE",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 6478,
									"end": 6709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6478,
									"end": 6709,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6530,
									"end": 6534,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6538,
									"end": 6539,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6530,
									"end": 6539,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "125B9D985B1A590818D85C08185B5BDD5B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 21,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 456,
									"end": 504,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 521,
									"end": 539,
									"name": "PUSH",
									"source": 21,
									"value": "64"
								},
								{
									"begin": 521,
									"end": 539,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "tag",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 6522,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6572,
									"end": 6582,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 6572,
									"end": 6582,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 6701,
									"end": 6702,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6684,
									"end": 6702,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6684,
									"end": 6702,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "9"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 21,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 203,
									"end": 545,
									"name": "tag",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 203,
									"end": 545,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2939"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "650"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 21114,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7c2954de56edf05d76f88f580037602b591bc93ef1a94ba39479acd75e7e8a564736f6c634300081e0033",
									".code": [
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "52D1902D"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "DD62ED3E"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "E43252D7"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "EC81B483"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "F76E95E5"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "AD3CB1CC"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "BFAB3B9E"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "8AB1D681"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "8AB1D681"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "95D89B41"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "9DC29FAC"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "52D1902D"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "5C975ABB"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "70A08231"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "8456CB59"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "2913DAA0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "3AF32ABF"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "3F4BA83A"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "40C10F19"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "4F1EF286"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "2913DAA0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "2F2FF15D"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "313CE567"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "355274EA"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "1663A066"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "1663A066"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "18160DDD"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "1FFC9A7"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "6FDDE03"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "77F224A"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "95EA7B3"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 21114,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "tag",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "tag",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "57"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 7241,
											"end": 8161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "tag",
											"source": 20,
											"value": "57"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 7241,
											"end": 8161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "tag",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "tag",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "68"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 16343,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "tag",
											"source": 20,
											"value": "68"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 16343,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "tag",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19635,
											"end": 19649,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 19635,
											"end": 19649,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19556,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "tag",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "79"
										},
										{
											"begin": 12250,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "tag",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 12250,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "tag",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "89"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "tag",
											"source": 20,
											"value": "89"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 20035,
											"end": 20125,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4827,
											"end": 4863,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4827,
											"end": 4863,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4685,
											"end": 4869,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "tag",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "tag",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19854,
											"end": 19857,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2939"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 19790,
											"end": 19864,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "tag",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 18692,
											"end": 18917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "tag",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 18692,
											"end": 18917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "tag",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "tag",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 18183,
											"end": 18306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "tag",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "tag",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 8627,
											"end": 9570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "tag",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "123"
										},
										{
											"begin": 8627,
											"end": 9570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2496,
											"end": 2641,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "tag",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 17881,
											"end": 17998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 14100,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "tag",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "147"
										},
										{
											"begin": 14100,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "tag",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 9810,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 9810,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "165"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "tag",
											"source": 20,
											"value": "165"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 11089,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "tag",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 11089,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "tag",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "tag",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "176"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 14822,
											"end": 15980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "tag",
											"source": 20,
											"value": "176"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "177"
										},
										{
											"begin": 14822,
											"end": 15980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "188"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "tag",
											"source": 20,
											"value": "188"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "190"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 13541,
											"end": 13905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "tag",
											"source": 20,
											"value": "190"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 13541,
											"end": 13905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "tag",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2939"
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2497,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "tag",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 19086,
											"end": 19382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7437,
											"end": 7457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7483,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7429,
											"end": 7483,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7429,
											"end": 7483,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7054,
											"end": 7075,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7111,
											"end": 7113,
											"name": "PUSH",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7084,
											"end": 7114,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646D696E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7123,
											"end": 7174,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7429,
											"end": 7483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 7507,
											"end": 7512,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 7507,
											"end": 7512,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP15",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP13",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP13",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7521,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7494,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7494,
											"end": 7522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 7494,
											"end": 7522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7532,
											"end": 7554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 7532,
											"end": 7552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 7532,
											"end": 7554,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7532,
											"end": 7554,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 7532,
											"end": 7554,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7564,
											"end": 7581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 7564,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 7564,
											"end": 7581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7564,
											"end": 7581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 7564,
											"end": 7581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7591,
											"end": 7615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 7591,
											"end": 7613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 7591,
											"end": 7615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7591,
											"end": 7615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 7591,
											"end": 7615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7625,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 7625,
											"end": 7647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 7625,
											"end": 7649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7625,
											"end": 7649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 7625,
											"end": 7649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7700,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7700,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 7700,
											"end": 7738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7700,
											"end": 7738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 7700,
											"end": 7738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7700,
											"end": 7738,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7748,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 1567,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122"
										},
										{
											"begin": 7773,
											"end": 7779,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7748,
											"end": 7758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 7748,
											"end": 7780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7748,
											"end": 7780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 7748,
											"end": 7780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7748,
											"end": 7780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7790,
											"end": 7826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "238"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7819,
											"end": 7825,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7790,
											"end": 7800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 7790,
											"end": 7826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7790,
											"end": 7826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 7790,
											"end": 7826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7790,
											"end": 7826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 1878,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 7861,
											"end": 7867,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7836,
											"end": 7846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 7836,
											"end": 7868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7878,
											"end": 7912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 2034,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 7905,
											"end": 7911,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7878,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 7878,
											"end": 7912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7878,
											"end": 7912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 7878,
											"end": 7912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8038,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 8066,
											"end": 8096,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8066,
											"end": 8096,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8038,
											"end": 8042,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8038,
											"end": 8042,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8066,
											"end": 8096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 8066,
											"end": 8096,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8066,
											"end": 8096,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 8131,
											"end": 8137,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "2583210D6110B6D11E7775956ED0BEA544D92D3760073450942661B426486365"
										},
										{
											"begin": 8139,
											"end": 8144,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 8139,
											"end": 8144,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 8146,
											"end": 8153,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 8146,
											"end": 8153,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "242"
										},
										{
											"begin": 8111,
											"end": 8154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8111,
											"end": 8154,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 20
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8087,
											"end": 8137,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8087,
											"end": 8137,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8077,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7241,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5334,
											"end": 5341,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5318,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16601,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16567,
											"end": 16589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16626,
											"end": 16645,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16626,
											"end": 16645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16626,
											"end": 16645,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16618,
											"end": 16670,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16618,
											"end": 16670,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16618,
											"end": 16670,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16618,
											"end": 16670,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8332,
											"end": 8353,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "456D707479206163636F756E7473206172726179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8401,
											"end": 8451,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8148,
											"end": 8492,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 16618,
											"end": 16670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16688,
											"end": 16694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16698,
											"end": 16699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16688,
											"end": 16699,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16680,
											"end": 16717,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16680,
											"end": 16717,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16680,
											"end": 16717,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8699,
											"end": 8701,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16680,
											"end": 16717,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8681,
											"end": 8702,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 21,
											"value": "D"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8711,
											"end": 8741,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8497,
											"end": 8834,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 16680,
											"end": 16717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16814,
											"end": 16828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 2199,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 16827,
											"end": 16828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 16814,
											"end": 16828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 16814,
											"end": 16828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16814,
											"end": 16828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 16814,
											"end": 16828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16805,
											"end": 16811,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16805,
											"end": 16828,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16797,
											"end": 16853,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16797,
											"end": 16853,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16797,
											"end": 16853,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16797,
											"end": 16853,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9285,
											"end": 9306,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9315,
											"end": 9345,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42617463682073697A6520746F6F206C61726765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 9101,
											"end": 9445,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 16797,
											"end": 16853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16872,
											"end": 16883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16886,
											"end": 16902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "266"
										},
										{
											"begin": 16896,
											"end": 16902,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 16886,
											"end": 16893,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 16886,
											"end": 16902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 16886,
											"end": 16902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16886,
											"end": 16902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "266"
										},
										{
											"begin": 16886,
											"end": 16902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16872,
											"end": 16902,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16992,
											"end": 17010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 16992,
											"end": 17006,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17009,
											"end": 17010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 16992,
											"end": 17010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 16992,
											"end": 17010,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16992,
											"end": 17010,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 16992,
											"end": 17010,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16985,
											"end": 16988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16985,
											"end": 17010,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 16981,
											"end": 17057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 16981,
											"end": 17057,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17032,
											"end": 17046,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 16981,
											"end": 17057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 16981,
											"end": 17057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17103,
											"end": 17110,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17116,
											"end": 17119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17112,
											"end": 17113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17112,
											"end": 17119,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 17136,
											"end": 17151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17163,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17163,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 17164,
											"end": 17165,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 17154,
											"end": 17166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 17154,
											"end": 17166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 17154,
											"end": 17166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17136,
											"end": 17166,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17235,
											"end": 17256,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17235,
											"end": 17256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17285,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17227,
											"end": 17285,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17227,
											"end": 17285,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9784,
											"end": 9786,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17285,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9835,
											"end": 9889,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 9582,
											"end": 9930,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 17227,
											"end": 17285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17319,
											"end": 17338,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17312,
											"end": 17338,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 17312,
											"end": 17338,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 17393,
											"end": 17396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 17086,
											"end": 17421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17492,
											"end": 17505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 17498,
											"end": 17505,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 17492,
											"end": 17495,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17492,
											"end": 17505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 17492,
											"end": 17505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17492,
											"end": 17505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 17492,
											"end": 17505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17468,
											"end": 17506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17468,
											"end": 17506,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 17483,
											"end": 17490,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 17483,
											"end": 17490,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17468,
											"end": 17506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "3838459CD794256A3C29BB3186DA72029A8036C0F596FEE1BD526F8EB9493D41"
										},
										{
											"begin": 17468,
											"end": 17506,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17468,
											"end": 17506,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17468,
											"end": 17506,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17468,
											"end": 17506,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 16506,
											"end": 17513,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16506,
											"end": 17513,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16343,
											"end": 17513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "tag",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1979,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12464,
											"end": 12483,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12464,
											"end": 12483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12510,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12456,
											"end": 12510,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12456,
											"end": 12510,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12456,
											"end": 12510,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10282,
											"end": 10312,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642073656E6465722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10321,
											"end": 10373,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 10068,
											"end": 10414,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 12456,
											"end": 12510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12528,
											"end": 12545,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12528,
											"end": 12545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 12520,
											"end": 12575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 12520,
											"end": 12575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12593,
											"end": 12600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12604,
											"end": 12605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12585,
											"end": 12633,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12585,
											"end": 12633,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12585,
											"end": 12633,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10975,
											"end": 10977,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12585,
											"end": 12633,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10957,
											"end": 10978,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "PUSH",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10987,
											"end": 11017,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11026,
											"end": 11079,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 10773,
											"end": 11120,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 12585,
											"end": 12633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12714,
											"end": 12734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12785,
											"end": 12800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12737,
											"end": 12754,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12819,
											"end": 12869,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12819,
											"end": 12869,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12819,
											"end": 12869,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11327,
											"end": 11329,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12819,
											"end": 12869,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11309,
											"end": 11330,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "PUSH",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11339,
											"end": 11369,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11378,
											"end": 11430,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 11125,
											"end": 11471,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 12819,
											"end": 12869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12887,
											"end": 12900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 12879,
											"end": 12930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 12879,
											"end": 12930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13023,
											"end": 13063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 13039,
											"end": 13044,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13062,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13023,
											"end": 13038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 13023,
											"end": 13063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13023,
											"end": 13063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 13023,
											"end": 13063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13073,
											"end": 13103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 13083,
											"end": 13088,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13090,
											"end": 13093,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13095,
											"end": 13102,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13073,
											"end": 13082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 13073,
											"end": 13103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13073,
											"end": 13103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 13073,
											"end": 13103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13139,
											"end": 13142,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13137,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "D0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6"
										},
										{
											"begin": 13144,
											"end": 13151,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13152,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 13169,
											"end": 13173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 13162,
											"end": 13173,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13162,
											"end": 13173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13162,
											"end": 13173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13162,
											"end": 13173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13162,
											"end": 13173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2008,
											"end": 2009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 2008,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 13180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 18692,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18756,
											"end": 18760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18823,
											"end": 18845,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18823,
											"end": 18845,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 18815,
											"end": 18873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "tag",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 18815,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18900,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 18890,
											"end": 18910,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18692,
											"end": 18917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1878,
											"end": 1902,
											"name": "PUSH",
											"source": 20,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 18244,
											"end": 18252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 18244,
											"end": 18254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18244,
											"end": 18254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 18244,
											"end": 18254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18269,
											"end": 18299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18269,
											"end": 18299,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18269,
											"end": 18299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "5B65B0C1363B3003DB9BCC5E1FD8805A6D6BF5BF6DC9D3431EE4494CD7D11766"
										},
										{
											"begin": 18269,
											"end": 18299,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18269,
											"end": 18299,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18269,
											"end": 18299,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18269,
											"end": 18299,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18183,
											"end": 18306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "tag",
											"source": 20,
											"value": "123"
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122"
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 3202,
											"end": 3206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1979,
											"end": 1996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1979,
											"end": 1998,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8831,
											"end": 8848,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8831,
											"end": 8848,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 8823,
											"end": 8878,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 8823,
											"end": 8878,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8896,
											"end": 8903,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8907,
											"end": 8908,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8896,
											"end": 8908,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8888,
											"end": 8932,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 8932,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8888,
											"end": 8932,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12384,
											"end": 12386,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8888,
											"end": 8932,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12366,
											"end": 12387,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12396,
											"end": 12426,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081B5A5B9D08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12435,
											"end": 12484,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 12182,
											"end": 12525,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 8888,
											"end": 8932,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9012,
											"end": 9030,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 9033,
											"end": 9048,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9033,
											"end": 9048,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 9058,
											"end": 9109,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 9058,
											"end": 9109,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9212,
											"end": 9226,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 9212,
											"end": 9226,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 9187,
											"end": 9209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9280,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 9273,
											"end": 9280,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9212,
											"end": 9226,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9256,
											"end": 9280,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 9256,
											"end": 9280,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9256,
											"end": 9280,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 9256,
											"end": 9280,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9380,
											"end": 9387,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 9380,
											"end": 9383,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2939"
										},
										{
											"begin": 9386,
											"end": 9387,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 9380,
											"end": 9387,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 9380,
											"end": 9387,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9380,
											"end": 9387,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 9380,
											"end": 9387,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9368,
											"end": 9377,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9368,
											"end": 9387,
											"modifierDepth": 3,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9360,
											"end": 9404,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9360,
											"end": 9404,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9360,
											"end": 9404,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12732,
											"end": 12734,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9360,
											"end": 9404,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12714,
											"end": 12735,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12771,
											"end": 12773,
											"name": "PUSH",
											"source": 21,
											"value": "C"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12744,
											"end": 12774,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10D85C08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12790,
											"end": 12808,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 12790,
											"end": 12808,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12790,
											"end": 12808,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12783,
											"end": 12825,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12842,
											"end": 12860,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 12842,
											"end": 12860,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 12530,
											"end": 12866,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 9360,
											"end": 9404,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 9434,
											"end": 9460,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9434,
											"end": 9460,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9434,
											"end": 9460,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 9470,
											"end": 9489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 9476,
											"end": 9479,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9481,
											"end": 9488,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9470,
											"end": 9475,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 9470,
											"end": 9489,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9470,
											"end": 9489,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 9470,
											"end": 9489,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9555,
											"end": 9562,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9555,
											"end": 9562,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273"
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9537,
											"end": 9563,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 8770,
											"end": 9570,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8770,
											"end": 9570,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8770,
											"end": 9570,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8627,
											"end": 9570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "tag",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1878,
											"end": 1902,
											"name": "PUSH",
											"source": 20,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 17948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 17940,
											"end": 17946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 17940,
											"end": 17948,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17940,
											"end": 17948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 17940,
											"end": 17948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17963,
											"end": 17991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17963,
											"end": 17991,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17963,
											"end": 17991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "81990FD9A5C552B8E3677917D8A03C07678F0D2CB68F88B634ACA2022E9BD19F"
										},
										{
											"begin": 17963,
											"end": 17991,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17963,
											"end": 17991,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17963,
											"end": 17991,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17963,
											"end": 17991,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17881,
											"end": 17998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "tag",
											"source": 20,
											"value": "147"
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14267,
											"end": 14289,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14267,
											"end": 14289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 14259,
											"end": 14317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 14259,
											"end": 14317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 14355,
											"end": 14382,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14355,
											"end": 14382,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14355,
											"end": 14382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14355,
											"end": 14382,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 14430,
											"end": 14463,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14372,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14372,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14430,
											"end": 14463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 14430,
											"end": 14463,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14372,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14362,
											"end": 14372,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14430,
											"end": 14463,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "tag",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 9810,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122"
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3202,
											"end": 3206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3191,
											"end": 3207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 1979,
											"end": 1996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1979,
											"end": 1998,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 1979,
											"end": 1998,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10016,
											"end": 10035,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10016,
											"end": 10035,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10060,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10008,
											"end": 10060,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10008,
											"end": 10060,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13073,
											"end": 13075,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10008,
											"end": 10060,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13055,
											"end": 13076,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13112,
											"end": 13114,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13085,
											"end": 13115,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206275726E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13124,
											"end": 13174,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13191,
											"end": 13209,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 13191,
											"end": 13209,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 12871,
											"end": 13215,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 10008,
											"end": 10060,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10085,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10089,
											"end": 10090,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10090,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10070,
											"end": 10114,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10070,
											"end": 10114,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10070,
											"end": 10114,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13422,
											"end": 13424,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10070,
											"end": 10114,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13404,
											"end": 13425,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13461,
											"end": 13463,
											"name": "PUSH",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 13441,
											"end": 13459,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 13441,
											"end": 13459,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13441,
											"end": 13459,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13434,
											"end": 13464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908189D5C9B88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13473,
											"end": 13522,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13539,
											"end": 13557,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 13539,
											"end": 13557,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 13220,
											"end": 13563,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 10070,
											"end": 10114,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10133,
											"end": 10148,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10167,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 10161,
											"end": 10166,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10160,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 10151,
											"end": 10167,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10167,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 10151,
											"end": 10167,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10265,
											"end": 10276,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 10275,
											"end": 10276,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10265,
											"end": 10276,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 10265,
											"end": 10276,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10265,
											"end": 10276,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 10265,
											"end": 10276,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10255,
											"end": 10262,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10255,
											"end": 10276,
											"modifierDepth": 3,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10247,
											"end": 10301,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10247,
											"end": 10301,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10247,
											"end": 10301,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13770,
											"end": 13772,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10247,
											"end": 10301,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13752,
											"end": 13773,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13809,
											"end": 13811,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 13789,
											"end": 13807,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 13789,
											"end": 13807,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13789,
											"end": 13807,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13782,
											"end": 13812,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13828,
											"end": 13846,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 13828,
											"end": 13846,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13828,
											"end": 13846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13821,
											"end": 13871,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13888,
											"end": 13906,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 13888,
											"end": 13906,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 13568,
											"end": 13912,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 10247,
											"end": 10301,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10396,
											"end": 10410,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 10396,
											"end": 10410,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 10465,
											"end": 10489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 10482,
											"end": 10489,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10396,
											"end": 10410,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10465,
											"end": 10489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 10465,
											"end": 10489,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10465,
											"end": 10489,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 10465,
											"end": 10489,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10448,
											"end": 10462,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 10448,
											"end": 10489,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 10499,
											"end": 10520,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10512,
											"end": 10519,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10499,
											"end": 10504,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 10499,
											"end": 10520,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10499,
											"end": 10520,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 10499,
											"end": 10520,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10596,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10596,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 9955,
											"end": 10603,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9955,
											"end": 10603,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "tag",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1979,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11284,
											"end": 11301,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11284,
											"end": 11301,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 11276,
											"end": 11331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11349,
											"end": 11356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11360,
											"end": 11361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11389,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11341,
											"end": 11389,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11341,
											"end": 11389,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10975,
											"end": 10977,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11341,
											"end": 11389,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10957,
											"end": 10978,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "PUSH",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10987,
											"end": 11017,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1C985B9CD9995C88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11026,
											"end": 11079,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 10773,
											"end": 11120,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 11341,
											"end": 11389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11408,
											"end": 11422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11592,
											"end": 11607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11626,
											"end": 11678,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11626,
											"end": 11678,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11626,
											"end": 11678,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11327,
											"end": 11329,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11626,
											"end": 11678,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11309,
											"end": 11330,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "PUSH",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11339,
											"end": 11369,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11378,
											"end": 11430,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 11125,
											"end": 11471,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 11626,
											"end": 11678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11696,
											"end": 11709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 11688,
											"end": 11739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11688,
											"end": 11739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11792,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 11802,
											"end": 11808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11810,
											"end": 11813,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 11815,
											"end": 11822,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 11792,
											"end": 11801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 11792,
											"end": 11823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11792,
											"end": 11823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 11792,
											"end": 11823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11860,
											"end": 11863,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11852,
											"end": 11858,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "D0ED88A3F042C6BBB1E3EA406079B5F2B4B198AFCCAA535D837F4C63ABBC4DE6"
										},
										{
											"begin": 11865,
											"end": 11872,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11838,
											"end": 11873,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11890,
											"end": 11894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 11089,
											"end": 11901,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11089,
											"end": 11901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "tag",
											"source": 20,
											"value": "177"
										},
										{
											"begin": 14822,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15059,
											"end": 15068,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15034,
											"end": 15056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15112,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15093,
											"end": 15112,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15093,
											"end": 15112,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15085,
											"end": 15137,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15085,
											"end": 15137,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15085,
											"end": 15137,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 15085,
											"end": 15137,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8332,
											"end": 8353,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "456D707479206163636F756E7473206172726179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8401,
											"end": 8451,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8148,
											"end": 8492,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 15085,
											"end": 15137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15155,
											"end": 15161,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15165,
											"end": 15166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15155,
											"end": 15166,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15147,
											"end": 15184,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15147,
											"end": 15184,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15147,
											"end": 15184,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8699,
											"end": 8701,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 15147,
											"end": 15184,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8681,
											"end": 8702,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 21,
											"value": "D"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8711,
											"end": 8741,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8497,
											"end": 8834,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 15147,
											"end": 15184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15281,
											"end": 15295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 2199,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 15294,
											"end": 15295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 15281,
											"end": 15295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 15281,
											"end": 15295,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15281,
											"end": 15295,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 15281,
											"end": 15295,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15272,
											"end": 15278,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15272,
											"end": 15295,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15264,
											"end": 15320,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15264,
											"end": 15320,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15264,
											"end": 15320,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 15264,
											"end": 15320,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9285,
											"end": 9306,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9315,
											"end": 9345,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42617463682073697A6520746F6F206C61726765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 9101,
											"end": 9445,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 15264,
											"end": 15320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15339,
											"end": 15350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 15363,
											"end": 15369,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15353,
											"end": 15360,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15353,
											"end": 15369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 15353,
											"end": 15369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15353,
											"end": 15369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 15353,
											"end": 15369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15339,
											"end": 15369,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15459,
											"end": 15477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 15459,
											"end": 15473,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15476,
											"end": 15477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 15459,
											"end": 15477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 15459,
											"end": 15477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15459,
											"end": 15477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 15459,
											"end": 15477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15452,
											"end": 15455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15452,
											"end": 15477,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 15448,
											"end": 15524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 15448,
											"end": 15524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15499,
											"end": 15513,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 15448,
											"end": 15524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 15448,
											"end": 15524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15570,
											"end": 15577,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15583,
											"end": 15586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15579,
											"end": 15580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15579,
											"end": 15586,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15603,
											"end": 15618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15621,
											"end": 15630,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15630,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15631,
											"end": 15632,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 15621,
											"end": 15633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 15621,
											"end": 15633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 15621,
											"end": 15633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15603,
											"end": 15633,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15702,
											"end": 15723,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15702,
											"end": 15723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15694,
											"end": 15752,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15694,
											"end": 15752,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15694,
											"end": 15752,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9784,
											"end": 9786,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 15694,
											"end": 15752,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840C2C6C6DEEADCE840D2DC40C4C2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9835,
											"end": 9889,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 9582,
											"end": 9930,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 15694,
											"end": 15752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15798,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 15801,
											"end": 15805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15779,
											"end": 15805,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 15860,
											"end": 15863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 15553,
											"end": 15888,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13703,
											"end": 13725,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13703,
											"end": 13725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 13695,
											"end": 13753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 13695,
											"end": 13753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13791,
											"end": 13818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 13814,
											"end": 13818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13818,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 13866,
											"end": 13898,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13866,
											"end": 13898,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 13814,
											"end": 13818,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13814,
											"end": 13818,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13791,
											"end": 13811,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13866,
											"end": 13898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 13866,
											"end": 13898,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13866,
											"end": 13898,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13541,
											"end": 13905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "tag",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19241,
											"end": 19255,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 19241,
											"end": 19255,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 19138,
											"end": 19145,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19145,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19328,
											"end": 19331,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2939"
										},
										{
											"begin": 19328,
											"end": 19348,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19374,
											"end": 19375,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 19328,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19351,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 19357,
											"end": 19371,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19351,
											"end": 19354,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2939"
										},
										{
											"begin": 19351,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 19351,
											"end": 19371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19351,
											"end": 19371,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 19351,
											"end": 19371,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19321,
											"end": 19375,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19321,
											"end": 19375,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19321,
											"end": 19375,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19086,
											"end": 19382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 2754,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 2754,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10066,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 10066,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2709,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2831,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 2770,
											"end": 2831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 11862,
											"end": 11867,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11869,
											"end": 11876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 11852,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11891,
											"end": 11927,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11947,
											"end": 11963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11947,
											"end": 11971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14137,
											"end": 14169,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14137,
											"end": 14169,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14119,
											"end": 14170,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14092,
											"end": 14110,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 14092,
											"end": 14110,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 13917,
											"end": 14262,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12139,
											"end": 12155,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12139,
											"end": 12163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 12114,
											"end": 12171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 6855,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8082,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8061,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8133,
											"end": 8138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8133,
											"end": 8138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8218,
											"end": 8222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3656,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3478,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 2226,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 2226,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "tag",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3595,
											"end": 3612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3595,
											"end": 3612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3612,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 3636,
											"end": 3648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14401,
											"end": 14403,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3656,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "tag",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "544"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "tag",
											"source": 3,
											"value": "544"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8909,
											"end": 8914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 8880,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "551"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "551"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20526,
											"end": 20805,
											"name": "tag",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 20526,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "PUSH",
											"source": 20,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20731,
											"end": 20763,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20731,
											"end": 20763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20723,
											"end": 20798,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20723,
											"end": 20798,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 20723,
											"end": 20798,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14677,
											"end": 14679,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 20723,
											"end": 20798,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14659,
											"end": 14680,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14716,
											"end": 14718,
											"name": "PUSH",
											"source": 21,
											"value": "1E"
										},
										{
											"begin": 14696,
											"end": 14714,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14696,
											"end": 14714,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14696,
											"end": 14714,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14689,
											"end": 14719,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14755,
											"end": 14787,
											"name": "PUSH",
											"source": 21,
											"value": "496E76616C696420696D706C656D656E746174696F6E20616464726573730000"
										},
										{
											"begin": 14735,
											"end": 14753,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 14735,
											"end": 14753,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14735,
											"end": 14753,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14728,
											"end": 14788,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20723,
											"end": 20798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 14475,
											"end": 14829,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "561"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "563"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "561"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "564"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "564"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "570"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "570"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3346,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 3170,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1979,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "tag",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3288,
											"end": 3304,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "584"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "tag",
											"source": 3,
											"value": "584"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 9404,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "596"
										},
										{
											"begin": 2591,
											"end": 2596,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "597"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "596"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "597"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "tag",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "605"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11193,
											"end": 11194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "tag",
											"source": 3,
											"value": "605"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "607"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "tag",
											"source": 3,
											"value": "607"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "609"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11405,
											"end": 11410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11421,
											"end": 11426,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "610"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "tag",
											"source": 3,
											"value": "610"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "tag",
											"source": 3,
											"value": "609"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11055,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17339,
											"end": 17371,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17339,
											"end": 17371,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17372,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17388,
											"end": 17406,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 17388,
											"end": 17406,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17388,
											"end": 17406,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17381,
											"end": 17415,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17381,
											"end": 17415,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17381,
											"end": 17415,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17294,
											"end": 17312,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 17294,
											"end": 17312,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17147,
											"end": 17421,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "tag",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "618"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "619"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7479,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "tag",
											"source": 3,
											"value": "619"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "620"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 3,
											"value": "618"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "621"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14137,
											"end": 14169,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14137,
											"end": 14169,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14119,
											"end": 14170,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14213,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14256,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14092,
											"end": 14110,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 14092,
											"end": 14110,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 13917,
											"end": 14262,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "tag",
											"source": 3,
											"value": "621"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 3,
											"value": "620"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "623"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "624"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 3,
											"value": "623"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 3,
											"value": "624"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8354,
											"end": 8356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "625"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3577,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3406,
											"end": 3583,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "tag",
											"source": 3,
											"value": "625"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3035,
											"name": "tag",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 2909,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 2967,
											"end": 3029,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 16,
											"value": "638"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "651"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "655"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 16,
											"value": "655"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "661"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 16,
											"value": "661"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14413,
											"end": 14464,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 14267,
											"end": 14470,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "680"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 21,
											"value": "680"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"name": "tag",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 497,
											"end": 915,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 672,
											"end": 685,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 701,
											"end": 719,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 694,
											"end": 728,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 763,
											"end": 778,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 737,
											"end": 787,
											"name": "MCOPY",
											"source": 21
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 828,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 811,
											"end": 820,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 803,
											"end": 834,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 796,
											"end": 838,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 874,
											"end": 903,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 859,
											"end": 904,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 855,
											"end": 909,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 847,
											"end": 909,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 497,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "tag",
											"source": 21,
											"value": "670"
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 972,
											"end": 980,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1039,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1029,
											"end": 1033,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 1027,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1040,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "685"
										},
										{
											"begin": 1003,
											"end": 1058,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1052,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1056,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 1058,
											"name": "tag",
											"source": 21,
											"value": "685"
										},
										{
											"begin": 1003,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1120,
											"end": 1138,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1106,
											"end": 1156,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1106,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "686"
										},
										{
											"begin": 1106,
											"end": 1156,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1154,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1106,
											"end": 1156,
											"name": "tag",
											"source": 21,
											"value": "686"
										},
										{
											"begin": 1106,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1189,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1177,
											"end": 1194,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1165,
											"end": 1194,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1165,
											"end": 1194,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1241,
											"end": 1244,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1234,
											"end": 1238,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1209,
											"end": 1239,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1206,
											"end": 1245,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1203,
											"end": 1262,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1203,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "687"
										},
										{
											"begin": 1203,
											"end": 1262,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1203,
											"end": 1262,
											"name": "tag",
											"source": 21,
											"value": "687"
										},
										{
											"begin": 1203,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 920,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1273,
											"end": 1446,
											"name": "tag",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 1273,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1341,
											"end": 1361,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1341,
											"end": 1361,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1370,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "689"
										},
										{
											"begin": 1370,
											"end": 1440,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1370,
											"end": 1440,
											"name": "tag",
											"source": 21,
											"value": "689"
										},
										{
											"begin": 1370,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1273,
											"end": 1446,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1273,
											"end": 1446,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1273,
											"end": 1446,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1273,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1582,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1616,
											"end": 1623,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1635,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1605,
											"end": 1657,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1605,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "691"
										},
										{
											"begin": 1605,
											"end": 1657,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1653,
											"end": 1654,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1651,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1655,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1605,
											"end": 1657,
											"name": "tag",
											"source": 21,
											"value": "691"
										},
										{
											"begin": 1605,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1680,
											"end": 1703,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1726,
											"end": 1744,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1712,
											"end": 1762,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1712,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "692"
										},
										{
											"begin": 1712,
											"end": 1762,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1712,
											"end": 1762,
											"name": "tag",
											"source": 21,
											"value": "692"
										},
										{
											"begin": 1712,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1797,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "693"
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1828,
											"end": 1837,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 1824,
											"end": 1846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1797,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "670"
										},
										{
											"begin": 1797,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1797,
											"end": 1856,
											"name": "tag",
											"source": 21,
											"value": "693"
										},
										{
											"begin": 1797,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1856,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 1965,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1976,
											"end": 2028,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1976,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "694"
										},
										{
											"begin": 1976,
											"end": 2028,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1976,
											"end": 2028,
											"name": "tag",
											"source": 21,
											"value": "694"
										},
										{
											"begin": 1976,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "695"
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 2105,
											"end": 2113,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2094,
											"end": 2103,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 2090,
											"end": 2114,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "670"
										},
										{
											"begin": 2063,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 21,
											"value": "695"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2143,
											"end": 2151,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2143,
											"end": 2151,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2124,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "696"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 2197,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "tag",
											"source": 21,
											"value": "696"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2187,
											"end": 2235,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2187,
											"end": 2235,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1451,
											"end": 2241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2246,
											"end": 2546,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 2246,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "698"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "tag",
											"source": 21,
											"value": "698"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "699"
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 2414,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "tag",
											"source": 21,
											"value": "699"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2404,
											"end": 2443,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2484,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2484,
											"end": 2516,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2551,
											"end": 3401,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 2551,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2734,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2707,
											"end": 2730,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2700,
											"end": 2752,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2700,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "701"
										},
										{
											"begin": 2700,
											"end": 2752,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2700,
											"end": 2752,
											"name": "tag",
											"source": 21,
											"value": "701"
										},
										{
											"begin": 2700,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2775,
											"end": 2798,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2810,
											"end": 2840,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2807,
											"end": 2857,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2807,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "702"
										},
										{
											"begin": 2807,
											"end": 2857,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2807,
											"end": 2857,
											"name": "tag",
											"source": 21,
											"value": "702"
										},
										{
											"begin": 2807,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2921,
											"end": 2934,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2921,
											"end": 2934,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2917,
											"end": 2944,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "703"
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "tag",
											"source": 21,
											"value": "703"
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "704"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3058,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 21,
											"value": "704"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3111,
											"end": 3118,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3104,
											"end": 3108,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3102,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3072,
											"end": 3119,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3069,
											"end": 3136,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3069,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "705"
										},
										{
											"begin": 3069,
											"end": 3136,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3132,
											"end": 3133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3134,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3069,
											"end": 3136,
											"name": "tag",
											"source": 21,
											"value": "705"
										},
										{
											"begin": 3069,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3168,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3155,
											"end": 3168,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3155,
											"end": 3168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3155,
											"end": 3168,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3234,
											"end": 3268,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3234,
											"end": 3268,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2551,
											"end": 3401,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2551,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3588,
											"end": 3962,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 3588,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3687,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3722,
											"end": 3731,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3713,
											"end": 3720,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3709,
											"end": 3732,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3705,
											"end": 3737,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3702,
											"end": 3754,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3702,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "708"
										},
										{
											"begin": 3702,
											"end": 3754,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3750,
											"end": 3751,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3702,
											"end": 3754,
											"name": "tag",
											"source": 21,
											"value": "708"
										},
										{
											"begin": 3702,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "709"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 3773,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "tag",
											"source": 21,
											"value": "709"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3763,
											"end": 3802,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3763,
											"end": 3802,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3821,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "710"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3821,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 3821,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3821,
											"end": 3859,
											"name": "tag",
											"source": 21,
											"value": "710"
										},
										{
											"begin": 3821,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3588,
											"end": 3962,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3588,
											"end": 3962,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3811,
											"end": 3859,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3811,
											"end": 3859,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3900,
											"end": 3932,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3900,
											"end": 3932,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3588,
											"end": 3962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3967,
											"end": 4193,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 3967,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4081,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4054,
											"end": 4077,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "712"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "tag",
											"source": 21,
											"value": "712"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3967,
											"end": 4193,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3967,
											"end": 4193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "tag",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4484,
											"end": 4507,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4480,
											"end": 4512,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4477,
											"end": 4529,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4477,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "715"
										},
										{
											"begin": 4477,
											"end": 4529,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4477,
											"end": 4529,
											"name": "tag",
											"source": 21,
											"value": "715"
										},
										{
											"begin": 4477,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4570,
											"end": 4593,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4570,
											"end": 4593,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4570,
											"end": 4593,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "716"
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 4636,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "tag",
											"source": 21,
											"value": "716"
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4626,
											"end": 4674,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4626,
											"end": 4674,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4380,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4874,
											"end": 5060,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 4874,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4965,
											"end": 4972,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4961,
											"end": 4984,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4957,
											"end": 4989,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4954,
											"end": 5006,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4954,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "719"
										},
										{
											"begin": 4954,
											"end": 5006,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5004,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4954,
											"end": 5006,
											"name": "tag",
											"source": 21,
											"value": "719"
										},
										{
											"begin": 4954,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5025,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 5044,
											"end": 5053,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5025,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 5025,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5065,
											"end": 5192,
											"name": "tag",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 5065,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5126,
											"end": 5136,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 5117,
											"end": 5137,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 5114,
											"end": 5115,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5138,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5157,
											"end": 5161,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5162,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5186,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5323,
											"end": 5332,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5321,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5310,
											"end": 5333,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5306,
											"end": 5338,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5303,
											"end": 5355,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5303,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "723"
										},
										{
											"begin": 5303,
											"end": 5355,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5351,
											"end": 5352,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5349,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5303,
											"end": 5355,
											"name": "tag",
											"source": 21,
											"value": "723"
										},
										{
											"begin": 5303,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "724"
										},
										{
											"begin": 5393,
											"end": 5402,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 5374,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5403,
											"name": "tag",
											"source": 21,
											"value": "724"
										},
										{
											"begin": 5374,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5364,
											"end": 5403,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5364,
											"end": 5403,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5426,
											"end": 5458,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5470,
											"end": 5500,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5467,
											"end": 5517,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5467,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "725"
										},
										{
											"begin": 5467,
											"end": 5517,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5515,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5467,
											"end": 5517,
											"name": "tag",
											"source": 21,
											"value": "725"
										},
										{
											"begin": 5467,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5558,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5558,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5589,
											"end": 5593,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5567,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "726"
										},
										{
											"begin": 5567,
											"end": 5622,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5608,
											"end": 5620,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5567,
											"end": 5622,
											"name": "tag",
											"source": 21,
											"value": "726"
										},
										{
											"begin": 5567,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5658,
											"end": 5660,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5645,
											"end": 5661,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5673,
											"end": 5703,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5670,
											"end": 5726,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5670,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "728"
										},
										{
											"begin": 5670,
											"end": 5726,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "728"
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 5706,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "tag",
											"source": 21,
											"value": "728"
										},
										{
											"begin": 5706,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5755,
											"end": 5757,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5809,
											"end": 5826,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5809,
											"end": 5826,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5805,
											"end": 5836,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5805,
											"end": 5836,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5805,
											"end": 5836,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 21,
											"value": "3F"
										},
										{
											"begin": 5801,
											"end": 5841,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5797,
											"end": 5851,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5867,
											"end": 5901,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5867,
											"end": 5901,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5903,
											"end": 5925,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5903,
											"end": 5925,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5903,
											"end": 5925,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 5864,
											"end": 5926,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 5861,
											"end": 5949,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5861,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "730"
										},
										{
											"begin": 5861,
											"end": 5949,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "730"
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 5929,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "tag",
											"source": 21,
											"value": "730"
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5958,
											"end": 5980,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5989,
											"end": 6011,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5989,
											"end": 6011,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5989,
											"end": 6011,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6047,
											"end": 6049,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6023,
											"end": 6060,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6077,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6020,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "731"
										},
										{
											"begin": 6020,
											"end": 6077,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6073,
											"end": 6074,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6075,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6020,
											"end": 6077,
											"name": "tag",
											"source": 21,
											"value": "731"
										},
										{
											"begin": 6020,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6120,
											"end": 6122,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6127,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6111,
											"end": 6113,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6099,
											"end": 6114,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6086,
											"end": 6136,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6179,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6175,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6152,
											"end": 6180,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6145,
											"end": 6184,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6203,
											"end": 6209,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6193,
											"end": 6209,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6193,
											"end": 6209,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6193,
											"end": 6209,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6193,
											"end": 6209,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6193,
											"end": 6209,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5197,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6220,
											"end": 6480,
											"name": "tag",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 6220,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6328,
											"end": 6335,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6324,
											"end": 6347,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6320,
											"end": 6352,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6317,
											"end": 6369,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6317,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "733"
										},
										{
											"begin": 6317,
											"end": 6369,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6365,
											"end": 6366,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6367,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6317,
											"end": 6369,
											"name": "tag",
											"source": 21,
											"value": "733"
										},
										{
											"begin": 6317,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6388,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "734"
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6388,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 6388,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6388,
											"end": 6417,
											"name": "tag",
											"source": 21,
											"value": "734"
										},
										{
											"begin": 6388,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6378,
											"end": 6417,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6378,
											"end": 6417,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6436,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "716"
										},
										{
											"begin": 6470,
											"end": 6472,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6436,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 6436,
											"end": 6474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6485,
											"end": 6865,
											"name": "tag",
											"source": 21,
											"value": "208"
										},
										{
											"begin": 6485,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 6560,
											"end": 6572,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6560,
											"end": 6572,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6560,
											"end": 6572,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 6560,
											"end": 6572,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6628,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "737"
										},
										{
											"begin": 6628,
											"end": 6689,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "PUSH",
											"source": 21,
											"value": "7F"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6670,
											"end": 6687,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6660,
											"end": 6687,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6660,
											"end": 6687,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6628,
											"end": 6689,
											"name": "tag",
											"source": 21,
											"value": "737"
										},
										{
											"begin": 6628,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6733,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6701,
											"end": 6739,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "738"
										},
										{
											"begin": 6698,
											"end": 6859,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6781,
											"end": 6791,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 6776,
											"end": 6779,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6793,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "PUSH",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6806,
											"end": 6821,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 6841,
											"end": 6842,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6859,
											"name": "tag",
											"source": 21,
											"value": "738"
										},
										{
											"begin": 6698,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6859,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6485,
											"end": 6865,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6485,
											"end": 6865,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6485,
											"end": 6865,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6485,
											"end": 6865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7220,
											"end": 7487,
											"name": "tag",
											"source": 21,
											"value": "673"
										},
										{
											"begin": 7220,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7297,
											"end": 7316,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7354,
											"end": 7359,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7342,
											"end": 7345,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7338,
											"end": 7352,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7325,
											"end": 7368,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7404,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7388,
											"end": 7404,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7388,
											"end": 7404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7410,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7411,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7384,
											"end": 7411,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7384,
											"end": 7411,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7377,
											"end": 7415,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7377,
											"end": 7415,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7377,
											"end": 7415,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7377,
											"end": 7415,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7444,
											"end": 7473,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7474,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7474,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7474,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7431,
											"end": 7481,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7431,
											"end": 7481,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7220,
											"end": 7487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7492,
											"end": 7929,
											"name": "tag",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 7492,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7709,
											"end": 7711,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7698,
											"end": 7707,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7691,
											"end": 7712,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7672,
											"end": 7676,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "742"
										},
										{
											"begin": 7793,
											"end": 7795,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7782,
											"end": 7791,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7770,
											"end": 7776,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7762,
											"end": 7768,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "673"
										},
										{
											"begin": 7735,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "tag",
											"source": 21,
											"value": "742"
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7837,
											"end": 7843,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7833,
											"end": 7855,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7828,
											"end": 7830,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7806,
											"end": 7856,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7873,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "743"
										},
										{
											"begin": 7916,
											"end": 7922,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7873,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "673"
										},
										{
											"begin": 7873,
											"end": 7923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7873,
											"end": 7923,
											"name": "tag",
											"source": 21,
											"value": "743"
										},
										{
											"begin": 7873,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7865,
											"end": 7923,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 7492,
											"end": 7929,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7492,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8839,
											"end": 8966,
											"name": "tag",
											"source": 21,
											"value": "674"
										},
										{
											"begin": 8839,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8900,
											"end": 8910,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 8895,
											"end": 8898,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 8891,
											"end": 8911,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 8888,
											"end": 8889,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8912,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 8928,
											"end": 8929,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8921,
											"end": 8936,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8955,
											"end": 8959,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8960,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8971,
											"end": 9096,
											"name": "tag",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 8971,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9057,
											"end": 9067,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9057,
											"end": 9067,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9057,
											"end": 9067,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 9054,
											"end": 9090,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9054,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 9054,
											"end": 9090,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "674"
										},
										{
											"begin": 9070,
											"end": 9088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9450,
											"end": 9577,
											"name": "tag",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 9450,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 9499,
											"end": 9500,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9523,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9542,
											"end": 9546,
											"name": "PUSH",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 9532,
											"end": 9547,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9566,
											"end": 9570,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9563,
											"end": 9564,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9571,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9935,
											"end": 10063,
											"name": "tag",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 9935,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10023,
											"end": 10034,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10023,
											"end": 10034,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10023,
											"end": 10034,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10020,
											"end": 10057,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10020,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 10020,
											"end": 10057,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "674"
										},
										{
											"begin": 10037,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10419,
											"end": 10768,
											"name": "tag",
											"source": 21,
											"value": "291"
										},
										{
											"begin": 10419,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10621,
											"end": 10623,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10660,
											"end": 10662,
											"name": "PUSH",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10633,
											"end": 10663,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10699,
											"end": 10726,
											"name": "PUSH",
											"source": 21,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 10694,
											"end": 10696,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10672,
											"end": 10727,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10759,
											"end": 10761,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10419,
											"end": 10768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11476,
											"end": 11825,
											"name": "tag",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 11476,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11678,
											"end": 11680,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11717,
											"end": 11719,
											"name": "PUSH",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11756,
											"end": 11783,
											"name": "PUSH",
											"source": 21,
											"value": "526563697069656E74206E6F742077686974656C697374656400000000000000"
										},
										{
											"begin": 11751,
											"end": 11753,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11729,
											"end": 11784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11816,
											"end": 11818,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11476,
											"end": 11825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11830,
											"end": 12177,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 11830,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12014,
											"end": 12035,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12014,
											"end": 12035,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12014,
											"end": 12035,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12071,
											"end": 12073,
											"name": "PUSH",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 12051,
											"end": 12069,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12051,
											"end": 12069,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12051,
											"end": 12069,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12044,
											"end": 12074,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12110,
											"end": 12135,
											"name": "PUSH",
											"source": 21,
											"value": "496E76616C6964206163636F756E742061646472657373000000000000000000"
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12090,
											"end": 12108,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12090,
											"end": 12108,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12083,
											"end": 12136,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12170,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11830,
											"end": 12177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14834,
											"end": 15018,
											"name": "tag",
											"source": 21,
											"value": "563"
										},
										{
											"begin": 14834,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14904,
											"end": 14910,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14959,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14945,
											"end": 14954,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14936,
											"end": 14943,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14932,
											"end": 14955,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 14928,
											"end": 14960,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 14925,
											"end": 14977,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14925,
											"end": 14977,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "772"
										},
										{
											"begin": 14925,
											"end": 14977,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14973,
											"end": 14974,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14970,
											"end": 14971,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14975,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14925,
											"end": 14977,
											"name": "tag",
											"source": 21,
											"value": "772"
										},
										{
											"begin": 14925,
											"end": 14977,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14834,
											"end": 15018,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14834,
											"end": 15018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15149,
											"end": 15667,
											"name": "tag",
											"source": 21,
											"value": "676"
										},
										{
											"begin": 15149,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 15246,
											"end": 15249,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15243,
											"end": 15254,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 15240,
											"end": 15661,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15240,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 15240,
											"end": 15661,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15287,
											"end": 15292,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15284,
											"end": 15285,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15277,
											"end": 15293,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15331,
											"end": 15335,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15328,
											"end": 15329,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15318,
											"end": 15336,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 15401,
											"end": 15403,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 15389,
											"end": 15399,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15385,
											"end": 15404,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15382,
											"end": 15383,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 15378,
											"end": 15405,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 15372,
											"end": 15376,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15368,
											"end": 15406,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15437,
											"end": 15441,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15425,
											"end": 15435,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15422,
											"end": 15442,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 15419,
											"end": 15466,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15419,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "776"
										},
										{
											"begin": 15419,
											"end": 15466,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15460,
											"end": 15464,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15419,
											"end": 15466,
											"name": "tag",
											"source": 21,
											"value": "776"
										},
										{
											"begin": 15419,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15515,
											"end": 15517,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 15510,
											"end": 15513,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15506,
											"end": 15518,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 15499,
											"end": 15519,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 15493,
											"end": 15497,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15489,
											"end": 15520,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15479,
											"end": 15520,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15479,
											"end": 15520,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "tag",
											"source": 21,
											"value": "777"
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15581,
											"end": 15586,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15578,
											"end": 15591,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "609"
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15647,
											"end": 15648,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15649,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15633,
											"end": 15649,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 15614,
											"end": 15615,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "777"
										},
										{
											"begin": 15570,
											"end": 15651,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15843,
											"end": 17142,
											"name": "tag",
											"source": 21,
											"value": "597"
										},
										{
											"begin": 15843,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15969,
											"end": 15972,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15963,
											"end": 15973,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15996,
											"end": 16014,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15988,
											"end": 15994,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15985,
											"end": 16015,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 15982,
											"end": 16038,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15982,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "783"
										},
										{
											"begin": 15982,
											"end": 16038,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16018,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "783"
										},
										{
											"begin": 16018,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 16018,
											"end": 16036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16018,
											"end": 16036,
											"name": "tag",
											"source": 21,
											"value": "783"
										},
										{
											"begin": 16018,
											"end": 16036,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16047,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "784"
										},
										{
											"begin": 16137,
											"end": 16143,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16097,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "785"
										},
										{
											"begin": 16129,
											"end": 16133,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16123,
											"end": 16134,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 16097,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "208"
										},
										{
											"begin": 16097,
											"end": 16135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16097,
											"end": 16135,
											"name": "tag",
											"source": 21,
											"value": "785"
										},
										{
											"begin": 16097,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16091,
											"end": 16095,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16047,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "676"
										},
										{
											"begin": 16047,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16047,
											"end": 16144,
											"name": "tag",
											"source": 21,
											"value": "784"
										},
										{
											"begin": 16047,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16193,
											"end": 16197,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 16213,
											"end": 16227,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16213,
											"end": 16227,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 16241,
											"end": 16242,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "787"
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16929,
											"end": 16930,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16946,
											"end": 16952,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16943,
											"end": 17032,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16943,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "788"
										},
										{
											"begin": 16943,
											"end": 17032,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16998,
											"end": 17017,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16998,
											"end": 17017,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16998,
											"end": 17017,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16992,
											"end": 17018,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16943,
											"end": 17032,
											"name": "tag",
											"source": 21,
											"value": "788"
										},
										{
											"begin": 16943,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15800,
											"end": 15801,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 15796,
											"end": 15807,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15796,
											"end": 15807,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15796,
											"end": 15807,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 15792,
											"end": 15816,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 15788,
											"end": 15817,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 15778,
											"end": 15818,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15824,
											"end": 15825,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 15820,
											"end": 15831,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15820,
											"end": 15831,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15820,
											"end": 15831,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 15775,
											"end": 15832,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 17045,
											"end": 17126,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17045,
											"end": 17126,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 16206,
											"end": 17136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "609"
										},
										{
											"begin": 16206,
											"end": 17136,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "tag",
											"source": 21,
											"value": "787"
										},
										{
											"begin": 16236,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15089,
											"end": 15103,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15089,
											"end": 15103,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15089,
											"end": 15103,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15133,
											"end": 15137,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15138,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15120,
											"end": 15138,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "tag",
											"source": 21,
											"value": "791"
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16404,
											"end": 16411,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16401,
											"end": 16402,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16398,
											"end": 16412,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "793"
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16486,
											"end": 16505,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 16486,
											"end": 16505,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16486,
											"end": 16505,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16480,
											"end": 16506,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16465,
											"end": 16507,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16465,
											"end": 16507,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 16593,
											"end": 16597,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16578,
											"end": 16598,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 16578,
											"end": 16598,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16578,
											"end": 16598,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16578,
											"end": 16598,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 16546,
											"end": 16547,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16420,
											"end": 16432,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "791"
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "tag",
											"source": 21,
											"value": "793"
										},
										{
											"begin": 16390,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16394,
											"end": 16397,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16640,
											"end": 16646,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16631,
											"end": 16638,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16628,
											"end": 16647,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 16625,
											"end": 16826,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16625,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "794"
										},
										{
											"begin": 16625,
											"end": 16826,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16701,
											"end": 16720,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 16701,
											"end": 16720,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16701,
											"end": 16720,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16695,
											"end": 16721,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16784,
											"end": 16785,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 16780,
											"end": 16794,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 16780,
											"end": 16794,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16780,
											"end": 16794,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 16796,
											"end": 16799,
											"name": "PUSH",
											"source": 21,
											"value": "F8"
										},
										{
											"begin": 16776,
											"end": 16800,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 16772,
											"end": 16809,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 16768,
											"end": 16810,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 16753,
											"end": 16811,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 16738,
											"end": 16812,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16738,
											"end": 16812,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 16625,
											"end": 16826,
											"name": "tag",
											"source": 21,
											"value": "794"
										},
										{
											"begin": 16625,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16872,
											"end": 16873,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 16856,
											"end": 16870,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16856,
											"end": 16870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16856,
											"end": 16870,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 16852,
											"end": 16874,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16839,
											"end": 16875,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16839,
											"end": 16875,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15843,
											"end": 17142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17426,
											"end": 17727,
											"name": "tag",
											"source": 21,
											"value": "651"
										},
										{
											"begin": 17426,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17555,
											"end": 17558,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17593,
											"end": 17599,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17587,
											"end": 17600,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17639,
											"end": 17645,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 17632,
											"end": 17636,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17624,
											"end": 17630,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17620,
											"end": 17637,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17615,
											"end": 17618,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17609,
											"end": 17646,
											"name": "MCOPY",
											"source": 21
										},
										{
											"begin": 17701,
											"end": 17702,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17665,
											"end": 17681,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 17665,
											"end": 17681,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17665,
											"end": 17681,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17426,
											"end": 17727,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17426,
											"end": 17727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									],
									".data": {
										"3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"7E678C77CFA084E62AED03CEADB9B37AA6C80340DA2F54168DF7A1E5E1FDB0A3": "442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300",
										"C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43": "9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TOKEN ZARFIX (XZI).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CAP()": "ec81b483",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchRemoveFromWhitelist(address[],uint256,uint256)": "1663a066",
							"burn(address,uint256)": "9dc29fac",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(string,string,address)": "077f224a",
							"isWhitelisted(address)": "3af32abf",
							"maxBatchSize()": "2913daa0",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"processBatch(address[],uint256,uint256)": "bfab3b9e",
							"proxiableUUID()": "52d1902d",
							"remainingMintable()": "f76e95e5",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cap\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"attempted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"CapExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"InvalidBatchSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"BatchProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"ContractInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"batchRemoveFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBatchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"processBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingMintable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZarfiX Security Team\",\"custom:security-contact\":\"security@zarfix.com\",\"custom:version\":\"1.0.1\",\"details\":\"UUPS upgradeable ERC-20 token implementing batch processing, gas optimizations, and comprehensive security measures\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"CapExceeded(uint256,uint256)\":[{\"params\":{\"attempted\":\"The amount attempted to mint\",\"cap\":\"The maximum allowed cap\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidBatchSize(uint256)\":[{\"params\":{\"requested\":\"The requested batch size\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"params\":{\"newAdmin\":\"The new admin address\",\"previousAdmin\":\"The previous admin address\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"BatchProcessed(uint256,uint256)\":{\"params\":{\"limit\":\"The number of items processed in the batch\",\"offset\":\"The starting index of the batch\"}},\"ContractInitialized(address,string,string)\":{\"params\":{\"admin\":\"The initial admin address\",\"name\":\"The token name\",\"symbol\":\"The token symbol\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokenTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"The amount transferred\",\"from\":\"The sender address\",\"to\":\"The recipient address\"}},\"TokensBurned(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens burned\",\"from\":\"The address from which tokens are burned\"}},\"TokensMinted(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens minted\",\"to\":\"The address receiving the minted tokens\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"WhitelistUpdated(address,bool)\":{\"params\":{\"account\":\"The address whose whitelist status changed\",\"status\":\"The new whitelist status (true = whitelisted, false = removed)\"}}},\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address)\":{\"details\":\"Only callable by addresses with COMPLIANCE_ROLE\",\"params\":{\"_account\":\"The address to whitelist\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchRemoveFromWhitelist(address[],uint256,uint256)\":{\"details\":\"Implements bounded batch processing to avoid gas limit issues\",\"params\":{\"_accounts\":\"Array of addresses to remove from whitelist\",\"_limit\":\"Maximum number of addresses to process\",\"_offset\":\"Starting index for processing\"}},\"burn(address,uint256)\":{\"details\":\"Only callable by addresses with ISSUER_ROLE\",\"params\":{\"_amount\":\"The amount of tokens to burn\",\"_from\":\"The address from which to burn tokens\"}},\"cap()\":{\"returns\":{\"_0\":\"The maximum total supply that can ever exist\"}},\"constructor\":{\"params\":{\"_cap\":\"The maximum total supply that can ever be minted\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(string,string,address)\":{\"details\":\"This function can only be called once due to the initializer modifier\",\"params\":{\"_admin\":\"The address to receive all administrative roles\",\"_name\":\"The name of the token\",\"_symbol\":\"The symbol of the token\"}},\"isWhitelisted(address)\":{\"params\":{\"_account\":\"The address to check\"},\"returns\":{\"_0\":\"True if the address is whitelisted, false otherwise\"}},\"maxBatchSize()\":{\"returns\":{\"_0\":\"The maximum number of addresses that can be processed in one batch\"}},\"mint(address,uint256)\":{\"details\":\"Only callable by addresses with ISSUER_ROLE, respects total supply cap and whitelist\",\"params\":{\"_amount\":\"The amount of tokens to mint\",\"_to\":\"The address to receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Only callable by addresses with PAUSER_ROLE, emits Paused event automatically\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processBatch(address[],uint256,uint256)\":{\"details\":\"Implements bounded batch processing to avoid gas limit issues\",\"params\":{\"_accounts\":\"Array of addresses to whitelist\",\"_limit\":\"Maximum number of addresses to process\",\"_offset\":\"Starting index for processing\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"remainingMintable()\":{\"returns\":{\"_0\":\"The number of tokens that can still be minted\"}},\"removeFromWhitelist(address)\":{\"details\":\"Only callable by addresses with COMPLIANCE_ROLE\",\"params\":{\"_account\":\"The address to remove from whitelist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Gas-optimized version using cached supply\",\"returns\":{\"_0\":\"The current total supply\"}},\"transfer(address,uint256)\":{\"details\":\"Overrides ERC20 transfer to add whitelist and pause checks\",\"params\":{\"_amount\":\"The amount to transfer\",\"_to\":\"The recipient address\"},\"returns\":{\"_0\":\"True if transfer succeeds\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides ERC20 transferFrom to add whitelist and pause checks\",\"params\":{\"_amount\":\"The amount to transfer\",\"_from\":\"The sender address\",\"_to\":\"The recipient address\"},\"returns\":{\"_0\":\"True if transfer succeeds\"}},\"unpause()\":{\"details\":\"Only callable by addresses with PAUSER_ROLE, emits Unpaused event automatically\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"Reserved storage space for future upgrades to maintain storage layout compatibility\"}},\"title\":\"ZarfiXToken\",\"version\":1},\"userdoc\":{\"errors\":{\"CapExceeded(uint256,uint256)\":[{\"notice\":\"Thrown when attempting to mint tokens exceeding the cap\"}],\"EmptyArray()\":[{\"notice\":\"Thrown when array is empty\"}],\"InsufficientBalance()\":[{\"notice\":\"Thrown when attempting to burn more tokens than available\"}],\"InvalidBatchSize(uint256)\":[{\"notice\":\"Thrown when batch size is invalid\"}],\"NotWhitelisted()\":[{\"notice\":\"Thrown when non-whitelisted address attempts token operations\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when attempting to use zero address where invalid\"}],\"ZeroAmount()\":[{\"notice\":\"Thrown when attempting to mint or transfer zero tokens\"}]},\"events\":{\"AdminChanged(address,address)\":{\"notice\":\"Emitted when admin role is transferred\"},\"BatchProcessed(uint256,uint256)\":{\"notice\":\"Emitted when a batch operation is completed\"},\"ContractInitialized(address,string,string)\":{\"notice\":\"Emitted when contract is initialized\"},\"ContractPaused(address)\":{\"notice\":\"Emitted when contract is paused\"},\"ContractUnpaused(address)\":{\"notice\":\"Emitted when contract is unpaused\"},\"TokenTransfer(address,address,uint256)\":{\"notice\":\"Emitted when transfer occurs\"},\"TokensBurned(address,uint256)\":{\"notice\":\"Emitted when tokens are burned from an address\"},\"TokensMinted(address,uint256)\":{\"notice\":\"Emitted when tokens are minted to an address\"},\"WhitelistUpdated(address,bool)\":{\"notice\":\"Emitted when whitelist status is updated for an address\"}},\"kind\":\"user\",\"methods\":{\"CAP()\":{\"notice\":\"Maximum total supply that can ever be minted (immutable cap)\"},\"addToWhitelist(address)\":{\"notice\":\"Adds an address to the whitelist\"},\"batchRemoveFromWhitelist(address[],uint256,uint256)\":{\"notice\":\"Batch processes whitelist removals with offset and limit to prevent DOS\"},\"burn(address,uint256)\":{\"notice\":\"Burns tokens from a specified address\"},\"cap()\":{\"notice\":\"Returns the maximum total supply cap\"},\"constructor\":{\"notice\":\"Constructor sets the immutable cap and initializes storage to avoid zero-to-one writes\"},\"initialize(string,string,address)\":{\"notice\":\"Initializes the upgradeable contract with token parameters and admin roles\"},\"isWhitelisted(address)\":{\"notice\":\"Checks if an address is whitelisted for token operations\"},\"maxBatchSize()\":{\"notice\":\"Returns the maximum batch size for batch operations\"},\"mint(address,uint256)\":{\"notice\":\"Mints new tokens to a specified address\"},\"pause()\":{\"notice\":\"Pauses all token transfers and minting/burning operations\"},\"processBatch(address[],uint256,uint256)\":{\"notice\":\"Batch processes whitelist additions with offset and limit to prevent DOS\"},\"remainingMintable()\":{\"notice\":\"Returns the remaining tokens that can be minted before hitting the cap\"},\"removeFromWhitelist(address)\":{\"notice\":\"Removes an address from the whitelist\"},\"totalSupply()\":{\"notice\":\"Returns the current total supply of tokens\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers tokens from sender to recipient with whitelist enforcement\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers tokens from one address to another with whitelist enforcement\"},\"unpause()\":{\"notice\":\"Unpauses token transfers and minting/burning operations\"}},\"notice\":\"A regulatory-compliant security token with whitelist enforcement, capped supply, and role-based access controls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOKEN ZARFIX (XZI).sol\":\"ZarfiXToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"TOKEN ZARFIX (XZI).sol\":{\"keccak256\":\"0xf34628a162e82f65a88ea1746860cded0e3a75e45c786f5f88471c0957f98db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b50d35dc8d6e154b27a4b1763577d23c77d627642f720d40387fc3940b6a9b62\",\"dweb:/ipfs/QmScmxzPeSGNmdEQEk2E3EXSV8AG7GNZ3s9UECHhwD24L7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2944,
								"contract": "TOKEN ZARFIX (XZI).sol:ZarfiXToken",
								"label": "_whitelist",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2947,
								"contract": "TOKEN ZARFIX (XZI).sol:ZarfiXToken",
								"label": "_currentSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 3841,
								"contract": "TOKEN ZARFIX (XZI).sol:ZarfiXToken",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)47_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)47_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[47]",
								"numberOfBytes": "1504"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"CapExceeded(uint256,uint256)": [
								{
									"notice": "Thrown when attempting to mint tokens exceeding the cap"
								}
							],
							"EmptyArray()": [
								{
									"notice": "Thrown when array is empty"
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "Thrown when attempting to burn more tokens than available"
								}
							],
							"InvalidBatchSize(uint256)": [
								{
									"notice": "Thrown when batch size is invalid"
								}
							],
							"NotWhitelisted()": [
								{
									"notice": "Thrown when non-whitelisted address attempts token operations"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when attempting to use zero address where invalid"
								}
							],
							"ZeroAmount()": [
								{
									"notice": "Thrown when attempting to mint or transfer zero tokens"
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"notice": "Emitted when admin role is transferred"
							},
							"BatchProcessed(uint256,uint256)": {
								"notice": "Emitted when a batch operation is completed"
							},
							"ContractInitialized(address,string,string)": {
								"notice": "Emitted when contract is initialized"
							},
							"ContractPaused(address)": {
								"notice": "Emitted when contract is paused"
							},
							"ContractUnpaused(address)": {
								"notice": "Emitted when contract is unpaused"
							},
							"TokenTransfer(address,address,uint256)": {
								"notice": "Emitted when transfer occurs"
							},
							"TokensBurned(address,uint256)": {
								"notice": "Emitted when tokens are burned from an address"
							},
							"TokensMinted(address,uint256)": {
								"notice": "Emitted when tokens are minted to an address"
							},
							"WhitelistUpdated(address,bool)": {
								"notice": "Emitted when whitelist status is updated for an address"
							}
						},
						"kind": "user",
						"methods": {
							"CAP()": {
								"notice": "Maximum total supply that can ever be minted (immutable cap)"
							},
							"addToWhitelist(address)": {
								"notice": "Adds an address to the whitelist"
							},
							"batchRemoveFromWhitelist(address[],uint256,uint256)": {
								"notice": "Batch processes whitelist removals with offset and limit to prevent DOS"
							},
							"burn(address,uint256)": {
								"notice": "Burns tokens from a specified address"
							},
							"cap()": {
								"notice": "Returns the maximum total supply cap"
							},
							"constructor": {
								"notice": "Constructor sets the immutable cap and initializes storage to avoid zero-to-one writes"
							},
							"initialize(string,string,address)": {
								"notice": "Initializes the upgradeable contract with token parameters and admin roles"
							},
							"isWhitelisted(address)": {
								"notice": "Checks if an address is whitelisted for token operations"
							},
							"maxBatchSize()": {
								"notice": "Returns the maximum batch size for batch operations"
							},
							"mint(address,uint256)": {
								"notice": "Mints new tokens to a specified address"
							},
							"pause()": {
								"notice": "Pauses all token transfers and minting/burning operations"
							},
							"processBatch(address[],uint256,uint256)": {
								"notice": "Batch processes whitelist additions with offset and limit to prevent DOS"
							},
							"remainingMintable()": {
								"notice": "Returns the remaining tokens that can be minted before hitting the cap"
							},
							"removeFromWhitelist(address)": {
								"notice": "Removes an address from the whitelist"
							},
							"totalSupply()": {
								"notice": "Returns the current total supply of tokens"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers tokens from sender to recipient with whitelist enforcement"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers tokens from one address to another with whitelist enforcement"
							},
							"unpause()": {
								"notice": "Unpauses token transfers and minting/burning operations"
							}
						},
						"notice": "A regulatory-compliant security token with whitelist enforcement, capped supply, and role-based access controls",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1475
						],
						"ERC165Upgradeable": [
							1804
						],
						"IAccessControl": [
							1887
						],
						"Initializable": [
							630
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1888,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1887,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1476,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1805,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1804,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 631,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1887,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1804,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1804,
								2881,
								1887,
								1475,
								630
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1803
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1887_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1887_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1887",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1803,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1870
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1878
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1886
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7978:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8017:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7988:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7988:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7988:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7988:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8021:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8021:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7988:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8061:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8239:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8253:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8057:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8085:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8099:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8101:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8099:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8108:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8099:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8114:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8099:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8122:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8099:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8099:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8099:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8169:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8175:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "8184:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8184:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "8157:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8157:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8152:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8218:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8211:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7903:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7923:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7915:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7914:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7972:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7971:6:0"
									},
									"scope": 362,
									"src": "7894:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6194:0",
							"usedErrors": [
								379,
								382,
								1814,
								1817
							],
							"usedEvents": [
								387,
								1826,
								1835,
								1844
							]
						}
					],
					"src": "108:8177:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 630,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$630",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$630",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 630,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 630,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 630,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 630,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 612,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 376,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 611,
												"id": 613,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 630,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 622,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 624,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 627,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 373,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 630,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "2349:6929:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2349
						],
						"IERC1822Proxiable": [
							1918
						],
						"Initializable": [
							630
						],
						"UUPSUpgradeable": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 1919,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1918,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 2350,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 635,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2349,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 631,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 640,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1023:13:2"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 642,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1918,
										"src": "1038:17:2"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								1918,
								630
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 650,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 645,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 648,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 647,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 646,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 654,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 652,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 657,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 662,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 659,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 668,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 670,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 673,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 676,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 678,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 680,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 812,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 686,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 812,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1917
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 698,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2349_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2070,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 697,
												"id": 700,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 694,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 693,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 678,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 812,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 712,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 670,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 812,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 728,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 726,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 730,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 732,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2349_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2101,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 735,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 738,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 740,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 812,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 748,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 752,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 758,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 757,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 754,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 756,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 812,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 812,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 799,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 782,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 783,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2349,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2349_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2070,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 791,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 790,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 787,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 780,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 786,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 662,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 789,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 795,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 796,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 792,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2349,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2349_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2164,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 798,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 800,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 781,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 800,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 807,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 804,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 801,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2349,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2349_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2075,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 806,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 808,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 775,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 774,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1918_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1918",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1917,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 809,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 812,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 813,
							"src": "986:5586:2",
							"usedErrors": [
								379,
								382,
								657,
								662,
								2075,
								2088,
								2473,
								2736
							],
							"usedEvents": [
								387,
								1895
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1475
						],
						"ERC20Upgradeable": [
							1429
						],
						"IERC20": [
							2437
						],
						"IERC20Errors": [
							1960
						],
						"IERC20Metadata": [
							2463
						],
						"Initializable": [
							630
						]
					},
					"id": 1430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2438,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 815,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2437,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2464,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 817,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2463,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 1476,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 819,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2056,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 821,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1960,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 631,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 823,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1319:13:3"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:3"
								},
								{
									"baseName": {
										"id": 828,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "1334:18:3"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:3"
								},
								{
									"baseName": {
										"id": 830,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2437,
										"src": "1354:6:3"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:3"
								},
								{
									"baseName": {
										"id": 832,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2463,
										"src": "1362:14:3"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:3"
								},
								{
									"baseName": {
										"id": 834,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1960,
										"src": "1378:12:3"
									},
									"id": 835,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1429,
							"linearizedBaseContracts": [
								1429,
								1960,
								2463,
								2437,
								1475,
								630
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 853,
									"members": [
										{
											"constant": false,
											"id": 840,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1495:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 839,
												"keyName": "account",
												"keyNameLocation": "1511:7:3",
												"keyType": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1551:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 845,
												"keyName": "account",
												"keyNameLocation": "1567:7:3",
												"keyType": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 844,
													"keyName": "spender",
													"keyNameLocation": "1594:7:3",
													"keyType": {
														"id": 842,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 843,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1637:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 847,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1668:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 849,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1690:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 851,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:3",
									"nodeType": "StructDefinition",
									"scope": 1429,
									"src": "1465:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 856,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "1826:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 854,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "2021:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:3",
													"nodeType": "YulBlock",
													"src": "2040:54:3",
													"statements": [
														{
															"nativeSrc": "2054:30:3",
															"nodeType": "YulAssignment",
															"src": "2054:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:3",
																"nodeType": "YulIdentifier",
																"src": "2064:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:3",
														"valueSize": 1
													}
												],
												"id": 862,
												"nodeType": "InlineAssembly",
												"src": "2031:63:3"
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1997:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "1997:12:3"
													},
													"referencedDeclaration": 853,
													"src": "1997:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:3"
									},
									"scope": 1429,
									"src": "1947:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "2355:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "2388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 876,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2395:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 874,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "2365:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:3"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 872,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 871,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2338:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2285:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2306:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:3"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:3"
									},
									"scope": 1429,
									"src": "2263:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2518:114:3",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "2528:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 890,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 889,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "2528:12:3"
															},
															"referencedDeclaration": 853,
															"src": "2528:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 892,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2553:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:3"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 895,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2581:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "2581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 898,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2591:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:3"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 901,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2606:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 852,
														"src": "2606:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2618:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:3"
											}
										]
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 886,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2501:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2448:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2469:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:3"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:3"
									},
									"scope": 1429,
									"src": "2416:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2450
									],
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2757:84:3",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "2767:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 915,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 914,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "2767:12:3"
															},
															"referencedDeclaration": 853,
															"src": "2767:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2792:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2827:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 850,
													"src": "2827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 913,
												"id": 922,
												"nodeType": "Return",
												"src": "2820:14:3"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2742:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:3"
									},
									"scope": 1429,
									"src": "2697:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2456
									],
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "3016:86:3",
										"statements": [
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3026:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 931,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 930,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "3026:12:3"
															},
															"referencedDeclaration": 853,
															"src": "3026:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 933,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3051:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 936,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3086:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 852,
													"src": "3086:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 929,
												"id": 938,
												"nodeType": "Return",
												"src": "3079:16:3"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:3"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3001:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:3"
									},
									"scope": 1429,
									"src": "2954:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2462
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "3791:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 945,
												"id": 947,
												"nodeType": "Return",
												"src": "3801:9:3"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:3"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "3784:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 943,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:3"
									},
									"scope": 1429,
									"src": "3735:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2386
									],
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "3938:91:3",
										"statements": [
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3969:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "3948:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 956,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 955,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3948:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "3948:12:3"
															},
															"referencedDeclaration": 853,
															"src": "3948:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3973:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 961,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4008:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4010:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "4008:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 963,
												"nodeType": "Return",
												"src": "4001:21:3"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "3823:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3886:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3897:2:3"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "3929:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:3"
									},
									"scope": 1429,
									"src": "3877:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2394
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "4161:97:3",
										"statements": [
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4192:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "4171:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 974,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 973,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4171:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "4171:12:3"
															},
															"referencedDeclaration": 853,
															"src": "4171:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 976,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "4196:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 979,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4231:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4233:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "4231:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 982,
													"indexExpression": {
														"id": 981,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4243:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 972,
												"id": 983,
												"nodeType": "Return",
												"src": "4224:27:3"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "4035:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4096:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4114:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4106:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:17:3"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:3"
									},
									"scope": 1429,
									"src": "4087:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2404
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "4528:103:3",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4546:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "4538:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 995,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 997,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "4554:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "4586:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4593:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4597:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4576:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "4576:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4620:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 994,
												"id": 1007,
												"nodeType": "Return",
												"src": "4613:11:3"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "4264:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4462:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4479:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4471:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4491:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4483:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:27:3"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4522:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:3"
									},
									"scope": 1429,
									"src": "4453:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2414
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "4778:106:3",
										"statements": [
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4809:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "4788:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1020,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1019,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4788:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "4788:12:3"
															},
															"referencedDeclaration": 853,
															"src": "4788:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1022,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "4813:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4788:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 1025,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "4848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4850:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 846,
															"src": "4848:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4862:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4848:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"id": 1029,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4848:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1031,
												"nodeType": "Return",
												"src": "4841:36:3"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "4637:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4698:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4708:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4731:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4723:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:32:3"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4769:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:9:3"
									},
									"scope": 1429,
									"src": "4689:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2424
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5270:107:3",
										"statements": [
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5288:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5280:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1043,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1045,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5296:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5327:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5334:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5343:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1312,
															1380
														],
														"referencedDeclaration": 1312,
														"src": "5318:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "5318:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1042,
												"id": 1055,
												"nodeType": "Return",
												"src": "5359:11:3"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4890:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5200:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5208:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5233:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5225:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:32:3"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5264:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:6:3"
									},
									"scope": 1429,
									"src": "5191:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2436
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "6062:151:3",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6080:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "6072:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1069,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6072:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1071,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "6090:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6090:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6072:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "6128:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "6134:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6143:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6112:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "6112:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "6169:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "6175:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6179:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "6159:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "6159:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6202:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1068,
												"id": 1087,
												"nodeType": "Return",
												"src": "6195:11:3"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5383:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5978:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5999:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "5991:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6013:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6005:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6025:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6017:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:41:3"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6056:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6056:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:6:3"
									},
									"scope": 1429,
									"src": "5969:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "6655:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6669:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6685:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6677:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1100,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6677:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6677:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6669:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "6665:86:3",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "6689:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6737:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6729:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1106,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6729:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6729:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1105,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "6710:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6710:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1111,
															"nodeType": "RevertStatement",
															"src": "6703:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "6764:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1115,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6770:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6764:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "6760:86:3",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "6782:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6832:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6824:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1121,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6824:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6824:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1120,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "6803:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6803:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "6796:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6863:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6869:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "6873:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "6855:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "6855:24:3"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "6219:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6595:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6613:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6605:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6627:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6619:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6639:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6631:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6604:41:3"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6655:0:3"
									},
									"scope": 1429,
									"src": "6586:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "7276:1095:3",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7307:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "7286:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1147,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1146,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7286:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "7286:12:3"
															},
															"referencedDeclaration": 853,
															"src": "7286:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1149,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "7311:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7286:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "7343:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7359:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7351:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7351:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7351:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "7519:366:3",
													"statements": [
														{
															"assignments": [
																1166
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1166,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7541:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1194,
																	"src": "7533:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1165,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7533:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1171,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1167,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "7555:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7557:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 840,
																	"src": "7555:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1170,
																"indexExpression": {
																	"id": 1169,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "7567:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7555:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7533:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "7590:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "7604:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7590:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1182,
															"nodeType": "IfStatement",
															"src": "7586:115:3",
															"trueBody": {
																"id": 1181,
																"nodeType": "Block",
																"src": "7611:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1176,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1139,
																					"src": "7661:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1177,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "7667:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1178,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "7680:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1175,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1930,
																				"src": "7636:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7636:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1180,
																		"nodeType": "RevertStatement",
																		"src": "7629:57:3"
																	}
																]
															}
														},
														{
															"id": 1193,
															"nodeType": "UncheckedBlock",
															"src": "7714:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1183,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7821:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7823:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 840,
																				"src": "7821:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1187,
																			"indexExpression": {
																				"id": 1185,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "7833:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7821:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1188,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "7841:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1189,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "7855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7821:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1192,
																	"nodeType": "ExpressionStatement",
																	"src": "7821:39:3"
																}
															]
														}
													]
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "7339:546:3",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "7363:150:3",
													"statements": [
														{
															"expression": {
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1158,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "7479:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7481:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 848,
																	"src": "7479:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "7497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7479:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1163,
															"nodeType": "ExpressionStatement",
															"src": "7479:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1196,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7899:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7913:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7905:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1197,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7905:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7905:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7899:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "8116:208:3",
													"statements": [
														{
															"id": 1218,
															"nodeType": "UncheckedBlock",
															"src": "8130:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1210,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "8275:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8277:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 840,
																				"src": "8275:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1214,
																			"indexExpression": {
																				"id": 1212,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "8287:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8275:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "8294:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8275:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "8275:24:3"
																}
															]
														}
													]
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "7895:429:3",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "7917:193:3",
													"statements": [
														{
															"id": 1208,
															"nodeType": "UncheckedBlock",
															"src": "7931:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1202,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "8062:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8064:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 848,
																			"src": "8062:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "8080:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8062:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1207,
																	"nodeType": "ExpressionStatement",
																	"src": "8062:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1222,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "8348:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "8354:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "8358:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "8339:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8339:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "8334:30:3"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "6892:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7210:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7226:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7218:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7240:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7232:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:41:3"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:0:3"
									},
									"scope": 1429,
									"src": "7201:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "8770:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "8784:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8803:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8795:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1237,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8795:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8795:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8784:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "8780:91:3",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "8807:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8857:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8849:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1243,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8849:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8849:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1242,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "8828:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8828:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1248,
															"nodeType": "RevertStatement",
															"src": "8821:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8888:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1252,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8888:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8888:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "8909:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1251,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "8880:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "8880:35:3"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "8377:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8723:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8737:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "8729:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8754:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "8746:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:32:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:3"
									},
									"scope": 1429,
									"src": "8714:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "9296:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "9310:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9321:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9321:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9321:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9310:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "9306:89:3",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "9333:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9381:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9373:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1276,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9373:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9373:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1275,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "9354:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9354:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1281,
															"nodeType": "RevertStatement",
															"src": "9347:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "9412:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9429:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9421:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9421:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9421:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "9433:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1284,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "9404:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "9404:35:3"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "8928:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9249:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9263:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9255:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9255:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9280:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9272:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9272:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9254:32:3"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9296:0:3"
									},
									"scope": 1429,
									"src": "9240:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "10056:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "10075:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "10082:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "10091:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10098:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1304,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1312,
															1380
														],
														"referencedDeclaration": 1380,
														"src": "10066:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10066:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "10066:37:3"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "9452:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9991:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10008:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10000:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:47:3"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:3"
									},
									"scope": 1429,
									"src": "9982:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "11055:389:3",
										"statements": [
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11086:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1379,
														"src": "11065:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1325,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1324,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11065:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "11065:12:3"
															},
															"referencedDeclaration": 853,
															"src": "11065:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1327,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "11090:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11090:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11065:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "11122:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11139:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11131:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1331,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11131:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11131:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11122:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1344,
												"nodeType": "IfStatement",
												"src": "11118:89:3",
												"trueBody": {
													"id": 1343,
													"nodeType": "Block",
													"src": "11143:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11193:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11185:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1337,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11185:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11185:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1336,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "11164:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1342,
															"nodeType": "RevertStatement",
															"src": "11157:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "11220:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11239:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1346,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11231:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11231:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11220:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1359,
												"nodeType": "IfStatement",
												"src": "11216:90:3",
												"trueBody": {
													"id": 1358,
													"nodeType": "Block",
													"src": "11243:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11292:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11284:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1352,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11284:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11284:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1351,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "11264:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11264:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1357,
															"nodeType": "RevertStatement",
															"src": "11257:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1360,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "11315:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11317:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 846,
																"src": "11315:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1365,
															"indexExpression": {
																"id": 1362,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "11329:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11315:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1366,
														"indexExpression": {
															"id": 1363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "11336:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11315:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1367,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11347:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11315:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "11315:37:3"
											},
											{
												"condition": {
													"id": 1370,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "11366:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "11362:76:3",
												"trueBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "11377:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1372,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "11405:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1373,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "11412:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1374,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "11421:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1371,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "11396:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11396:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1376,
															"nodeType": "EmitStatement",
															"src": "11391:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "10116:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10966:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10983:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10975:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10998:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10990:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "11007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11027:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "11022:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11022:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10974:63:3"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:3"
									},
									"scope": 1429,
									"src": "10957:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "11815:387:3",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11833:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "11825:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11825:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"arguments": [
														{
															"id": 1393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "11862:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "11869:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1392,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "11852:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11825:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "11891:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11915:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11915:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1398,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11910:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11924:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11910:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11891:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "11887:309:3",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "11929:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1404,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "11947:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "11966:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11947:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1414,
															"nodeType": "IfStatement",
															"src": "11943:130:3",
															"trueBody": {
																"id": 1413,
																"nodeType": "Block",
																"src": "11973:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1408,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "12025:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1409,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "12034:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1410,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12052:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1407,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1949,
																				"src": "11998:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11998:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1412,
																		"nodeType": "RevertStatement",
																		"src": "11991:67:3"
																	}
																]
															}
														},
														{
															"id": 1424,
															"nodeType": "UncheckedBlock",
															"src": "12086:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1416,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "12123:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1417,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "12130:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1418,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "12139:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1419,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12158:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12139:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12165:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1415,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1312,
																				1380
																			],
																			"referencedDeclaration": 1380,
																			"src": "12114:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12114:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1423,
																	"nodeType": "ExpressionStatement",
																	"src": "12114:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "11450:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11735:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11774:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11766:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11791:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11783:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11783:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11750:47:3"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11815:0:3"
									},
									"scope": 1429,
									"src": "11726:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1430,
							"src": "1281:10923:3",
							"usedErrors": [
								379,
								382,
								1930,
								1935,
								1940,
								1949,
								1954,
								1959
							],
							"usedEvents": [
								387,
								2371,
								2380
							]
						}
					],
					"src": "105:12100:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1475
						],
						"Initializable": [
							630
						]
					},
					"id": 1476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 631,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1432,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1435,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "728:13:4"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1434,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1475,
							"linearizedBaseContracts": [
								1475,
								630
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1439,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1438,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1475,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1444,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1475,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1453,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1455,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1475,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1462,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1464,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1475,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1470,
												"id": 1472,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1475,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1476,
							"src": "688:505:4",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1475
						],
						"Initializable": [
							630
						],
						"PausableUpgradeable": [
							1635
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 1476,
							"src": "128:67:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "136:18:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 631,
							"src": "196:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1480,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "204:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1483,
										"name": "Initializable",
										"nameLocations": [
											"742:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "742:13:5"
									},
									"id": 1484,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:5"
								},
								{
									"baseName": {
										"id": 1485,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "757:18:5"
									},
									"id": 1486,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:5"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1482,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1635,
							"linearizedBaseContracts": [
								1635,
								1475,
								630
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:5",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 1490,
									"members": [
										{
											"constant": false,
											"id": 1489,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 1490,
											"src": "886:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1488,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:5",
									"nodeType": "StructDefinition",
									"scope": 1635,
									"src": "853:52:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1493,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "1023:117:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1491,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 1492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "1227:82:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:5",
													"nodeType": "YulBlock",
													"src": "1246:57:5",
													"statements": [
														{
															"nativeSrc": "1260:33:5",
															"nodeType": "YulAssignment",
															"src": "1260:33:5",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:5",
																"nodeType": "YulIdentifier",
																"src": "1270:23:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1497,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1493,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:5",
														"valueSize": 1
													}
												],
												"id": 1499,
												"nodeType": "InlineAssembly",
												"src": "1237:66:5"
											}
										]
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1200:25:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 1496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1495,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1490,
														"src": "1200:15:5"
													},
													"referencedDeclaration": 1490,
													"src": "1200:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:5"
									},
									"scope": 1635,
									"src": "1147:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1506,
									"name": "Paused",
									"nameLocation": "1399:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1406:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:5"
									},
									"src": "1393:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1511,
									"name": "Unpaused",
									"nameLocation": "1510:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1519:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:5"
									},
									"src": "1504:32:5"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:5",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1514,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:5"
									},
									"src": "1623:22:5"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:5",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1517,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:5"
									},
									"src": "1736:22:5"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "1969:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1520,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "1979:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "1979:19:5"
											},
											{
												"id": 1523,
												"nodeType": "PlaceholderStatement",
												"src": "2008:1:5"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "1764:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1525,
									"name": "whenNotPaused",
									"nameLocation": "1953:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1966:2:5"
									},
									"src": "1944:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "2216:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1528,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2226:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2226:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "2226:16:5"
											},
											{
												"id": 1531,
												"nodeType": "PlaceholderStatement",
												"src": "2252:1:5"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "2022:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1533,
									"name": "whenPaused",
									"nameLocation": "2203:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:2:5"
									},
									"src": "2194:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "2319:7:5",
										"statements": []
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1536,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1535,
												"name": "onlyInitializing",
												"nameLocations": [
													"2302:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2302:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2302:16:5"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "2275:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:2:5"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:0:5"
									},
									"scope": 1635,
									"src": "2266:60:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "2395:7:5",
										"statements": []
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1541,
												"name": "onlyInitializing",
												"nameLocations": [
													"2378:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2378:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2378:16:5"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "2341:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:2:5"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:0:5"
									},
									"scope": 1635,
									"src": "2332:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "2549:92:5",
										"statements": [
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2583:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1560,
														"src": "2559:25:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1552,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1551,
																"name": "PausableStorage",
																"nameLocations": [
																	"2559:15:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1490,
																"src": "2559:15:5"
															},
															"referencedDeclaration": 1490,
															"src": "2559:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1554,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2587:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1490_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2559:49:5"
											},
											{
												"expression": {
													"expression": {
														"id": 1557,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "2625:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2627:7:5",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1489,
													"src": "2625:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1559,
												"nodeType": "Return",
												"src": "2618:16:5"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "2407:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2505:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2511:2:5"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2543:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2543:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:6:5"
									},
									"scope": 1635,
									"src": "2496:145:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2760:77:5",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1565,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "2774:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2774:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "2770:61:5",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "2784:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1567,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "2805:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2805:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1569,
															"nodeType": "RevertStatement",
															"src": "2798:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "2647:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2718:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:2:5"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2760:0:5"
									},
									"scope": 1635,
									"src": "2709:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "2957:78:5",
										"statements": [
											{
												"condition": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2971:9:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1577,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2972:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2972:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "2967:62:5",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "2982:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1580,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "3003:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3003:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1582,
															"nodeType": "RevertStatement",
															"src": "2996:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "2843:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2918:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:2:5"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2957:0:5"
									},
									"scope": 1635,
									"src": "2909:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "3219:127:5",
										"statements": [
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3253:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "3229:25:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1593,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1592,
																"name": "PausableStorage",
																"nameLocations": [
																	"3229:15:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1490,
																"src": "3229:15:5"
															},
															"referencedDeclaration": 1490,
															"src": "3229:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1595,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3257:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1490_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3229:49:5"
											},
											{
												"expression": {
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1598,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "3288:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3290:7:5",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "3288:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3300:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3288:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "3288:16:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1605,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "3326:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3326:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1604,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "3319:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3319:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "EmitStatement",
												"src": "3314:25:5"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "3041:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1589,
												"name": "whenNotPaused",
												"nameLocations": [
													"3205:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "3205:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3205:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "3179:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:2:5"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:5"
									},
									"scope": 1635,
									"src": "3170:176:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "3526:130:5",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3560:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "3536:25:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1617,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1616,
																"name": "PausableStorage",
																"nameLocations": [
																	"3536:15:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1490,
																"src": "3536:15:5"
															},
															"referencedDeclaration": 1490,
															"src": "3536:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1619,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3564:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1490_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3536:49:5"
											},
											{
												"expression": {
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1622,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "3595:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1490_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3597:7:5",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "3595:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3607:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3595:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "3595:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1629,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "3636:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3636:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1628,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "3627:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "EmitStatement",
												"src": "3622:27:5"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "3352:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "whenPaused",
												"nameLocations": [
													"3515:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1533,
												"src": "3515:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3515:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "3487:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:5"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3526:0:5"
									},
									"scope": 1635,
									"src": "3478:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1636,
							"src": "701:2957:5",
							"usedErrors": [
								379,
								382,
								1514,
								1517
							],
							"usedEvents": [
								387,
								1506,
								1511
							]
						}
					],
					"src": "102:3557:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							630
						],
						"ReentrancyGuardUpgradeable": [
							1764
						]
					},
					"id": 1765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1637,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 631,
							"src": "134:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1638,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "142:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1641,
										"name": "Initializable",
										"nameLocations": [
											"1142:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1142:13:6"
									},
									"id": 1642,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:13:6"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "199:894:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1764,
							"linearizedBaseContracts": [
								1764,
								630
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "1112:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1645,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1935:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1910:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1643,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1910:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1949:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1648,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1981:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1956:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1991:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "1999:73:6",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 1652,
									"members": [
										{
											"constant": false,
											"id": 1651,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "2125:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1652,
											"src": "2117:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1650,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "2084:22:6",
									"nodeType": "StructDefinition",
									"scope": 1764,
									"src": "2077:62:6",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1655,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2289:30:6",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "2264:124:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1653,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2264:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 1654,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2322:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "2489:89:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2508:64:6",
													"nodeType": "YulBlock",
													"src": "2508:64:6",
													"statements": [
														{
															"nativeSrc": "2522:40:6",
															"nodeType": "YulAssignment",
															"src": "2522:40:6",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2532:30:6",
																"nodeType": "YulIdentifier",
																"src": "2532:30:6"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2522:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": true,
														"src": "2522:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": false,
														"src": "2532:30:6",
														"valueSize": 1
													}
												],
												"id": 1661,
												"nodeType": "InlineAssembly",
												"src": "2499:73:6"
											}
										]
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2404:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:6"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "2455:32:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 1658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1657,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2455:22:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1652,
														"src": "2455:22:6"
													},
													"referencedDeclaration": 1652,
													"src": "2455:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:6"
									},
									"scope": 1764,
									"src": "2395:183:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "2584:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1666,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2647:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:6"
									},
									"src": "2641:37:6"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "2744:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1671,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "2754:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "2754:34:6"
											}
										]
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1668,
												"name": "onlyInitializing",
												"nameLocations": [
													"2727:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2727:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2727:16:6"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2693:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:6"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:6"
									},
									"scope": 1764,
									"src": "2684:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "2871:113:6",
										"statements": [
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2912:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2881:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 1681,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1680,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2881:22:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "2881:22:6"
															},
															"referencedDeclaration": 1652,
															"src": "2881:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1683,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "2916:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1652_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:63:6"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1686,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "2954:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:7:6",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "2954:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1689,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "2966:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2954:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "2954:23:6"
											}
										]
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1677,
												"name": "onlyInitializing",
												"nameLocations": [
													"2854:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2854:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:16:6"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2810:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:6"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:6"
									},
									"scope": 1764,
									"src": "2801:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "3385:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1696,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "3395:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "3395:21:6"
											},
											{
												"id": 1699,
												"nodeType": "PlaceholderStatement",
												"src": "3426:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1700,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "3437:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "3437:20:6"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "2990:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1704,
									"name": "nonReentrant",
									"nameLocation": "3370:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:2:6"
									},
									"src": "3361:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "3509:345:6",
										"statements": [
											{
												"assignments": [
													1709
												],
												"declarations": [
													{
														"constant": false,
														"id": 1709,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3550:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "3519:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 1708,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1707,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3519:22:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "3519:22:6"
															},
															"referencedDeclaration": 1652,
															"src": "3519:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1710,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "3554:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1652_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:63:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1713,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "3670:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3672:7:6",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "3670:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1715,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "3683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1721,
												"nodeType": "IfStatement",
												"src": "3666:88:6",
												"trueBody": {
													"id": 1720,
													"nodeType": "Block",
													"src": "3692:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1717,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "3713:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3713:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1719,
															"nodeType": "RevertStatement",
															"src": "3706:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1722,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "3828:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3830:7:6",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "3828:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1725,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "3840:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3828:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "3828:19:6"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3479:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:6"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:6"
									},
									"scope": 1764,
									"src": "3470:384:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "3898:245:6",
										"statements": [
											{
												"assignments": [
													1734
												],
												"declarations": [
													{
														"constant": false,
														"id": 1734,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3939:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "3908:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 1733,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1732,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3908:22:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "3908:22:6"
															},
															"referencedDeclaration": 1652,
															"src": "3908:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1735,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "3943:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1652_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:63:6"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1738,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "4113:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4115:7:6",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "4113:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1741,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "4125:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "4113:23:6"
											}
										]
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3869:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:2:6"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:6"
									},
									"scope": 1764,
									"src": "3860:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "4386:117:6",
										"statements": [
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4427:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "4396:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 1752,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1751,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4396:22:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "4396:22:6"
															},
															"referencedDeclaration": 1652,
															"src": "4396:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1754,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "4431:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1652_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:63:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1757,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4476:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$1652_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4478:7:6",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "4476:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1759,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "4489:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1761,
												"nodeType": "Return",
												"src": "4469:27:6"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "4149:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4331:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4354:2:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "4380:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4380:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4379:6:6"
									},
									"scope": 1764,
									"src": "4322:181:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1765,
							"src": "1094:3411:6",
							"usedErrors": [
								379,
								382,
								1666
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "109:4397:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1804
						],
						"IERC165": [
							2881
						],
						"Initializable": [
							630
						]
					},
					"id": 1805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1805,
							"sourceUnit": 2882,
							"src": "140:80:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1767,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2881,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1805,
							"sourceUnit": 631,
							"src": "221:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "229:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1772,
										"name": "Initializable",
										"nameLocations": [
											"808:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "808:13:7"
									},
									"id": 1773,
									"nodeType": "InheritanceSpecifier",
									"src": "808:13:7"
								},
								{
									"baseName": {
										"id": 1774,
										"name": "IERC165",
										"nameLocations": [
											"823:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2881,
										"src": "823:7:7"
									},
									"id": 1775,
									"nodeType": "InheritanceSpecifier",
									"src": "823:7:7"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1771,
								"nodeType": "StructuredDocumentation",
								"src": "289:479:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1804,
							"linearizedBaseContracts": [
								1804,
								2881,
								630
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "787:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "888:7:7",
										"statements": []
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1777,
												"name": "onlyInitializing",
												"nameLocations": [
													"871:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "871:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "871:16:7"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "846:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:7"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:7"
									},
									"scope": 1804,
									"src": "837:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "962:7:7",
										"statements": []
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1784,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1783,
												"name": "onlyInitializing",
												"nameLocations": [
													"945:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "945:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:16:7"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "910:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:2:7"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:7"
									},
									"scope": 1804,
									"src": "901:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2880
									],
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1117:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "1134:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1797,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "1154:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2881_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2881_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1796,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1149:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1149:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2881",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1163:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1149:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1134:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1801,
												"nodeType": "Return",
												"src": "1127:47:7"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "974:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1044:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1069:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1062:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:20:7"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1111:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:6:7"
									},
									"scope": 1804,
									"src": "1035:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1805,
							"src": "769:414:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1070:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1887
						]
					},
					"id": 1888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1807,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:8",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 1887,
							"linearizedBaseContracts": [
								1887
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:8",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1814,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "357:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "374:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:8"
									},
									"src": "318:76:8"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:8",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1817,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:8"
									},
									"src": "553:37:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:8",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1826,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "878:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "900:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "935:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1823,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:8"
									},
									"src": "855:110:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:8",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1835,
									"name": "RoleGranted",
									"nameLocation": "1277:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1289:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1311:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1336:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:8"
									},
									"src": "1271:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:8",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1844,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1664:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1686:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1711:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:8"
									},
									"src": "1646:89:8"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:8",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1839:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1853:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:8"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1893:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:8"
									},
									"scope": 1887,
									"src": "1822:77:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:8",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2116:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:8"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2153:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:8"
									},
									"scope": 1887,
									"src": "2094:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:8",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2431:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2445:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:8"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:8"
									},
									"scope": 1887,
									"src": "2412:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:8",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "2725:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "2739:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:8"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:8"
									},
									"scope": 1887,
									"src": "2705:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:8",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3289:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1880,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3303:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:8"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:8"
									},
									"scope": 1887,
									"src": "3267:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1888,
							"src": "226:3116:8",
							"usedErrors": [
								1814,
								1817
							],
							"usedEvents": [
								1826,
								1835,
								1844
							]
						}
					],
					"src": "109:3234:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1908
						]
					},
					"id": 1909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1890,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:9",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1908,
							"linearizedBaseContracts": [
								1908
							],
							"name": "IERC1967",
							"nameLocation": "245:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:9",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1895,
									"name": "Upgraded",
									"nameLocation": "339:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "348:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:9"
									},
									"src": "333:47:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:9",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1902,
									"name": "AdminChanged",
									"nameLocation": "464:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "477:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "500:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:9"
									},
									"src": "458:60:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:9",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1907,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "609:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:9"
									},
									"src": "588:45:9"
								}
							],
							"scope": 1909,
							"src": "235:400:9",
							"usedErrors": [],
							"usedEvents": [
								1895,
								1902,
								1907
							]
						}
					],
					"src": "107:529:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1918
						]
					},
					"id": 1919,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1911,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:10",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1918,
							"linearizedBaseContracts": [
								1918
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:10",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:10"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "869:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:10"
									},
									"scope": 1918,
									"src": "821:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1919,
							"src": "344:536:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							2055
						],
						"IERC20Errors": [
							1960
						],
						"IERC721Errors": [
							2008
						]
					},
					"id": 2056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1920,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1921,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:11",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1960,
							"linearizedBaseContracts": [
								1960
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:11",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1930,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "654:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "670:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "687:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:11"
									},
									"src": "623:80:11"
								},
								{
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:11",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1935,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "891:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:11"
									},
									"src": "866:41:11"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:11",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1940,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "1104:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:11"
									},
									"src": "1077:45:11"
								},
								{
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:11",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1949,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1511:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1528:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1547:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:11"
									},
									"src": "1478:85:11"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:11",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1954,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1775:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:11"
									},
									"src": "1748:45:11"
								},
								{
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:11",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1959,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "2025:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:11"
									},
									"src": "1999:43:11"
								}
							],
							"scope": 2056,
							"src": "280:1764:11",
							"usedErrors": [
								1930,
								1935,
								1940,
								1949,
								1954,
								1959
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1961,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:11",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 2008,
							"linearizedBaseContracts": [
								2008
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:11",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1966,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2469:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:11"
									},
									"src": "2444:40:11"
								},
								{
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:11",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1971,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "2656:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:11"
									},
									"src": "2627:46:11"
								},
								{
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:11",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1980,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3000:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3016:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3033:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:11"
									},
									"src": "2973:75:11"
								},
								{
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:11",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1985,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "3237:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:11"
									},
									"src": "3211:42:11"
								},
								{
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:11",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1990,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3451:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:11"
									},
									"src": "3423:46:11"
								},
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:11",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1997,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "3760:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "3778:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:11"
									},
									"src": "3727:68:11"
								},
								{
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:11",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2002,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "4008:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:11"
									},
									"src": "3980:46:11"
								},
								{
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:11",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2007,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "4262:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:11"
									},
									"src": "4234:46:11"
								}
							],
							"scope": 2056,
							"src": "2190:2092:11",
							"usedErrors": [
								1966,
								1971,
								1980,
								1985,
								1990,
								1997,
								2002,
								2007
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2009,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:11",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2055,
							"linearizedBaseContracts": [
								2055
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:11",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2020,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "4860:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "4876:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "4893:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "4909:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:11"
									},
									"src": "4827:99:11"
								},
								{
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:11",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2025,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5116:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:11"
									},
									"src": "5089:43:11"
								},
								{
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:11",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2030,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "5331:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:11"
									},
									"src": "5302:47:11"
								},
								{
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:11",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2037,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5651:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5669:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:11"
									},
									"src": "5616:68:11"
								},
								{
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:11",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2042,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "5898:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:11"
									},
									"src": "5869:47:11"
								},
								{
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:11",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2047,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "6153:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:11"
									},
									"src": "6124:47:11"
								},
								{
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:11",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2054,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "6494:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "6513:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:11"
									},
									"src": "6462:73:11"
								}
							],
							"scope": 2056,
							"src": "4430:2107:11",
							"usedErrors": [
								2020,
								2025,
								2030,
								2037,
								2042,
								2047,
								2054
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2723
						],
						"ERC1967Utils": [
							2349
						],
						"IBeacon": [
							2359
						],
						"IERC1967": [
							1908
						],
						"StorageSlot": [
							2869
						]
					},
					"id": 2350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 2059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2350,
							"sourceUnit": 2360,
							"src": "140:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2058,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2359,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 2061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2350,
							"sourceUnit": 1909,
							"src": "187:55:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2060,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1908,
										"src": "195:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 2063,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2350,
							"sourceUnit": 2724,
							"src": "243:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2062,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2723,
										"src": "251:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 2065,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2350,
							"sourceUnit": 2870,
							"src": "292:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2064,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2869,
										"src": "300:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2066,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:12",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2349,
							"linearizedBaseContracts": [
								2349
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:12",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 2070,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "763:114:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2068,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 2069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:12",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 2075,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "993:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:12"
									},
									"src": "958:59:12"
								},
								{
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:12",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 2080,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "1114:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:12"
									},
									"src": "1088:41:12"
								},
								{
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:12",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 2085,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1228:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:12"
									},
									"src": "1201:43:12"
								},
								{
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:12",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 2088,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:12"
									},
									"src": "1337:26:12"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "1502:77:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2096,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "1546:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2094,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "1519:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2780,
															"src": "1519:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2750,
													"src": "1519:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2093,
												"id": 2099,
												"nodeType": "Return",
												"src": "1512:60:12"
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:12",
										"text": " @dev Returns the current implementation address."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:12"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1493:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:12"
									},
									"scope": 2349,
									"src": "1441:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "1734:218:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2107,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "1748:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "1744:119:12",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "1784:79:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2113,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "1834:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2112,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "1805:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2115,
															"nodeType": "RevertStatement",
															"src": "1798:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "1899:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2118,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2869,
																	"src": "1872:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2780,
																"src": "1872:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2750,
														"src": "1872:53:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2124,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "1928:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:12"
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:12",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1699:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:12"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:12"
									},
									"scope": 2349,
									"src": "1671:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "2345:263:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2137,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "2374:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2136,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "2355:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2143,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "2425:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2140,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2407:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1908_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:12",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1895,
														"src": "2407:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "EmitStatement",
												"src": "2402:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2146,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "2458:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2161,
													"nodeType": "Block",
													"src": "2559:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2158,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "2573:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2160,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:12"
														}
													]
												},
												"id": 2162,
												"nodeType": "IfStatement",
												"src": "2454:148:12",
												"trueBody": {
													"id": 2157,
													"nodeType": "Block",
													"src": "2475:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2153,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2131,
																		"src": "2518:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2154,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "2537:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2150,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2723,
																		"src": "2489:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2723_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2640,
																	"src": "2489:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2156,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:12",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "2290:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "2317:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:12"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:12"
									},
									"scope": 2349,
									"src": "2264:344:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:12",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 2168,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "2829:105:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2166,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 2167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "3339:68:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2176,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "3383:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2174,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "3356:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2780,
															"src": "3356:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2750,
													"src": "3356:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2173,
												"id": 2179,
												"nodeType": "Return",
												"src": "3349:51:12"
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:12",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:12"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3330:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:12"
									},
									"scope": 2349,
									"src": "3287:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "3535:172:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2187,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "3549:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2188,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "IfStatement",
												"src": "3545:91:12",
												"trueBody": {
													"id": 2200,
													"nodeType": "Block",
													"src": "3573:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2194,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2193,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "3594:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2199,
															"nodeType": "RevertStatement",
															"src": "3587:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2205,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "3672:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2202,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2869,
																	"src": "3645:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2780,
																"src": "3645:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2750,
														"src": "3645:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2208,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "3692:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:12"
											}
										]
									},
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:12",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "3509:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:12"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:12"
									},
									"scope": 2349,
									"src": "3490:217:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "3875:94:12",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2221,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "3912:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2223,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3924:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2218,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "3890:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1908_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:12",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1902,
														"src": "3890:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "EmitStatement",
												"src": "3885:48:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2227,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3953:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2226,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "3943:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2229,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:12"
											}
										]
									},
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:12",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "3848:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:12"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:12"
									},
									"scope": 2349,
									"src": "3827:142:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:12",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 2235,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "4246:106:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2233,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "4468:69:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2243,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "4512:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2241,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "4485:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2780,
															"src": "4485:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2750,
													"src": "4485:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2240,
												"id": 2246,
												"nodeType": "Return",
												"src": "4478:52:12"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:12",
										"text": " @dev Returns the current beacon."
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:12"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "4459:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:12"
									},
									"scope": 2349,
									"src": "4415:122:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "4667:390:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2254,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "4681:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2264,
												"nodeType": "IfStatement",
												"src": "4677:95:12",
												"trueBody": {
													"id": 2263,
													"nodeType": "Block",
													"src": "4709:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2260,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "4751:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2259,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "4730:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2262,
															"nodeType": "RevertStatement",
															"src": "4723:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2268,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "4809:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2265,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2869,
																	"src": "4782:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2869_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2780,
																"src": "4782:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2751_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2750,
														"src": "4782:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2271,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "4830:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:12"
											},
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 2293,
														"src": "4850:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2274,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2277,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "4889:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2276,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "4881:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2359_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2359",
																"typeString": "contract IBeacon"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:12",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2358,
														"src": "4881:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2282,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "4930:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2292,
												"nodeType": "IfStatement",
												"src": "4926:125:12",
												"trueBody": {
													"id": 2291,
													"nodeType": "Block",
													"src": "4969:82:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2288,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2275,
																		"src": "5019:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2287,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "4990:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2290,
															"nodeType": "RevertStatement",
															"src": "4983:57:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:12",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4640:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:12"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:12"
									},
									"scope": 2349,
									"src": "4620:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "5661:263:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2303,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "5682:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2302,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2294,
														"src": "5671:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2309,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "5731:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2306,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "5707:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1908_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:12",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1907,
														"src": "5707:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2311,
												"nodeType": "EmitStatement",
												"src": "5702:39:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "5756:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "5875:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2328,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "5889:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2330,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:12"
														}
													]
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "5752:166:12",
												"trueBody": {
													"id": 2327,
													"nodeType": "Block",
													"src": "5773:96:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2320,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2297,
																						"src": "5824:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2319,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2359,
																					"src": "5816:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2359_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2359",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:12",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2358,
																			"src": "5816:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2324,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "5853:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2316,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2723,
																		"src": "5787:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2723_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2640,
																	"src": "5787:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2326,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:12",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5614:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5633:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:12"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:12"
									},
									"scope": 2349,
									"src": "5582:342:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "6149:86:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2338,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2346,
												"nodeType": "IfStatement",
												"src": "6159:70:12",
												"trueBody": {
													"id": 2345,
													"nodeType": "Block",
													"src": "6178:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2342,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "6199:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2344,
															"nodeType": "RevertStatement",
															"src": "6192:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:12",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:12"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:12"
									},
									"scope": 2349,
									"src": "6113:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2350,
							"src": "496:5741:12",
							"usedErrors": [
								2075,
								2080,
								2085,
								2088
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2359
						]
					},
					"id": 2360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2352,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:13",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2359,
							"linearizedBaseContracts": [
								2359
							],
							"name": "IBeacon",
							"nameLocation": "224:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:13",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:13"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "460:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:13"
									},
									"scope": 2359,
									"src": "411:58:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2360,
							"src": "214:257:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2437
						]
					},
					"id": 2438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2362,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:14",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2437,
							"linearizedBaseContracts": [
								2437
							],
							"name": "IERC20",
							"nameLocation": "214:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:14",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2371,
									"name": "Transfer",
									"nameLocation": "396:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "405:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "427:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "447:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:14"
									},
									"src": "390:72:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:14",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2380,
									"name": "Approval",
									"nameLocation": "627:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "636:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "659:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "684:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:14"
									},
									"src": "621:78:14"
								},
								{
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:14",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:14"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "821:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:14"
									},
									"scope": 2437,
									"src": "775:55:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:14",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "931:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:14"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "971:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:14"
									},
									"scope": 2437,
									"src": "912:68:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:14",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1222:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1234:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:14"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1267:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:14"
									},
									"scope": 2437,
									"src": "1204:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:14",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "1567:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "1582:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:14"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "1622:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:14"
									},
									"scope": 2437,
									"src": "1548:83:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:14",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "2326:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "2343:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:14"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "2376:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:14"
									},
									"scope": 2437,
									"src": "2309:73:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:14",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "2712:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "2726:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "2738:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:14"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "2771:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:14"
									},
									"scope": 2437,
									"src": "2690:87:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2438,
							"src": "204:2575:14",
							"usedErrors": [],
							"usedEvents": [
								2371,
								2380
							]
						}
					],
					"src": "106:2674:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2437
						],
						"IERC20Metadata": [
							2463
						]
					},
					"id": 2464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2464,
							"sourceUnit": 2438,
							"src": "151:37:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2440,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2437,
										"src": "159:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2443,
										"name": "IERC20",
										"nameLocations": [
											"306:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2437,
										"src": "306:6:15"
									},
									"id": 2444,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:15"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2442,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:15",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2463,
							"linearizedBaseContracts": [
								2463,
								2437
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:15",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:15"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "417:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:15"
									},
									"scope": 2463,
									"src": "378:54:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:15",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:15"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "540:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:15"
									},
									"scope": 2463,
									"src": "499:56:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2457,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:15",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:15"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "674:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2459,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:15"
									},
									"scope": 2463,
									"src": "631:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2464,
							"src": "278:405:15",
							"usedErrors": [],
							"usedEvents": [
								2371,
								2380
							]
						}
					],
					"src": "125:559:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2723
						],
						"Errors": [
							2745
						]
					},
					"id": 2724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2724,
							"sourceUnit": 2746,
							"src": "127:36:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2466,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2745,
										"src": "135:6:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2468,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:16",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2723,
							"linearizedBaseContracts": [
								2723
							],
							"name": "Address",
							"nameLocation": "241:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:16",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2473,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "358:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:16"
									},
									"src": "335:39:16"
								},
								{
									"body": {
										"id": 2520,
										"nodeType": "Block",
										"src": "1361:294:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2483,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2723",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2723",
																		"typeString": "library Address"
																	}
																],
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:16",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2486,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2478,
														"src": "1399:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2500,
												"nodeType": "IfStatement",
												"src": "1371:125:16",
												"trueBody": {
													"id": 2499,
													"nodeType": "Block",
													"src": "1407:89:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2493,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2723",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2723",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2491,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:16",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:16",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2496,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2478,
																		"src": "1478:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2488,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "1428:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2745_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:16",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2733,
																	"src": "1428:26:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2498,
															"nodeType": "RevertStatement",
															"src": "1421:64:16"
														}
													]
												}
											},
											{
												"assignments": [
													2502,
													2504
												],
												"declarations": [
													{
														"constant": false,
														"id": 2502,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2520,
														"src": "1507:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2504,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 2520,
														"src": "1521:23:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2511,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2505,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "1548:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:16",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "1570:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:16"
											},
											{
												"condition": {
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:16",
													"subExpression": {
														"id": 2512,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "1596:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2519,
												"nodeType": "IfStatement",
												"src": "1591:58:16",
												"trueBody": {
													"id": 2518,
													"nodeType": "Block",
													"src": "1605:44:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2515,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2504,
																		"src": "1627:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2514,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "1619:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2517,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:16",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "1309:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:16",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "1336:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:16"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:16"
									},
									"scope": 2723,
									"src": "1290:365:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "2589:62:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2532,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "2628:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "2636:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2531,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "2606:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2530,
												"id": 2536,
												"nodeType": "Return",
												"src": "2599:45:16"
											}
										]
									},
									"documentation": {
										"id": 2522,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:16",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2522:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2538:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:16"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2575:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:16"
									},
									"scope": 2723,
									"src": "2500:151:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "3088:294:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2552,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2723",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2723",
																		"typeString": "library Address"
																	}
																],
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:16",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2555,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2545,
														"src": "3126:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2569,
												"nodeType": "IfStatement",
												"src": "3098:123:16",
												"trueBody": {
													"id": 2568,
													"nodeType": "Block",
													"src": "3133:88:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2562,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2723",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2723",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:16",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:16",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2565,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2545,
																		"src": "3204:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2557,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "3154:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2745_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:16",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2733,
																	"src": "3154:26:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2567,
															"nodeType": "RevertStatement",
															"src": "3147:63:16"
														}
													]
												}
											},
											{
												"assignments": [
													2571,
													2573
												],
												"declarations": [
													{
														"constant": false,
														"id": 2571,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "3231:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2573,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "3245:23:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2572,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2580,
												"initialValue": {
													"arguments": [
														{
															"id": 2578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "3298:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2574,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "3272:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:16",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "3291:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2582,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "3347:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2583,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "3355:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2584,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "3364:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2581,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "3320:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2549,
												"id": 2586,
												"nodeType": "Return",
												"src": "3313:62:16"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:16",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "3006:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "3022:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "3041:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:16"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "3074:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:16"
									},
									"scope": 2723,
									"src": "2975:407:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "3621:154:16",
										"statements": [
											{
												"assignments": [
													2599,
													2601
												],
												"declarations": [
													{
														"constant": false,
														"id": 2599,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2613,
														"src": "3632:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2601,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 2613,
														"src": "3646:23:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2600,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2606,
												"initialValue": {
													"arguments": [
														{
															"id": 2604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "3691:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2602,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "3673:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:16",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "3740:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2609,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "3748:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2610,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "3757:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2607,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "3713:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2597,
												"id": 2612,
												"nodeType": "Return",
												"src": "3706:62:16"
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:16",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "3549:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "3565:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:16"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "3607:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:16"
									},
									"scope": 2723,
									"src": "3521:254:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "4013:156:16",
										"statements": [
											{
												"assignments": [
													2625,
													2627
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2639,
														"src": "4024:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 2639,
														"src": "4038:23:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2632,
												"initialValue": {
													"arguments": [
														{
															"id": 2630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "4085:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "4065:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:16",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2634,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "4134:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2635,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "4142:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2636,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "4151:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2633,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "4107:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2623,
												"id": 2638,
												"nodeType": "Return",
												"src": "4100:62:16"
											}
										]
									},
									"documentation": {
										"id": 2615,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:16",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "3946:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "3962:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:16"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "3999:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:16"
									},
									"scope": 2723,
									"src": "3916:253:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "4595:424:16",
										"statements": [
											{
												"condition": {
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:16",
													"subExpression": {
														"id": 2652,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2645,
														"src": "4610:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2677,
													"nodeType": "Block",
													"src": "4669:344:16",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2659,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2647,
																			"src": "4857:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:16",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2663,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2643,
																				"src": "4883:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:16",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:16",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2674,
															"nodeType": "IfStatement",
															"src": "4853:119:16",
															"trueBody": {
																"id": 2673,
																"nodeType": "Block",
																"src": "4908:64:16",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2670,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2643,
																					"src": "4950:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2669,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2473,
																				"src": "4933:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2672,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:16"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2675,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "4992:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2651,
															"id": 2676,
															"nodeType": "Return",
															"src": "4985:17:16"
														}
													]
												},
												"id": 2678,
												"nodeType": "IfStatement",
												"src": "4605:408:16",
												"trueBody": {
													"id": 2658,
													"nodeType": "Block",
													"src": "4619:44:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2655,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2647,
																		"src": "4641:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2654,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "4633:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2657,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:16",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4482:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4506:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4528:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:16"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4581:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:16"
									},
									"scope": 2723,
									"src": "4437:582:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "5323:122:16",
										"statements": [
											{
												"condition": {
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:16",
													"subExpression": {
														"id": 2690,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "5338:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2699,
													"nodeType": "Block",
													"src": "5397:42:16",
													"statements": [
														{
															"expression": {
																"id": 2697,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2685,
																"src": "5418:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2689,
															"id": 2698,
															"nodeType": "Return",
															"src": "5411:17:16"
														}
													]
												},
												"id": 2700,
												"nodeType": "IfStatement",
												"src": "5333:106:16",
												"trueBody": {
													"id": 2696,
													"nodeType": "Block",
													"src": "5347:44:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2693,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2685,
																		"src": "5369:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2692,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "5361:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2695,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:16",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "5247:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "5261:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:16"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "5309:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:16"
									},
									"scope": 2723,
									"src": "5221:224:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "5614:432:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2708,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "5690:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2719,
													"nodeType": "Block",
													"src": "5989:51:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2714,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "6010:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2745_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:16",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2736,
																	"src": "6010:17:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2718,
															"nodeType": "RevertStatement",
															"src": "6003:26:16"
														}
													]
												},
												"id": 2720,
												"nodeType": "IfStatement",
												"src": "5686:354:16",
												"trueBody": {
													"id": 2713,
													"nodeType": "Block",
													"src": "5713:270:16",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:16",
																"nodeType": "YulBlock",
																"src": "5840:133:16",
																"statements": [
																	{
																		"nativeSrc": "5858:40:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:16"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:16"
																			},
																			"nativeSrc": "5881:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:16"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:16",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:16",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:16",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:16"
																					},
																					"nativeSrc": "5922:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:16"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:16",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:16"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:16"
																			},
																			"nativeSrc": "5915:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:16"
																		},
																		"nativeSrc": "5915:44:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:16"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 2705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:16",
																	"valueSize": 1
																},
																{
																	"declaration": 2705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:16",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2712,
															"nodeType": "InlineAssembly",
															"src": "5815:158:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:16",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "5576:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:16"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:16"
									},
									"scope": 2723,
									"src": "5559:487:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2724,
							"src": "233:5815:16",
							"usedErrors": [
								2473
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2745
						]
					},
					"id": 2746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2726,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:17",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2745,
							"linearizedBaseContracts": [
								2745
							],
							"name": "Errors",
							"nameLocation": "419:6:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2727,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:17",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2733,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "557:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "574:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:17"
									},
									"src": "531:59:17"
								},
								{
									"documentation": {
										"id": 2734,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:17",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2736,
									"name": "FailedCall",
									"nameLocation": "696:10:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:17"
									},
									"src": "690:19:17"
								},
								{
									"documentation": {
										"id": 2737,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:17",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2739,
									"name": "FailedDeployment",
									"nameLocation": "772:16:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:17"
									},
									"src": "766:25:17"
								},
								{
									"documentation": {
										"id": 2740,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:17",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2744,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "884:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:17"
									},
									"src": "860:33:17"
								}
							],
							"scope": 2746,
							"src": "411:484:17",
							"usedErrors": [
								2733,
								2736,
								2739,
								2744
							],
							"usedEvents": []
						}
					],
					"src": "100:796:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2869
						]
					},
					"id": 2870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2748,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:18",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2869,
							"linearizedBaseContracts": [
								2869
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2751,
									"members": [
										{
											"constant": false,
											"id": 2750,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2751,
											"src": "1462:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2749,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1433:49:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2754,
									"members": [
										{
											"constant": false,
											"id": 2753,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2754,
											"src": "1517:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2752,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1488:46:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2757,
									"members": [
										{
											"constant": false,
											"id": 2756,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2757,
											"src": "1569:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2755,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1540:49:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2760,
									"members": [
										{
											"constant": false,
											"id": 2759,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2760,
											"src": "1624:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2758,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1595:49:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2763,
									"members": [
										{
											"constant": false,
											"id": 2762,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2763,
											"src": "1678:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2761,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1650:47:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2766,
									"members": [
										{
											"constant": false,
											"id": 2765,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2766,
											"src": "1731:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2764,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1703:47:18",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2769,
									"members": [
										{
											"constant": false,
											"id": 2768,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1783:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2767,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:18",
									"nodeType": "StructDefinition",
									"scope": 2869,
									"src": "1756:45:18",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "1983:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:18",
													"nodeType": "YulBlock",
													"src": "2018:38:18",
													"statements": [
														{
															"nativeSrc": "2032:14:18",
															"nodeType": "YulAssignment",
															"src": "2032:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:18",
																"nodeType": "YulIdentifier",
																"src": "2042:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2776,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2772,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2778,
												"nodeType": "InlineAssembly",
												"src": "1993:63:18"
											}
										]
									},
									"documentation": {
										"id": 2770,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:18",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "1923:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2771,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:18"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "1960:21:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2774,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2751,
														"src": "1960:11:18"
													},
													"referencedDeclaration": 2751,
													"src": "1960:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2751_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:18"
									},
									"scope": 2869,
									"src": "1899:163:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "2243:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:18",
													"nodeType": "YulBlock",
													"src": "2278:38:18",
													"statements": [
														{
															"nativeSrc": "2292:14:18",
															"nodeType": "YulAssignment",
															"src": "2292:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:18",
																"nodeType": "YulIdentifier",
																"src": "2302:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2787,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2783,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2789,
												"nodeType": "InlineAssembly",
												"src": "2253:63:18"
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:18",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "2183:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:18"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "2220:21:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2754_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2785,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2754,
														"src": "2220:11:18"
													},
													"referencedDeclaration": 2754,
													"src": "2220:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2754_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:18"
									},
									"scope": 2869,
									"src": "2159:163:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "2503:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:18",
													"nodeType": "YulBlock",
													"src": "2538:38:18",
													"statements": [
														{
															"nativeSrc": "2552:14:18",
															"nodeType": "YulAssignment",
															"src": "2552:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:18",
																"nodeType": "YulIdentifier",
																"src": "2562:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2798,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2794,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2800,
												"nodeType": "InlineAssembly",
												"src": "2513:63:18"
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:18",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "2443:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:18"
									},
									"returnParameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "2480:21:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2757_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2796,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2757,
														"src": "2480:11:18"
													},
													"referencedDeclaration": 2757,
													"src": "2480:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2757_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:18"
									},
									"scope": 2869,
									"src": "2419:163:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "2763:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:18",
													"nodeType": "YulBlock",
													"src": "2798:38:18",
													"statements": [
														{
															"nativeSrc": "2812:14:18",
															"nodeType": "YulAssignment",
															"src": "2812:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:18",
																"nodeType": "YulIdentifier",
																"src": "2822:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2809,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2805,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2811,
												"nodeType": "InlineAssembly",
												"src": "2773:63:18"
											}
										]
									},
									"documentation": {
										"id": 2803,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:18",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "2703:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2804,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:18"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "2740:21:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2760_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2808,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2807,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2760,
														"src": "2740:11:18"
													},
													"referencedDeclaration": 2760,
													"src": "2740:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2760_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:18"
									},
									"scope": 2869,
									"src": "2679:163:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2823,
										"nodeType": "Block",
										"src": "3020:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:18",
													"nodeType": "YulBlock",
													"src": "3055:38:18",
													"statements": [
														{
															"nativeSrc": "3069:14:18",
															"nodeType": "YulAssignment",
															"src": "3069:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:18",
																"nodeType": "YulIdentifier",
																"src": "3079:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2820,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2816,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2822,
												"nodeType": "InlineAssembly",
												"src": "3030:63:18"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:18",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "2961:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:18"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "2998:20:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2763_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2818,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2763,
														"src": "2998:10:18"
													},
													"referencedDeclaration": 2763,
													"src": "2998:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2763_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:18"
									},
									"scope": 2869,
									"src": "2938:161:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "3277:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:18",
													"nodeType": "YulBlock",
													"src": "3312:38:18",
													"statements": [
														{
															"nativeSrc": "3326:14:18",
															"nodeType": "YulAssignment",
															"src": "3326:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:18",
																"nodeType": "YulIdentifier",
																"src": "3336:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2831,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2827,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2833,
												"nodeType": "InlineAssembly",
												"src": "3287:63:18"
											}
										]
									},
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:18",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "3218:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2826,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:18"
									},
									"returnParameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "3255:20:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2766_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2829,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2766,
														"src": "3255:10:18"
													},
													"referencedDeclaration": 2766,
													"src": "3255:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2766_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:18"
									},
									"scope": 2869,
									"src": "3195:161:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "3558:85:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:18",
													"nodeType": "YulBlock",
													"src": "3593:44:18",
													"statements": [
														{
															"nativeSrc": "3607:20:18",
															"nodeType": "YulAssignment",
															"src": "3607:20:18",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:18",
																"nodeType": "YulIdentifier",
																"src": "3617:10:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2842,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2838,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:18",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2844,
												"nodeType": "InlineAssembly",
												"src": "3568:69:18"
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:18",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "3491:20:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:18"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "3536:20:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2766_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2840,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2766,
														"src": "3536:10:18"
													},
													"referencedDeclaration": 2766,
													"src": "3536:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2766_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:18"
									},
									"scope": 2869,
									"src": "3468:175:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "3818:79:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:18",
													"nodeType": "YulBlock",
													"src": "3853:38:18",
													"statements": [
														{
															"nativeSrc": "3867:14:18",
															"nodeType": "YulAssignment",
															"src": "3867:14:18",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:18",
																"nodeType": "YulIdentifier",
																"src": "3877:4:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2853,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2849,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2855,
												"nodeType": "InlineAssembly",
												"src": "3828:63:18"
											}
										]
									},
									"documentation": {
										"id": 2847,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:18",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "3760:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:18"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "3797:19:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2769_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2851,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2769,
														"src": "3797:9:18"
													},
													"referencedDeclaration": 2769,
													"src": "3797:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2769_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:18"
									},
									"scope": 2869,
									"src": "3738:159:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2867,
										"nodeType": "Block",
										"src": "4094:85:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:18",
													"nodeType": "YulBlock",
													"src": "4129:44:18",
													"statements": [
														{
															"nativeSrc": "4143:20:18",
															"nodeType": "YulAssignment",
															"src": "4143:20:18",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:18",
																"nodeType": "YulIdentifier",
																"src": "4153:10:18"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2864,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2860,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:18",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2866,
												"nodeType": "InlineAssembly",
												"src": "4104:69:18"
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:18",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "4029:19:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:18"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "4073:19:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2769_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2862,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2769,
														"src": "4073:9:18"
													},
													"referencedDeclaration": 2769,
													"src": "4073:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2769_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:18"
									},
									"scope": 2869,
									"src": "4007:172:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2870,
							"src": "1407:2774:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2881
						]
					},
					"id": 2882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2872,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:19",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2881,
							"linearizedBaseContracts": [
								2881
							],
							"name": "IERC165",
							"nameLocation": "432:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:19",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "818:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:19"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "861:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:19"
									},
									"scope": 2881,
									"src": "791:76:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2882,
							"src": "422:447:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:19"
				},
				"id": 19
			},
			"TOKEN ZARFIX (XZI).sol": {
				"ast": {
					"absolutePath": "TOKEN ZARFIX (XZI).sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ERC20Upgradeable": [
							1429
						],
						"Initializable": [
							630
						],
						"PausableUpgradeable": [
							1635
						],
						"ReentrancyGuardUpgradeable": [
							1764
						],
						"UUPSUpgradeable": [
							812
						],
						"ZarfiXToken": [
							3842
						]
					},
					"id": 3843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2883,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 1430,
							"src": "76:102:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2884,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1429,
										"src": "84:16:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 363,
							"src": "179:113:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2886,
										"name": "AccessControlUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "187:24:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 2889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 1636,
							"src": "293:102:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2888,
										"name": "PausableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1635,
										"src": "301:19:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 2891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 1765,
							"src": "396:116:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2890,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1764,
										"src": "404:26:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 813,
							"src": "513:100:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2892,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 812,
										"src": "521:15:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3843,
							"sourceUnit": 631,
							"src": "614:96:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2894,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "622:13:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2897,
										"name": "Initializable",
										"nameLocations": [
											"1123:13:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1123:13:20"
									},
									"id": 2898,
									"nodeType": "InheritanceSpecifier",
									"src": "1123:13:20"
								},
								{
									"baseName": {
										"id": 2899,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"1142:16:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1429,
										"src": "1142:16:20"
									},
									"id": 2900,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:16:20"
								},
								{
									"baseName": {
										"id": 2901,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"1164:24:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "1164:24:20"
									},
									"id": 2902,
									"nodeType": "InheritanceSpecifier",
									"src": "1164:24:20"
								},
								{
									"baseName": {
										"id": 2903,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"1194:19:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "1194:19:20"
									},
									"id": 2904,
									"nodeType": "InheritanceSpecifier",
									"src": "1194:19:20"
								},
								{
									"baseName": {
										"id": 2905,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"1219:26:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1764,
										"src": "1219:26:20"
									},
									"id": 2906,
									"nodeType": "InheritanceSpecifier",
									"src": "1219:26:20"
								},
								{
									"baseName": {
										"id": 2907,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1251:15:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "1251:15:20"
									},
									"id": 2908,
									"nodeType": "InheritanceSpecifier",
									"src": "1251:15:20"
								}
							],
							"canonicalName": "ZarfiXToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2896,
								"nodeType": "StructuredDocumentation",
								"src": "712:381:20",
								"text": " @title ZarfiXToken\n @notice A regulatory-compliant security token with whitelist enforcement, capped supply, and role-based access controls\n @dev UUPS upgradeable ERC-20 token implementing batch processing, gas optimizations, and comprehensive security measures\n @author ZarfiX Security Team\n @custom:security-contact security@zarfix.com\n @custom:version 1.0.1"
							},
							"fullyImplemented": true,
							"id": 3842,
							"linearizedBaseContracts": [
								3842,
								812,
								1918,
								1764,
								1635,
								362,
								1804,
								2881,
								1887,
								1429,
								1960,
								2463,
								2437,
								1475,
								630
							],
							"name": "ZarfiXToken",
							"nameLocation": "1103:11:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "1453:69:20",
										"text": "@notice Role identifier for token issuers (mint/burn permissions)"
									},
									"id": 2914,
									"mutability": "constant",
									"name": "_ISSUER_ROLE",
									"nameLocation": "1552:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "1527:64:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1527:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4953535545525f524f4c45",
												"id": 2912,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1577:13:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122",
													"typeString": "literal_string \"ISSUER_ROLE\""
												},
												"value": "ISSUER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122",
													"typeString": "literal_string \"ISSUER_ROLE\""
												}
											],
											"id": 2911,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1567:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1567:24:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "1602:74:20",
										"text": "@notice Role identifier for compliance officers (whitelist management)"
									},
									"id": 2920,
									"mutability": "constant",
									"name": "_COMPLIANCE_ROLE",
									"nameLocation": "1706:16:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "1681:72:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2916,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1681:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434f4d504c49414e43455f524f4c45",
												"id": 2918,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1735:17:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985",
													"typeString": "literal_string \"COMPLIANCE_ROLE\""
												},
												"value": "COMPLIANCE_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985",
													"typeString": "literal_string \"COMPLIANCE_ROLE\""
												}
											],
											"id": 2917,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1725:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2919,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1725:28:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2921,
										"nodeType": "StructuredDocumentation",
										"src": "1764:69:20",
										"text": "@notice Role identifier for pausers (emergency freeze capability)"
									},
									"id": 2926,
									"mutability": "constant",
									"name": "_PAUSER_ROLE",
									"nameLocation": "1863:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "1838:64:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2922,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1838:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2924,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1888:13:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2923,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1878:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1878:24:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2927,
										"nodeType": "StructuredDocumentation",
										"src": "1913:74:20",
										"text": "@notice Role identifier for upgraders (contract upgrade authorization)"
									},
									"id": 2932,
									"mutability": "constant",
									"name": "_UPGRADER_ROLE",
									"nameLocation": "2017:14:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "1992:68:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2928,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1992:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2930,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2044:15:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2929,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2034:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2034:26:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2933,
										"nodeType": "StructuredDocumentation",
										"src": "2067:89:20",
										"text": "@notice Maximum number of addresses that can be processed in a single batch operation"
									},
									"id": 2936,
									"mutability": "constant",
									"name": "_MAX_BATCH",
									"nameLocation": "2186:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "2161:41:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2934,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2161:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 2935,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2199:3:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "2392:72:20",
										"text": "@notice Maximum total supply that can ever be minted (immutable cap)"
									},
									"functionSelector": "ec81b483",
									"id": 2939,
									"mutability": "immutable",
									"name": "CAP",
									"nameLocation": "2494:3:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "2469:28:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2938,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2469:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "2682:77:20",
										"text": "@notice Mapping of addresses approved for token transfers (KYC whitelist)"
									},
									"id": 2944,
									"mutability": "mutable",
									"name": "_whitelist",
									"nameLocation": "2817:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "2764:63:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2943,
										"keyName": "account",
										"keyNameLocation": "2780:7:20",
										"keyType": {
											"id": 2941,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2772:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2764:44:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "whitelisted",
										"valueNameLocation": "2796:11:20",
										"valueType": {
											"id": 2942,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2791:4:20",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "2838:56:20",
										"text": "@notice Current total supply for gas-optimized reads"
									},
									"id": 2947,
									"mutability": "mutable",
									"name": "_currentSupply",
									"nameLocation": "2915:14:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "2899:30:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2899:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "3114:164:20",
										"text": "@notice Emitted when tokens are minted to an address\n @param to The address receiving the minted tokens\n @param amount The amount of tokens minted"
									},
									"eventSelector": "3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273",
									"id": 2954,
									"name": "TokensMinted",
									"nameLocation": "3289:12:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3318:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "3302:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3338:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "3322:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3322:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:44:20"
									},
									"src": "3283:63:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "3352:169:20",
										"text": "@notice Emitted when tokens are burned from an address\n @param from The address from which tokens are burned\n @param amount The amount of tokens burned"
									},
									"eventSelector": "fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6",
									"id": 2961,
									"name": "TokensBurned",
									"nameLocation": "3532:12:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3561:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3545:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2959,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3583:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3567:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:46:20"
									},
									"src": "3526:65:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "3597:218:20",
										"text": "@notice Emitted when whitelist status is updated for an address\n @param account The address whose whitelist status changed\n @param status The new whitelist status (true = whitelisted, false = removed)"
									},
									"eventSelector": "f93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
									"id": 2968,
									"name": "WhitelistUpdated",
									"nameLocation": "3826:16:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3859:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "3843:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"indexed": true,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "3881:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "3868:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3868:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3842:46:20"
									},
									"src": "3820:69:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "3895:173:20",
										"text": "@notice Emitted when a batch operation is completed\n @param offset The starting index of the batch\n @param limit The number of items processed in the batch"
									},
									"eventSelector": "3838459cd794256a3c29bb3186da72029a8036c0f596fee1bd526f8eb9493d41",
									"id": 2975,
									"name": "BatchProcessed",
									"nameLocation": "4079:14:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"indexed": true,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "4110:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "4094:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2973,
												"indexed": true,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "4134:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "4118:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4118:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:47:20"
									},
									"src": "4073:68:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2976,
										"nodeType": "StructuredDocumentation",
										"src": "4147:152:20",
										"text": "@notice Emitted when admin role is transferred\n @param previousAdmin The previous admin address\n @param newAdmin The new admin address"
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 2982,
									"name": "AdminChanged",
									"nameLocation": "4310:12:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "4339:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "4323:29:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4370:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "4354:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4322:57:20"
									},
									"src": "4304:76:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "4386:169:20",
										"text": "@notice Emitted when contract is initialized\n @param admin The initial admin address\n @param name The token name\n @param symbol The token symbol"
									},
									"eventSelector": "2583210d6110b6d11e7775956ed0bea544d92d3760073450942661b426486365",
									"id": 2991,
									"name": "ContractInitialized",
									"nameLocation": "4566:19:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "4602:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "4586:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4586:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4616:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "4609:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4609:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "4629:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "4622:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4622:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:51:20"
									},
									"src": "4560:77:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2992,
										"nodeType": "StructuredDocumentation",
										"src": "4643:43:20",
										"text": "@notice Emitted when contract is paused"
									},
									"eventSelector": "81990fd9a5c552b8e3677917d8a03c07678f0d2cb68f88b634aca2022e9bd19f",
									"id": 2996,
									"name": "ContractPaused",
									"nameLocation": "4697:14:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4728:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "4712:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4712:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4711:25:20"
									},
									"src": "4691:46:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "4743:45:20",
										"text": "@notice Emitted when contract is unpaused"
									},
									"eventSelector": "5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d11766",
									"id": 3001,
									"name": "ContractUnpaused",
									"nameLocation": "4799:16:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4832:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "4816:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:25:20"
									},
									"src": "4793:48:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3002,
										"nodeType": "StructuredDocumentation",
										"src": "4847:164:20",
										"text": "@notice Emitted when transfer occurs\n @param from The sender address\n @param to The recipient address\n @param amount The amount transferred"
									},
									"eventSelector": "d0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de6",
									"id": 3010,
									"name": "TokenTransfer",
									"nameLocation": "5022:13:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5052:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "5036:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3006,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5074:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "5058:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5086:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "5078:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5035:58:20"
									},
									"src": "5016:78:20"
								},
								{
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "5276:68:20",
										"text": "@notice Thrown when attempting to use zero address where invalid"
									},
									"errorSelector": "d92e233d",
									"id": 3013,
									"name": "ZeroAddress",
									"nameLocation": "5355:11:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:2:20"
									},
									"src": "5349:20:20"
								},
								{
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "5375:164:20",
										"text": "@notice Thrown when attempting to mint tokens exceeding the cap\n @param attempted The amount attempted to mint\n @param cap The maximum allowed cap"
									},
									"errorSelector": "f480e285",
									"id": 3020,
									"name": "CapExceeded",
									"nameLocation": "5550:11:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "5570:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "5562:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5562:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "5589:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "5581:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5561:32:20"
									},
									"src": "5544:50:20"
								},
								{
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "5600:66:20",
										"text": "@notice Thrown when attempting to mint or transfer zero tokens"
									},
									"errorSelector": "1f2a2005",
									"id": 3023,
									"name": "ZeroAmount",
									"nameLocation": "5677:10:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5687:2:20"
									},
									"src": "5671:19:20"
								},
								{
									"documentation": {
										"id": 3024,
										"nodeType": "StructuredDocumentation",
										"src": "5696:73:20",
										"text": "@notice Thrown when non-whitelisted address attempts token operations"
									},
									"errorSelector": "584a7938",
									"id": 3026,
									"name": "NotWhitelisted",
									"nameLocation": "5780:14:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5794:2:20"
									},
									"src": "5774:23:20"
								},
								{
									"documentation": {
										"id": 3027,
										"nodeType": "StructuredDocumentation",
										"src": "5803:69:20",
										"text": "@notice Thrown when attempting to burn more tokens than available"
									},
									"errorSelector": "f4d678b8",
									"id": 3029,
									"name": "InsufficientBalance",
									"nameLocation": "5883:19:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5902:2:20"
									},
									"src": "5877:28:20"
								},
								{
									"documentation": {
										"id": 3030,
										"nodeType": "StructuredDocumentation",
										"src": "5911:95:20",
										"text": "@notice Thrown when batch size is invalid\n @param requested The requested batch size"
									},
									"errorSelector": "a6f74985",
									"id": 3034,
									"name": "InvalidBatchSize",
									"nameLocation": "6017:16:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "6042:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "6034:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6034:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6033:19:20"
									},
									"src": "6011:42:20"
								},
								{
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "6059:38:20",
										"text": "@notice Thrown when array is empty"
									},
									"errorSelector": "521299a9",
									"id": 3037,
									"name": "EmptyArray",
									"nameLocation": "6108:10:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6118:2:20"
									},
									"src": "6102:19:20"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "6512:197:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3044,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "6530:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6538:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6530:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642063617020616d6f756e74",
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37078ebb70756eaa8283dbd135311303449c4249fed1b31d27b8c4929aaae1e0",
																"typeString": "literal_string \"Invalid cap amount\""
															},
															"value": "Invalid cap amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37078ebb70756eaa8283dbd135311303449c4249fed1b31d27b8c4929aaae1e0",
																"typeString": "literal_string \"Invalid cap amount\""
															}
														],
														"id": 3043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "6522:40:20"
											},
											{
												"expression": {
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3050,
														"name": "CAP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "6572:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3051,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3040,
														"src": "6578:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6572:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3053,
												"nodeType": "ExpressionStatement",
												"src": "6572:10:20"
											},
											{
												"expression": {
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3054,
														"name": "_currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2947,
														"src": "6684:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6701:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6684:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "6684:18:20"
											}
										]
									},
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "6306:167:20",
										"text": "@notice Constructor sets the immutable cap and initializes storage to avoid zero-to-one writes\n @param _cap The maximum total supply that can ever be minted"
									},
									"id": 3059,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "_cap",
												"nameLocation": "6498:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "6490:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6490:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6489:14:20"
									},
									"returnParameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6512:0:20"
									},
									"scope": 3842,
									"src": "6478:231:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3140,
										"nodeType": "Block",
										"src": "7376:785:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3072,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3066,
																"src": "7437:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7455:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7447:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3073,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7447:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7447:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7437:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646d696e2061646472657373",
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7459:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
																"typeString": "literal_string \"Invalid admin address\""
															},
															"value": "Invalid admin address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
																"typeString": "literal_string \"Invalid admin address\""
															}
														],
														"id": 3071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7429:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7429:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3080,
												"nodeType": "ExpressionStatement",
												"src": "7429:54:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3082,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "7507:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 3083,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "7514:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 3081,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "7494:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7494:28:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3085,
												"nodeType": "ExpressionStatement",
												"src": "7494:28:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3086,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "7532:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7532:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "7532:22:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3089,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "7564:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7564:17:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3091,
												"nodeType": "ExpressionStatement",
												"src": "7564:17:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3092,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "7591:22:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:24:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3094,
												"nodeType": "ExpressionStatement",
												"src": "7591:24:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3095,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "7625:22:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7625:24:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3097,
												"nodeType": "ExpressionStatement",
												"src": "7625:24:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3099,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "7711:18:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3100,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "7731:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3098,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7700:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7700:38:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "7700:38:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3104,
															"name": "_ISSUER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "7759:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3105,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "7773:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3103,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7748:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7748:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3107,
												"nodeType": "ExpressionStatement",
												"src": "7748:32:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3109,
															"name": "_COMPLIANCE_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "7801:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3110,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "7819:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3108,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7790:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7790:36:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3112,
												"nodeType": "ExpressionStatement",
												"src": "7790:36:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3114,
															"name": "_PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2926,
															"src": "7847:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3115,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "7861:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3113,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7836:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3117,
												"nodeType": "ExpressionStatement",
												"src": "7836:32:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3119,
															"name": "_UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "7889:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3120,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "7905:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3118,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7878:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7878:34:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3122,
												"nodeType": "ExpressionStatement",
												"src": "7878:34:20"
											},
											{
												"expression": {
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3123,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "8017:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3125,
														"indexExpression": {
															"id": 3124,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "8028:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8017:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8038:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8017:25:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3128,
												"nodeType": "ExpressionStatement",
												"src": "8017:25:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3130,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "8083:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8091:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3129,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "8066:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8066:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3133,
												"nodeType": "EmitStatement",
												"src": "8061:35:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3135,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "8131:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3136,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "8139:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 3137,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "8146:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 3134,
														"name": "ContractInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2991,
														"src": "8111:19:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory,string memory)"
														}
													},
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8111:43:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3139,
												"nodeType": "EmitStatement",
												"src": "8106:48:20"
											}
										]
									},
									"documentation": {
										"id": 3060,
										"nodeType": "StructuredDocumentation",
										"src": "6896:340:20",
										"text": " @notice Initializes the upgradeable contract with token parameters and admin roles\n @param _name The name of the token\n @param _symbol The symbol of the token\n @param _admin The address to receive all administrative roles\n @dev This function can only be called once due to the initializer modifier"
									},
									"functionSelector": "077f224a",
									"id": 3141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3068,
												"name": "initializer",
												"nameLocations": [
													"7364:11:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "7364:11:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "7364:11:20"
										}
									],
									"name": "initialize",
									"nameLocation": "7250:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "7286:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "7270:21:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7270:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "7317:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "7301:23:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7301:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "7342:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "7334:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7260:94:20"
									},
									"returnParameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7376:0:20"
									},
									"scope": 3842,
									"src": "7241:920:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "8770:800:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3157,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3144,
																"src": "8831:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8846:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8838:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8838:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8838:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8831:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8850:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 3156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8823:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8823:55:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3165,
												"nodeType": "ExpressionStatement",
												"src": "8823:55:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3167,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3146,
																"src": "8896:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8907:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8896:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e7420616d6f756e74",
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8910:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3",
																"typeString": "literal_string \"Invalid mint amount\""
															},
															"value": "Invalid mint amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3",
																"typeString": "literal_string \"Invalid mint amount\""
															}
														],
														"id": 3166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8888:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "8888:44:20"
											},
											{
												"assignments": [
													3174
												],
												"declarations": [
													{
														"constant": false,
														"id": 3174,
														"mutability": "mutable",
														"name": "toWhitelisted",
														"nameLocation": "9017:13:20",
														"nodeType": "VariableDeclaration",
														"scope": 3217,
														"src": "9012:18:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3173,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9012:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3178,
												"initialValue": {
													"baseExpression": {
														"id": 3175,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "9033:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3177,
													"indexExpression": {
														"id": 3176,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "9044:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9033:15:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9012:36:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3180,
															"name": "toWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "9066:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206e6f742077686974656c6973746564",
															"id": 3181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9081:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															},
															"value": "Recipient not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															}
														],
														"id": 3179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9058:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9058:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3183,
												"nodeType": "ExpressionStatement",
												"src": "9058:51:20"
											},
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "currentSupply_",
														"nameLocation": "9195:14:20",
														"nodeType": "VariableDeclaration",
														"scope": 3217,
														"src": "9187:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9187:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"id": 3186,
													"name": "_currentSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "9212:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9187:39:20"
											},
											{
												"assignments": [
													3189
												],
												"declarations": [
													{
														"constant": false,
														"id": 3189,
														"mutability": "mutable",
														"name": "newSupply",
														"nameLocation": "9244:9:20",
														"nodeType": "VariableDeclaration",
														"scope": 3217,
														"src": "9236:17:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9236:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3193,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3190,
														"name": "currentSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3185,
														"src": "9256:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3191,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "9273:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9256:24:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9236:44:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3195,
																"name": "newSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3189,
																"src": "9368:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3196,
																	"name": "CAP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2939,
																	"src": "9380:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9386:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9380:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9368:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436170206578636565646564",
															"id": 3200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9389:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
																"typeString": "literal_string \"Cap exceeded\""
															},
															"value": "Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
																"typeString": "literal_string \"Cap exceeded\""
															}
														],
														"id": 3194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9360:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9360:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3202,
												"nodeType": "ExpressionStatement",
												"src": "9360:44:20"
											},
											{
												"expression": {
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3203,
														"name": "_currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2947,
														"src": "9434:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3204,
														"name": "newSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "9451:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9434:26:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3206,
												"nodeType": "ExpressionStatement",
												"src": "9434:26:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3208,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3144,
															"src": "9476:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3209,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "9481:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3207,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "9470:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9470:19:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "9470:19:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3213,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3144,
															"src": "9550:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3214,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "9555:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3212,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "9537:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:26:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3216,
												"nodeType": "EmitStatement",
												"src": "9532:31:20"
											}
										]
									},
									"documentation": {
										"id": 3142,
										"nodeType": "StructuredDocumentation",
										"src": "8349:273:20",
										"text": " @notice Mints new tokens to a specified address\n @param _to The address to receive the minted tokens\n @param _amount The amount of tokens to mint\n @dev Only callable by addresses with ISSUER_ROLE, respects total supply cap and whitelist"
									},
									"functionSelector": "40c10f19",
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3149,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3148,
												"name": "nonReentrant",
												"nameLocations": [
													"8698:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1704,
												"src": "8698:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "8698:12:20"
										},
										{
											"arguments": [
												{
													"id": 3151,
													"name": "_ISSUER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2914,
													"src": "8728:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3150,
												"name": "onlyRole",
												"nameLocations": [
													"8719:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8719:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "8719:22:20"
										},
										{
											"id": 3154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3153,
												"name": "whenNotPaused",
												"nameLocations": [
													"8751:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "8751:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "8751:13:20"
										}
									],
									"name": "mint",
									"nameLocation": "8636:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8649:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "8641:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8641:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8662:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "8654:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8640:30:20"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:20"
									},
									"scope": 3842,
									"src": "8627:943:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3285,
										"nodeType": "Block",
										"src": "9955:648:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3234,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3221,
																"src": "10016:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10033:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10025:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3235,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10025:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10025:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10016:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206275726e2061646472657373",
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10037:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e039e896b666aadb82976a4fad223163b0be195242fbcf4255e53d4f2a4e4aa0",
																"typeString": "literal_string \"Invalid burn address\""
															},
															"value": "Invalid burn address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e039e896b666aadb82976a4fad223163b0be195242fbcf4255e53d4f2a4e4aa0",
																"typeString": "literal_string \"Invalid burn address\""
															}
														],
														"id": 3233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10008:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10008:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3242,
												"nodeType": "ExpressionStatement",
												"src": "10008:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3244,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3223,
																"src": "10078:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10089:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10078:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206275726e20616d6f756e74",
															"id": 3247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10092:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26c54b3e13aa2dfe42517d4e33d479520cac47dc66cf13820ed08a9ade960c6c",
																"typeString": "literal_string \"Invalid burn amount\""
															},
															"value": "Invalid burn amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26c54b3e13aa2dfe42517d4e33d479520cac47dc66cf13820ed08a9ade960c6c",
																"typeString": "literal_string \"Invalid burn amount\""
															}
														],
														"id": 3243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10070:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10070:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3249,
												"nodeType": "ExpressionStatement",
												"src": "10070:44:20"
											},
											{
												"assignments": [
													3251
												],
												"declarations": [
													{
														"constant": false,
														"id": 3251,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "10141:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 3285,
														"src": "10133:15:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10133:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3255,
												"initialValue": {
													"arguments": [
														{
															"id": 3253,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "10161:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3252,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "10151:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10151:16:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10133:34:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3257,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3251,
																"src": "10255:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3258,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "10265:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10275:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10265:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10255:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10278:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 3256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10247:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3264,
												"nodeType": "ExpressionStatement",
												"src": "10247:54:20"
											},
											{
												"assignments": [
													3266
												],
												"declarations": [
													{
														"constant": false,
														"id": 3266,
														"mutability": "mutable",
														"name": "currentSupply_",
														"nameLocation": "10379:14:20",
														"nodeType": "VariableDeclaration",
														"scope": 3285,
														"src": "10371:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10371:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3268,
												"initialValue": {
													"id": 3267,
													"name": "_currentSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "10396:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10371:39:20"
											},
											{
												"expression": {
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3269,
														"name": "_currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2947,
														"src": "10448:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3270,
															"name": "currentSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "10465:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3271,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "10482:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10465:24:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10448:41:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "10448:41:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3276,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "10505:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3277,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "10512:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3275,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "10499:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10499:21:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3279,
												"nodeType": "ExpressionStatement",
												"src": "10499:21:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3281,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "10581:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3282,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "10588:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3280,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "10568:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10568:28:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3284,
												"nodeType": "EmitStatement",
												"src": "10563:33:20"
											}
										]
									},
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "9576:229:20",
										"text": " @notice Burns tokens from a specified address\n @param _from The address from which to burn tokens\n @param _amount The amount of tokens to burn\n @dev Only callable by addresses with ISSUER_ROLE"
									},
									"functionSelector": "9dc29fac",
									"id": 3286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3225,
												"name": "nonReentrant",
												"nameLocations": [
													"9883:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1704,
												"src": "9883:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "9883:12:20"
										},
										{
											"arguments": [
												{
													"id": 3228,
													"name": "_ISSUER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2914,
													"src": "9913:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3227,
												"name": "onlyRole",
												"nameLocations": [
													"9904:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "9904:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "9904:22:20"
										},
										{
											"id": 3231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3230,
												"name": "whenNotPaused",
												"nameLocations": [
													"9936:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "9936:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "9936:13:20"
										}
									],
									"name": "burn",
									"nameLocation": "9819:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "9832:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "9824:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9824:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9847:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "9839:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9839:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9823:32:20"
									},
									"returnParameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9955:0:20"
									},
									"scope": 3842,
									"src": "9810:793:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 3357,
										"nodeType": "Block",
										"src": "11223:678:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3300,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3289,
																"src": "11284:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11299:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11291:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11291:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11291:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11284:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11303:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 3299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11276:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11276:55:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3308,
												"nodeType": "ExpressionStatement",
												"src": "11276:55:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3310,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3291,
																"src": "11349:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11360:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11349:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207472616e7366657220616d6f756e74",
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11363:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92",
																"typeString": "literal_string \"Invalid transfer amount\""
															},
															"value": "Invalid transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92",
																"typeString": "literal_string \"Invalid transfer amount\""
															}
														],
														"id": 3309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11341:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11341:48:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3315,
												"nodeType": "ExpressionStatement",
												"src": "11341:48:20"
											},
											{
												"assignments": [
													3317
												],
												"declarations": [
													{
														"constant": false,
														"id": 3317,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "11416:6:20",
														"nodeType": "VariableDeclaration",
														"scope": 3357,
														"src": "11408:14:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11408:7:20",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "11425:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11425:12:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11408:29:20"
											},
											{
												"assignments": [
													3322
												],
												"declarations": [
													{
														"constant": false,
														"id": 3322,
														"mutability": "mutable",
														"name": "senderWhitelisted",
														"nameLocation": "11523:17:20",
														"nodeType": "VariableDeclaration",
														"scope": 3357,
														"src": "11518:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3321,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11518:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3326,
												"initialValue": {
													"baseExpression": {
														"id": 3323,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "11543:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3325,
													"indexExpression": {
														"id": 3324,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3317,
														"src": "11554:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11543:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11518:43:20"
											},
											{
												"assignments": [
													3328
												],
												"declarations": [
													{
														"constant": false,
														"id": 3328,
														"mutability": "mutable",
														"name": "toWhitelisted",
														"nameLocation": "11576:13:20",
														"nodeType": "VariableDeclaration",
														"scope": 3357,
														"src": "11571:18:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3327,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11571:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3332,
												"initialValue": {
													"baseExpression": {
														"id": 3329,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "11592:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3331,
													"indexExpression": {
														"id": 3330,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3289,
														"src": "11603:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11592:15:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11571:36:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3334,
															"name": "senderWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3322,
															"src": "11634:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206e6f742077686974656c6973746564",
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11653:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
																"typeString": "literal_string \"Sender not whitelisted\""
															},
															"value": "Sender not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
																"typeString": "literal_string \"Sender not whitelisted\""
															}
														],
														"id": 3333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11626:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11626:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3337,
												"nodeType": "ExpressionStatement",
												"src": "11626:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3339,
															"name": "toWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "11696:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206e6f742077686974656c6973746564",
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11711:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															},
															"value": "Recipient not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															}
														],
														"id": 3338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11688:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11688:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3342,
												"nodeType": "ExpressionStatement",
												"src": "11688:51:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3344,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "11802:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3345,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3289,
															"src": "11810:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3346,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "11815:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3343,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "11792:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11792:31:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "11792:31:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3350,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "11852:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3351,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3289,
															"src": "11860:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3352,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "11865:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3349,
														"name": "TokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3010,
														"src": "11838:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11838:35:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3354,
												"nodeType": "EmitStatement",
												"src": "11833:40:20"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11890:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3298,
												"id": 3356,
												"nodeType": "Return",
												"src": "11883:11:20"
											}
										]
									},
									"documentation": {
										"id": 3287,
										"nodeType": "StructuredDocumentation",
										"src": "10792:292:20",
										"text": " @notice Transfers tokens from sender to recipient with whitelist enforcement\n @param _to The recipient address\n @param _amount The amount to transfer\n @return True if transfer succeeds\n @dev Overrides ERC20 transfer to add whitelist and pause checks"
									},
									"functionSelector": "a9059cbb",
									"id": 3358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3294,
												"name": "whenNotPaused",
												"nameLocations": [
													"11180:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "11180:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "11180:13:20"
										}
									],
									"name": "transfer",
									"nameLocation": "11098:8:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11162:8:20"
									},
									"parameters": {
										"id": 3292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "11115:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "11107:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11107:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11128:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "11120:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11120:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11106:30:20"
									},
									"returnParameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "11212:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11212:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11211:6:20"
									},
									"scope": 3842,
									"src": "11089:812:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 3447,
										"nodeType": "Block",
										"src": "12403:777:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3374,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3361,
																"src": "12464:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12481:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12473:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3375,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12473:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12473:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12464:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073656e6465722061646472657373",
															"id": 3380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12485:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																"typeString": "literal_string \"Invalid sender address\""
															},
															"value": "Invalid sender address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																"typeString": "literal_string \"Invalid sender address\""
															}
														],
														"id": 3373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12456:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12456:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3382,
												"nodeType": "ExpressionStatement",
												"src": "12456:54:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3384,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3363,
																"src": "12528:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12543:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12535:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12535:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12535:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12528:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 3390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12547:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 3383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12520:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12520:55:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3392,
												"nodeType": "ExpressionStatement",
												"src": "12520:55:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3394,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3365,
																"src": "12593:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12604:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12593:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207472616e7366657220616d6f756e74",
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12607:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92",
																"typeString": "literal_string \"Invalid transfer amount\""
															},
															"value": "Invalid transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b38feb3c881e9d823af9f8eade080e73025bc05d74e13e1d324db0ea83142a92",
																"typeString": "literal_string \"Invalid transfer amount\""
															}
														],
														"id": 3393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12585:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12585:48:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3399,
												"nodeType": "ExpressionStatement",
												"src": "12585:48:20"
											},
											{
												"assignments": [
													3401
												],
												"declarations": [
													{
														"constant": false,
														"id": 3401,
														"mutability": "mutable",
														"name": "fromWhitelisted",
														"nameLocation": "12719:15:20",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "12714:20:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3400,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12714:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3405,
												"initialValue": {
													"baseExpression": {
														"id": 3402,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "12737:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3404,
													"indexExpression": {
														"id": 3403,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "12748:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12737:17:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12714:40:20"
											},
											{
												"assignments": [
													3407
												],
												"declarations": [
													{
														"constant": false,
														"id": 3407,
														"mutability": "mutable",
														"name": "toWhitelisted",
														"nameLocation": "12769:13:20",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "12764:18:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12764:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3411,
												"initialValue": {
													"baseExpression": {
														"id": 3408,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "12785:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3410,
													"indexExpression": {
														"id": 3409,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3363,
														"src": "12796:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12785:15:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12764:36:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3413,
															"name": "fromWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3401,
															"src": "12827:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206e6f742077686974656c6973746564",
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12844:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
																"typeString": "literal_string \"Sender not whitelisted\""
															},
															"value": "Sender not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
																"typeString": "literal_string \"Sender not whitelisted\""
															}
														],
														"id": 3412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12819:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12819:50:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3416,
												"nodeType": "ExpressionStatement",
												"src": "12819:50:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3418,
															"name": "toWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3407,
															"src": "12887:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206e6f742077686974656c6973746564",
															"id": 3419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12902:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															},
															"value": "Recipient not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8634bca7d7c6e07df74986c76a98ce1791b3c80f644e0fdf9e079014aa8156be",
																"typeString": "literal_string \"Recipient not whitelisted\""
															}
														],
														"id": 3417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12879:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12879:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3421,
												"nodeType": "ExpressionStatement",
												"src": "12879:51:20"
											},
											{
												"assignments": [
													3423
												],
												"declarations": [
													{
														"constant": false,
														"id": 3423,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "12991:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 3447,
														"src": "12983:15:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3422,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12983:7:20",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3426,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3424,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "13001:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13001:12:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12983:30:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3428,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "13039:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3423,
															"src": "13046:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3430,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "13055:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3427,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "13023:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13023:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3432,
												"nodeType": "ExpressionStatement",
												"src": "13023:40:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3434,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "13083:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3435,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "13090:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3436,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "13095:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3433,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "13073:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13073:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3438,
												"nodeType": "ExpressionStatement",
												"src": "13073:30:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3440,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "13132:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3441,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "13139:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3442,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "13144:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3439,
														"name": "TokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3010,
														"src": "13118:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13118:34:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3444,
												"nodeType": "EmitStatement",
												"src": "13113:39:20"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13169:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3372,
												"id": 3446,
												"nodeType": "Return",
												"src": "13162:11:20"
											}
										]
									},
									"documentation": {
										"id": 3359,
										"nodeType": "StructuredDocumentation",
										"src": "11907:338:20",
										"text": " @notice Transfers tokens from one address to another with whitelist enforcement\n @param _from The sender address\n @param _to The recipient address\n @param _amount The amount to transfer\n @return True if transfer succeeds\n @dev Overrides ERC20 transferFrom to add whitelist and pause checks"
									},
									"functionSelector": "23b872dd",
									"id": 3448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3368,
												"name": "whenNotPaused",
												"nameLocations": [
													"12360:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "12360:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "12360:13:20"
										}
									],
									"name": "transferFrom",
									"nameLocation": "12259:12:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12342:8:20"
									},
									"parameters": {
										"id": 3366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "12280:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "12272:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12272:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "12295:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "12287:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12287:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12308:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "12300:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12300:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12271:45:20"
									},
									"returnParameters": {
										"id": 3372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3448,
												"src": "12392:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12392:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12391:6:20"
									},
									"scope": 3842,
									"src": "12250:930:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3478,
										"nodeType": "Block",
										"src": "13642:263:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3458,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3451,
																"src": "13703:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13723:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13715:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13715:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13715:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13703:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e742061646472657373",
															"id": 3464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13727:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															},
															"value": "Invalid account address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															}
														],
														"id": 3457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13695:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13695:58:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3466,
												"nodeType": "ExpressionStatement",
												"src": "13695:58:20"
											},
											{
												"expression": {
													"id": 3471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3467,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "13791:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3469,
														"indexExpression": {
															"id": 3468,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3451,
															"src": "13802:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13791:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13814:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13791:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3472,
												"nodeType": "ExpressionStatement",
												"src": "13791:27:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3474,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3451,
															"src": "13883:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13893:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3473,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "13866:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 3476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13866:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3477,
												"nodeType": "EmitStatement",
												"src": "13861:37:20"
											}
										]
									},
									"documentation": {
										"id": 3449,
										"nodeType": "StructuredDocumentation",
										"src": "13369:167:20",
										"text": " @notice Adds an address to the whitelist\n @param _account The address to whitelist\n @dev Only callable by addresses with COMPLIANCE_ROLE"
									},
									"functionSelector": "e43252d7",
									"id": 3479,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3454,
													"name": "_COMPLIANCE_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2920,
													"src": "13619:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3455,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3453,
												"name": "onlyRole",
												"nameLocations": [
													"13610:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "13610:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "13610:26:20"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "13550:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "13573:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "13565:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13565:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13564:18:20"
									},
									"returnParameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13642:0:20"
									},
									"scope": 3842,
									"src": "13541:364:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3508,
										"nodeType": "Block",
										"src": "14206:264:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3489,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3482,
																"src": "14267:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14287:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14279:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14279:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14279:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14267:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e742061646472657373",
															"id": 3495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14291:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															},
															"value": "Invalid account address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															}
														],
														"id": 3488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14259:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14259:58:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3497,
												"nodeType": "ExpressionStatement",
												"src": "14259:58:20"
											},
											{
												"expression": {
													"id": 3501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "14355:27:20",
													"subExpression": {
														"baseExpression": {
															"id": 3498,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "14362:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3500,
														"indexExpression": {
															"id": 3499,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3482,
															"src": "14373:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14362:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3502,
												"nodeType": "ExpressionStatement",
												"src": "14355:27:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3504,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3482,
															"src": "14447:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14457:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3503,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "14430:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14430:33:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3507,
												"nodeType": "EmitStatement",
												"src": "14425:38:20"
											}
										]
									},
									"documentation": {
										"id": 3480,
										"nodeType": "StructuredDocumentation",
										"src": "13911:184:20",
										"text": " @notice Removes an address from the whitelist\n @param _account The address to remove from whitelist\n @dev Only callable by addresses with COMPLIANCE_ROLE"
									},
									"functionSelector": "8ab1d681",
									"id": 3509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3485,
													"name": "_COMPLIANCE_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2920,
													"src": "14183:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3484,
												"name": "onlyRole",
												"nameLocations": [
													"14174:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "14174:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "14174:26:20"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "14109:19:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "14137:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "14129:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14129:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14128:18:20"
									},
									"returnParameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14206:0:20"
									},
									"scope": 3842,
									"src": "14100:370:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "14973:1007:20",
										"statements": [
											{
												"assignments": [
													3524
												],
												"declarations": [
													{
														"constant": false,
														"id": 3524,
														"mutability": "mutable",
														"name": "accountsLength",
														"nameLocation": "15042:14:20",
														"nodeType": "VariableDeclaration",
														"scope": 3610,
														"src": "15034:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15034:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3527,
												"initialValue": {
													"expression": {
														"id": 3525,
														"name": "_accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "15059:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 3526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15069:6:20",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "15059:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15034:41:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3529,
																"name": "accountsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3524,
																"src": "15093:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15111:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15093:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d707479206163636f756e7473206172726179",
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15114:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67",
																"typeString": "literal_string \"Empty accounts array\""
															},
															"value": "Empty accounts array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67",
																"typeString": "literal_string \"Empty accounts array\""
															}
														],
														"id": 3528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15085:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "15085:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3536,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3517,
																"src": "15155:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15165:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15155:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c696d6974",
															"id": 3539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15168:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
																"typeString": "literal_string \"Invalid limit\""
															},
															"value": "Invalid limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
																"typeString": "literal_string \"Invalid limit\""
															}
														],
														"id": 3535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15147:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15147:37:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3541,
												"nodeType": "ExpressionStatement",
												"src": "15147:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3543,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3517,
																"src": "15272:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3544,
																	"name": "_MAX_BATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "15281:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15294:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15281:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15272:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463682073697a6520746f6f206c61726765",
															"id": 3548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15297:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
																"typeString": "literal_string \"Batch size too large\""
															},
															"value": "Batch size too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
																"typeString": "literal_string \"Batch size too large\""
															}
														],
														"id": 3542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15264:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15264:56:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3550,
												"nodeType": "ExpressionStatement",
												"src": "15264:56:20"
											},
											{
												"assignments": [
													3552
												],
												"declarations": [
													{
														"constant": false,
														"id": 3552,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "15347:3:20",
														"nodeType": "VariableDeclaration",
														"scope": 3610,
														"src": "15339:11:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15339:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3556,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3553,
														"name": "_offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "15353:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3554,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "15363:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15353:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15339:30:20"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3557,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3552,
														"src": "15452:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3558,
															"name": "accountsLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3524,
															"src": "15459:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15476:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15459:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15452:25:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3567,
												"nodeType": "IfStatement",
												"src": "15448:76:20",
												"trueBody": {
													"id": 3566,
													"nodeType": "Block",
													"src": "15479:45:20",
													"statements": [
														{
															"expression": {
																"id": 3564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3562,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3552,
																	"src": "15493:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3563,
																	"name": "accountsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3524,
																	"src": "15499:14:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15493:20:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3565,
															"nodeType": "ExpressionStatement",
															"src": "15493:20:20"
														}
													]
												}
											},
											{
												"body": {
													"id": 3601,
													"nodeType": "Block",
													"src": "15589:299:20",
													"statements": [
														{
															"assignments": [
																3576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3576,
																	"mutability": "mutable",
																	"name": "account",
																	"nameLocation": "15611:7:20",
																	"nodeType": "VariableDeclaration",
																	"scope": 3601,
																	"src": "15603:15:20",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3575,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15603:7:20",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3580,
															"initialValue": {
																"baseExpression": {
																	"id": 3577,
																	"name": "_accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3513,
																	"src": "15621:9:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3579,
																"indexExpression": {
																	"id": 3578,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3569,
																	"src": "15631:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15621:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15603:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3582,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3576,
																			"src": "15702:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 3585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15721:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 3584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15713:7:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 3583,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15713:7:20",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15713:10:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15702:21:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e7420696e206261746368",
																		"id": 3588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15725:26:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3",
																			"typeString": "literal_string \"Invalid account in batch\""
																		},
																		"value": "Invalid account in batch"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3",
																			"typeString": "literal_string \"Invalid account in batch\""
																		}
																	],
																	"id": 3581,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15694:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15694:58:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3590,
															"nodeType": "ExpressionStatement",
															"src": "15694:58:20"
														},
														{
															"expression": {
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3591,
																		"name": "_whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2944,
																		"src": "15779:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3593,
																	"indexExpression": {
																		"id": 3592,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3576,
																		"src": "15790:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15779:19:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15801:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "15779:26:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3596,
															"nodeType": "ExpressionStatement",
															"src": "15779:26:20"
														},
														{
															"id": 3600,
															"nodeType": "UncheckedBlock",
															"src": "15832:46:20",
															"statements": [
																{
																	"expression": {
																		"id": 3598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "15860:3:20",
																		"subExpression": {
																			"id": 3597,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3569,
																			"src": "15862:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3599,
																	"nodeType": "ExpressionStatement",
																	"src": "15860:3:20"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3572,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3569,
														"src": "15579:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3573,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3552,
														"src": "15583:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15579:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3602,
												"initializationExpression": {
													"assignments": [
														3569
													],
													"declarations": [
														{
															"constant": false,
															"id": 3569,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15566:1:20",
															"nodeType": "VariableDeclaration",
															"scope": 3602,
															"src": "15558:9:20",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3568,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15558:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3571,
													"initialValue": {
														"id": 3570,
														"name": "_offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "15570:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15558:19:20"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "15553:335:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3604,
															"name": "_offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3515,
															"src": "15950:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3605,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3552,
																"src": "15959:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3606,
																"name": "_offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3515,
																"src": "15965:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15959:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3603,
														"name": "BatchProcessed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "15935:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15935:38:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3609,
												"nodeType": "EmitStatement",
												"src": "15930:43:20"
											}
										]
									},
									"documentation": {
										"id": 3510,
										"nodeType": "StructuredDocumentation",
										"src": "14476:341:20",
										"text": " @notice Batch processes whitelist additions with offset and limit to prevent DOS\n @param _accounts Array of addresses to whitelist\n @param _offset Starting index for processing\n @param _limit Maximum number of addresses to process\n @dev Implements bounded batch processing to avoid gas limit issues"
									},
									"functionSelector": "bfab3b9e",
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3520,
													"name": "_COMPLIANCE_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2920,
													"src": "14955:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3521,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3519,
												"name": "onlyRole",
												"nameLocations": [
													"14946:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "14946:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "14946:26:20"
										}
									],
									"name": "processBatch",
									"nameLocation": "14831:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "14872:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14853:28:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3511,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14853:7:20",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3512,
													"nodeType": "ArrayTypeName",
													"src": "14853:9:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "_offset",
												"nameLocation": "14899:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14891:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14891:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3517,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "14924:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14916:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14916:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14843:93:20"
									},
									"returnParameters": {
										"id": 3522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14973:0:20"
									},
									"scope": 3842,
									"src": "14822:1158:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3711,
										"nodeType": "Block",
										"src": "16506:1007:20",
										"statements": [
											{
												"assignments": [
													3626
												],
												"declarations": [
													{
														"constant": false,
														"id": 3626,
														"mutability": "mutable",
														"name": "accountsLength",
														"nameLocation": "16575:14:20",
														"nodeType": "VariableDeclaration",
														"scope": 3711,
														"src": "16567:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16567:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3629,
												"initialValue": {
													"expression": {
														"id": 3627,
														"name": "_accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3615,
														"src": "16592:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16602:6:20",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16592:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16567:41:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3631,
																"name": "accountsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3626,
																"src": "16626:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16644:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16626:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d707479206163636f756e7473206172726179",
															"id": 3634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16647:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67",
																"typeString": "literal_string \"Empty accounts array\""
															},
															"value": "Empty accounts array"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c638111d040305112ae57aafad451fcec0f9464efdf816f9e872f932cb4bc67",
																"typeString": "literal_string \"Empty accounts array\""
															}
														],
														"id": 3630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16618:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16618:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3636,
												"nodeType": "ExpressionStatement",
												"src": "16618:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3638,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3619,
																"src": "16688:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16698:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16688:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c696d6974",
															"id": 3641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16701:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
																"typeString": "literal_string \"Invalid limit\""
															},
															"value": "Invalid limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
																"typeString": "literal_string \"Invalid limit\""
															}
														],
														"id": 3637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16680:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16680:37:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3643,
												"nodeType": "ExpressionStatement",
												"src": "16680:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3645,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3619,
																"src": "16805:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3646,
																	"name": "_MAX_BATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "16814:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16827:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16814:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16805:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463682073697a6520746f6f206c61726765",
															"id": 3650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16830:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
																"typeString": "literal_string \"Batch size too large\""
															},
															"value": "Batch size too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_879e72fd9a9dcabfcb1421a47c1e7854a1b3c57d5327481cc50430e70e6c5d7f",
																"typeString": "literal_string \"Batch size too large\""
															}
														],
														"id": 3644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16797:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16797:56:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3652,
												"nodeType": "ExpressionStatement",
												"src": "16797:56:20"
											},
											{
												"assignments": [
													3654
												],
												"declarations": [
													{
														"constant": false,
														"id": 3654,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "16880:3:20",
														"nodeType": "VariableDeclaration",
														"scope": 3711,
														"src": "16872:11:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16872:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3658,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3655,
														"name": "_offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "16886:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3656,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3619,
														"src": "16896:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16886:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16872:30:20"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3659,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3654,
														"src": "16985:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3660,
															"name": "accountsLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3626,
															"src": "16992:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17009:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "16992:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16985:25:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3669,
												"nodeType": "IfStatement",
												"src": "16981:76:20",
												"trueBody": {
													"id": 3668,
													"nodeType": "Block",
													"src": "17012:45:20",
													"statements": [
														{
															"expression": {
																"id": 3666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3664,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3654,
																	"src": "17026:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3665,
																	"name": "accountsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3626,
																	"src": "17032:14:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17026:20:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3667,
															"nodeType": "ExpressionStatement",
															"src": "17026:20:20"
														}
													]
												}
											},
											{
												"body": {
													"id": 3702,
													"nodeType": "Block",
													"src": "17122:299:20",
													"statements": [
														{
															"assignments": [
																3678
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3678,
																	"mutability": "mutable",
																	"name": "account",
																	"nameLocation": "17144:7:20",
																	"nodeType": "VariableDeclaration",
																	"scope": 3702,
																	"src": "17136:15:20",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3677,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17136:7:20",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3682,
															"initialValue": {
																"baseExpression": {
																	"id": 3679,
																	"name": "_accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3615,
																	"src": "17154:9:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3681,
																"indexExpression": {
																	"id": 3680,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3671,
																	"src": "17164:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17154:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17136:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3684,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3678,
																			"src": "17235:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 3687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17254:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 3686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17246:7:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 3685,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "17246:7:20",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17246:10:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "17235:21:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e7420696e206261746368",
																		"id": 3690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17258:26:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3",
																			"typeString": "literal_string \"Invalid account in batch\""
																		},
																		"value": "Invalid account in batch"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9c0d7d11ec311d71a61abd25778338bd821bd4c3895f3f17b5cfc5b294754fc3",
																			"typeString": "literal_string \"Invalid account in batch\""
																		}
																	],
																	"id": 3683,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17227:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17227:58:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3692,
															"nodeType": "ExpressionStatement",
															"src": "17227:58:20"
														},
														{
															"expression": {
																"id": 3696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "17312:26:20",
																"subExpression": {
																	"baseExpression": {
																		"id": 3693,
																		"name": "_whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2944,
																		"src": "17319:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3695,
																	"indexExpression": {
																		"id": 3694,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3678,
																		"src": "17330:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17319:19:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3697,
															"nodeType": "ExpressionStatement",
															"src": "17312:26:20"
														},
														{
															"id": 3701,
															"nodeType": "UncheckedBlock",
															"src": "17365:46:20",
															"statements": [
																{
																	"expression": {
																		"id": 3699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "17393:3:20",
																		"subExpression": {
																			"id": 3698,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3671,
																			"src": "17395:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3700,
																	"nodeType": "ExpressionStatement",
																	"src": "17393:3:20"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3674,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3671,
														"src": "17112:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3675,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3654,
														"src": "17116:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17112:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3703,
												"initializationExpression": {
													"assignments": [
														3671
													],
													"declarations": [
														{
															"constant": false,
															"id": 3671,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17099:1:20",
															"nodeType": "VariableDeclaration",
															"scope": 3703,
															"src": "17091:9:20",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3670,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17091:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3673,
													"initialValue": {
														"id": 3672,
														"name": "_offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "17103:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17091:19:20"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "17086:335:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3705,
															"name": "_offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3617,
															"src": "17483:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3706,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3654,
																"src": "17492:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3707,
																"name": "_offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3617,
																"src": "17498:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17492:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3704,
														"name": "BatchProcessed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "17468:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17468:38:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3710,
												"nodeType": "EmitStatement",
												"src": "17463:43:20"
											}
										]
									},
									"documentation": {
										"id": 3612,
										"nodeType": "StructuredDocumentation",
										"src": "15986:352:20",
										"text": " @notice Batch processes whitelist removals with offset and limit to prevent DOS\n @param _accounts Array of addresses to remove from whitelist\n @param _offset Starting index for processing\n @param _limit Maximum number of addresses to process\n @dev Implements bounded batch processing to avoid gas limit issues"
									},
									"functionSelector": "1663a066",
									"id": 3712,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3622,
													"name": "_COMPLIANCE_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2920,
													"src": "16488:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3623,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3621,
												"name": "onlyRole",
												"nameLocations": [
													"16479:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "16479:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "16479:26:20"
										}
									],
									"name": "batchRemoveFromWhitelist",
									"nameLocation": "16352:24:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3615,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "16405:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "16386:28:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16386:7:20",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3614,
													"nodeType": "ArrayTypeName",
													"src": "16386:9:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "_offset",
												"nameLocation": "16432:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "16424:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16424:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "16457:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "16449:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16449:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16376:93:20"
									},
									"returnParameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16506:0:20"
									},
									"scope": 3842,
									"src": "16343:1170:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3727,
										"nodeType": "Block",
										"src": "17930:68:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3719,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "17940:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17940:8:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3721,
												"nodeType": "ExpressionStatement",
												"src": "17940:8:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3723,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "17978:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17978:12:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3722,
														"name": "ContractPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2996,
														"src": "17963:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17963:28:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3726,
												"nodeType": "EmitStatement",
												"src": "17958:33:20"
											}
										]
									},
									"documentation": {
										"id": 3713,
										"nodeType": "StructuredDocumentation",
										"src": "17702:174:20",
										"text": " @notice Pauses all token transfers and minting/burning operations\n @dev Only callable by addresses with PAUSER_ROLE, emits Paused event automatically"
									},
									"functionSelector": "8456cb59",
									"id": 3728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3716,
													"name": "_PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2926,
													"src": "17916:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3717,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3715,
												"name": "onlyRole",
												"nameLocations": [
													"17907:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "17907:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "17907:22:20"
										}
									],
									"name": "pause",
									"nameLocation": "17890:5:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17895:2:20"
									},
									"returnParameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17930:0:20"
									},
									"scope": 3842,
									"src": "17881:117:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3743,
										"nodeType": "Block",
										"src": "18234:72:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3735,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "18244:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18244:10:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3737,
												"nodeType": "ExpressionStatement",
												"src": "18244:10:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3739,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "18286:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18286:12:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3738,
														"name": "ContractUnpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "18269:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18269:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3742,
												"nodeType": "EmitStatement",
												"src": "18264:35:20"
											}
										]
									},
									"documentation": {
										"id": 3729,
										"nodeType": "StructuredDocumentation",
										"src": "18004:174:20",
										"text": " @notice Unpauses token transfers and minting/burning operations\n @dev Only callable by addresses with PAUSER_ROLE, emits Unpaused event automatically"
									},
									"functionSelector": "3f4ba83a",
									"id": 3744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3732,
													"name": "_PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2926,
													"src": "18220:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3731,
												"name": "onlyRole",
												"nameLocations": [
													"18211:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "18211:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "18211:22:20"
										}
									],
									"name": "unpause",
									"nameLocation": "18192:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18199:2:20"
									},
									"returnParameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18234:0:20"
									},
									"scope": 3842,
									"src": "18183:123:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3766,
										"nodeType": "Block",
										"src": "18762:155:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3753,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3747,
																"src": "18823:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18843:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18835:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3754,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18835:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18835:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18823:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e742061646472657373",
															"id": 3759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18847:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															},
															"value": "Invalid account address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858e37931a269b6f566cd66d864cae182dd4ba640f4f32d6f7bcd0dbe063802c",
																"typeString": "literal_string \"Invalid account address\""
															}
														],
														"id": 3752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18815:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18815:58:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3761,
												"nodeType": "ExpressionStatement",
												"src": "18815:58:20"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3762,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "18890:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3764,
													"indexExpression": {
														"id": 3763,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "18901:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18890:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3751,
												"id": 3765,
												"nodeType": "Return",
												"src": "18883:27:20"
											}
										]
									},
									"documentation": {
										"id": 3745,
										"nodeType": "StructuredDocumentation",
										"src": "18493:194:20",
										"text": " @notice Checks if an address is whitelisted for token operations\n @param _account The address to check\n @return True if the address is whitelisted, false otherwise"
									},
									"functionSelector": "3af32abf",
									"id": 3767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "18701:13:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "18723:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "18715:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18715:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:18:20"
									},
									"returnParameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "18756:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18756:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18755:6:20"
									},
									"scope": 3842,
									"src": "18692:225:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3786,
										"nodeType": "Block",
										"src": "19147:235:20",
										"statements": [
											{
												"assignments": [
													3774
												],
												"declarations": [
													{
														"constant": false,
														"id": 3774,
														"mutability": "mutable",
														"name": "currentSupply_",
														"nameLocation": "19224:14:20",
														"nodeType": "VariableDeclaration",
														"scope": 3786,
														"src": "19216:22:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19216:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3776,
												"initialValue": {
													"id": 3775,
													"name": "_currentSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "19241:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19216:39:20"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3777,
															"name": "CAP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "19328:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3778,
															"name": "currentSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3774,
															"src": "19334:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19328:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 3783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19374:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19328:47:20",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3780,
															"name": "CAP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "19351:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3781,
															"name": "currentSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3774,
															"src": "19357:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19351:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3772,
												"id": 3785,
												"nodeType": "Return",
												"src": "19321:54:20"
											}
										]
									},
									"documentation": {
										"id": 3768,
										"nodeType": "StructuredDocumentation",
										"src": "18923:158:20",
										"text": " @notice Returns the remaining tokens that can be minted before hitting the cap\n @return The number of tokens that can still be minted"
									},
									"functionSelector": "f76e95e5",
									"id": 3787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingMintable",
									"nameLocation": "19095:17:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19112:2:20"
									},
									"returnParameters": {
										"id": 3772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3787,
												"src": "19138:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19138:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19137:9:20"
									},
									"scope": 3842,
									"src": "19086:296:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										965
									],
									"body": {
										"id": 3796,
										"nodeType": "Block",
										"src": "19618:38:20",
										"statements": [
											{
												"expression": {
													"id": 3794,
													"name": "_currentSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "19635:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3793,
												"id": 3795,
												"nodeType": "Return",
												"src": "19628:21:20"
											}
										]
									},
									"documentation": {
										"id": 3788,
										"nodeType": "StructuredDocumentation",
										"src": "19388:163:20",
										"text": " @notice Returns the current total supply of tokens\n @return The current total supply\n @dev Gas-optimized version using cached supply"
									},
									"functionSelector": "18160ddd",
									"id": 3797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "19565:11:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19591:8:20"
									},
									"parameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19576:2:20"
									},
									"returnParameters": {
										"id": 3793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "19609:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19609:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19608:9:20"
									},
									"scope": 3842,
									"src": "19556:100:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3805,
										"nodeType": "Block",
										"src": "19837:27:20",
										"statements": [
											{
												"expression": {
													"id": 3803,
													"name": "CAP",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2939,
													"src": "19854:3:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3802,
												"id": 3804,
												"nodeType": "Return",
												"src": "19847:10:20"
											}
										]
									},
									"documentation": {
										"id": 3798,
										"nodeType": "StructuredDocumentation",
										"src": "19662:123:20",
										"text": " @notice Returns the maximum total supply cap\n @return The maximum total supply that can ever exist"
									},
									"functionSelector": "355274ea",
									"id": 3806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "19799:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19802:2:20"
									},
									"returnParameters": {
										"id": 3802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3806,
												"src": "19828:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19828:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19827:9:20"
									},
									"scope": 3842,
									"src": "19790:74:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3814,
										"nodeType": "Block",
										"src": "20091:34:20",
										"statements": [
											{
												"expression": {
													"id": 3812,
													"name": "_MAX_BATCH",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2936,
													"src": "20108:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3811,
												"id": 3813,
												"nodeType": "Return",
												"src": "20101:17:20"
											}
										]
									},
									"documentation": {
										"id": 3807,
										"nodeType": "StructuredDocumentation",
										"src": "19870:160:20",
										"text": " @notice Returns the maximum batch size for batch operations\n @return The maximum number of addresses that can be processed in one batch"
									},
									"functionSelector": "2913daa0",
									"id": 3815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxBatchSize",
									"nameLocation": "20044:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20056:2:20"
									},
									"returnParameters": {
										"id": 3811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3815,
												"src": "20082:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20082:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:9:20"
									},
									"scope": 3842,
									"src": "20035:90:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 3835,
										"nodeType": "Block",
										"src": "20670:135:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3826,
																"name": "_newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3818,
																"src": "20731:18:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20761:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20753:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3827,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20753:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 3830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20753:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20731:32:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696d706c656d656e746174696f6e2061646472657373",
															"id": 3832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20765:32:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324",
																"typeString": "literal_string \"Invalid implementation address\""
															},
															"value": "Invalid implementation address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324",
																"typeString": "literal_string \"Invalid implementation address\""
															}
														],
														"id": 3825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20723:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20723:75:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3834,
												"nodeType": "ExpressionStatement",
												"src": "20723:75:20"
											}
										]
									},
									"documentation": {
										"id": 3816,
										"nodeType": "StructuredDocumentation",
										"src": "20317:204:20",
										"text": " @notice Authorizes contract upgrades\n @param _newImplementation The address of the new implementation contract\n @dev Only addresses with UPGRADER_ROLE can authorize upgrades"
									},
									"id": 3836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3822,
													"name": "_UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2932,
													"src": "20649:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3823,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3821,
												"name": "onlyRole",
												"nameLocations": [
													"20640:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "20640:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "20640:24:20"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "20535:17:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3820,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20622:8:20"
									},
									"parameters": {
										"id": 3819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3818,
												"mutability": "mutable",
												"name": "_newImplementation",
												"nameLocation": "20561:18:20",
												"nodeType": "VariableDeclaration",
												"scope": 3836,
												"src": "20553:26:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20553:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20552:28:20"
									},
									"returnParameters": {
										"id": 3824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20670:0:20"
									},
									"scope": 3842,
									"src": "20526:279:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3837,
										"nodeType": "StructuredDocumentation",
										"src": "20989:92:20",
										"text": "@dev Reserved storage space for future upgrades to maintain storage layout compatibility"
									},
									"id": 3841,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "21106:5:20",
									"nodeType": "VariableDeclaration",
									"scope": 3842,
									"src": "21086:25:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$47_storage",
										"typeString": "uint256[47]"
									},
									"typeName": {
										"baseType": {
											"id": 3838,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "21086:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3840,
										"length": {
											"hexValue": "3437",
											"id": 3839,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21094:2:20",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_47_by_1",
												"typeString": "int_const 47"
											},
											"value": "47"
										},
										"nodeType": "ArrayTypeName",
										"src": "21086:11:20",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
											"typeString": "uint256[47]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3843,
							"src": "1094:20020:20",
							"usedErrors": [
								379,
								382,
								657,
								662,
								1514,
								1517,
								1666,
								1814,
								1817,
								1930,
								1935,
								1940,
								1949,
								1954,
								1959,
								2075,
								2088,
								2473,
								2736,
								3013,
								3020,
								3023,
								3026,
								3029,
								3034,
								3037
							],
							"usedEvents": [
								387,
								1506,
								1511,
								1826,
								1835,
								1844,
								1895,
								2371,
								2380,
								2954,
								2961,
								2968,
								2975,
								2982,
								2991,
								2996,
								3001,
								3010
							]
						}
					],
					"src": "51:21063:20"
				},
				"id": 20
			}
		}
	}
}